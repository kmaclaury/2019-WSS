(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    103799,       2232]
NotebookOptionsPosition[    100356,       2168]
NotebookOutlinePosition[    100698,       2183]
CellTagsIndexPosition[    100655,       2180]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["RNN Sequence 10", "Section",
 CellChangeTimes->{{3.771453870960218*^9, 
  3.771453881037602*^9}},ExpressionUUID->"ef771bcb-58a0-4479-8cec-\
315a818b978d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mldata", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\kylem\\\\Documents\\\\GitHub\\\\2019-WSS\\\\Final \
Project\\\\Drafts\\\\kyle\\\\mldata.wxf\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.771501058473509*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e09b966e-77c1-4172-8167-5078ab3dc601"],

Cell[BoxData[
 RowBox[{"columnHeads", "=", 
  RowBox[{"v", "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<timeStep\>\"", ",", "\"\<temperature\>\"", ",", 
     "\"\<BusinessDay\>\"", ",", "\"\<Lag1\>\"", ",", "\"\<Lag2\>\"", ",", 
     "\"\<Lag3\>\"", ",", "\"\<Lag4\>\"", ",", "\"\<Lag5\>\"", ",", 
     "\"\<Lag6\>\"", ",", "\"\<Lag7\>\"", ",", "\"\<Lag8\>\"", ",", 
     "\"\<Lag9\>\"", ",", "\"\<Lag10\>\"", ",", "\"\<Lag11\>\"", ",", 
     "\"\<Lag12\>\"", ",", "\"\<Lag13\>\"", ",", "\"\<Lag14\>\"", ",", 
     "\"\<Lag15\>\"", ",", "\"\<Lag16\>\"", ",", "\"\<Lag17\>\"", ",", 
     "\"\<Lag18\>\"", ",", "\"\<Lag19\>\"", ",", "\"\<Lag20\>\"", ",", 
     "\"\<Lag21\>\"", ",", "\"\<Lag22\>\"", ",", "\"\<Lag23\>\"", ",", 
     "\"\<Lag24\>\"", ",", "\"\<Lag25\>\"", ",", "\"\<Lag26\>\"", ",", 
     "\"\<Lag27\>\"", ",", "\"\<Lag28\>\"", ",", "\"\<Lag29\>\"", ",", 
     "\"\<Lag30\>\"", ",", "\"\<Load\>\""}], "}"}]}]}]], "Input",ExpressionUUI\
D->"31cca320-f34a-4970-beda-6d7649b26992"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mldataAssocs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<timeStep\>\"", ",", "\"\<temperature\>\"", ",", 
         "\"\<BusinessDay\>\"", ",", "\"\<Lag1\>\"", ",", "\"\<Lag2\>\"", 
         ",", "\"\<Lag3\>\"", ",", "\"\<Lag4\>\"", ",", "\"\<Lag5\>\"", ",", 
         "\"\<Lag6\>\"", ",", "\"\<Lag7\>\"", ",", "\"\<Lag8\>\"", ",", 
         "\"\<Lag9\>\"", ",", "\"\<Lag10\>\"", ",", "\"\<Lag11\>\"", ",", 
         "\"\<Lag12\>\"", ",", "\"\<Lag13\>\"", ",", "\"\<Lag14\>\"", ",", 
         "\"\<Lag15\>\"", ",", "\"\<Lag16\>\"", ",", "\"\<Lag17\>\"", ",", 
         "\"\<Lag18\>\"", ",", "\"\<Lag19\>\"", ",", "\"\<Lag20\>\"", ",", 
         "\"\<Lag21\>\"", ",", "\"\<Lag22\>\"", ",", "\"\<Lag23\>\"", ",", 
         "\"\<Lag24\>\"", ",", "\"\<Lag25\>\"", ",", "\"\<Lag26\>\"", ",", 
         "\"\<Lag27\>\"", ",", "\"\<Lag28\>\"", ",", "\"\<Lag29\>\"", ",", 
         "\"\<Lag30\>\"", ",", "\"\<Load\>\""}], "}"}], "\[Rule]", "#"}], 
      "]"}], "&"}], "/@", "mldata"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771496807296297*^9, 3.7714968641576405`*^9}, 
   3.7714970426475835`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"dabc3f74-e286-459a-8d85-b2ae153d13f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mldataAssocs", "[", 
  RowBox[{"[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7714975201669292`*^9, 3.7714975847324347`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"e4597614-2e5f-4a28-bf44-783f21f35db0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"timeStep\"\>", "\[Rule]", "79.`"}], ",", 
   RowBox[{"\<\"temperature\"\>", "\[Rule]", "10.6`"}], ",", 
   RowBox[{"\<\"BusinessDay\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Lag1\"\>", "\[Rule]", "10719.06`"}], ",", 
   RowBox[{"\<\"Lag2\"\>", "\[Rule]", "9878.77`"}], ",", 
   RowBox[{"\<\"Lag3\"\>", "\[Rule]", "9625.04`"}], ",", 
   RowBox[{"\<\"Lag4\"\>", "\[Rule]", "9670.69`"}], ",", 
   RowBox[{"\<\"Lag5\"\>", "\[Rule]", "9879.88`"}], ",", 
   RowBox[{"\<\"Lag6\"\>", "\[Rule]", "10225.52`"}], ",", 
   RowBox[{"\<\"Lag7\"\>", "\[Rule]", "11432.73`"}], ",", 
   RowBox[{"\<\"Lag8\"\>", "\[Rule]", "12074.8`"}], ",", 
   RowBox[{"\<\"Lag9\"\>", "\[Rule]", "13270.4`"}], ",", 
   RowBox[{"\<\"Lag10\"\>", "\[Rule]", "14301.63`"}], ",", 
   RowBox[{"\<\"Lag11\"\>", "\[Rule]", "14871.85`"}], ",", 
   RowBox[{"\<\"Lag12\"\>", "\[Rule]", "14446.44`"}], ",", 
   RowBox[{"\<\"Lag13\"\>", "\[Rule]", "13936.67`"}], ",", 
   RowBox[{"\<\"Lag14\"\>", "\[Rule]", "13631.34`"}], ",", 
   RowBox[{"\<\"Lag15\"\>", "\[Rule]", "13469.64`"}], ",", 
   RowBox[{"\<\"Lag16\"\>", "\[Rule]", "13554.3`"}], ",", 
   RowBox[{"\<\"Lag17\"\>", "\[Rule]", "13686.4`"}], ",", 
   RowBox[{"\<\"Lag18\"\>", "\[Rule]", "13783.53`"}], ",", 
   RowBox[{"\<\"Lag19\"\>", "\[Rule]", "13648.88`"}], ",", 
   RowBox[{"\<\"Lag20\"\>", "\[Rule]", "13316.6`"}], ",", 
   RowBox[{"\<\"Lag21\"\>", "\[Rule]", "12717.63`"}], ",", 
   RowBox[{"\<\"Lag22\"\>", "\[Rule]", "11761.35`"}], ",", 
   RowBox[{"\<\"Lag23\"\>", "\[Rule]", "10711.58`"}], ",", 
   RowBox[{"\<\"Lag24\"\>", "\[Rule]", "10056.5`"}], ",", 
   RowBox[{"\<\"Lag25\"\>", "\[Rule]", "9814.86`"}], ",", 
   RowBox[{"\<\"Lag26\"\>", "\[Rule]", "9648.07`"}], ",", 
   RowBox[{"\<\"Lag27\"\>", "\[Rule]", "9658.6`"}], ",", 
   RowBox[{"\<\"Lag28\"\>", "\[Rule]", "9829.64`"}], ",", 
   RowBox[{"\<\"Lag29\"\>", "\[Rule]", "10148.67`"}], ",", 
   RowBox[{"\<\"Lag30\"\>", "\[Rule]", "10647.27`"}], ",", 
   RowBox[{"\<\"Load\"\>", "\[Rule]", "12654.88`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.771501793835417*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"edf36beb-3dc5-41a7-beb1-38b4ff50471d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chunkSize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allDataWithTemp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"Most", "[", "#", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Load\>\"", ",", "\"\<temperature\>\""}], "}"}]}], 
        "]"}], ")"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Last", "[", "#", "]"}], "[", 
        RowBox[{"[", "\"\<Load\>\"", "]"}], "]"}], ")"}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{"mldataAssocs", ",", 
      RowBox[{"chunkSize", "+", "1"}], ",", "1"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.771497031772382*^9, 3.7714970925222178`*^9}, {
   3.7714972790153356`*^9, 3.771497374862824*^9}, {3.771497418843066*^9, 
   3.7714974829864087`*^9}, 3.7714975270540504`*^9, {3.771497643097262*^9, 
   3.7714976725708485`*^9}, 3.7714977140151863`*^9, {3.771498301634631*^9, 
   3.7714983038876143`*^9}, {3.771498346238533*^9, 3.771498375790669*^9}, 
   3.7715009989628935`*^9, 3.771501092160157*^9, {3.7715011476119785`*^9, 
   3.7715012131976194`*^9}, {3.771501814164095*^9, 3.7715018173157873`*^9}, {
   3.7715023121907606`*^9, 3.771502317452485*^9}, {3.7715023552314706`*^9, 
   3.7715023684846077`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cec0ced0-73ee-4552-86de-0cb2da892e1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allDataWithTemp", "[", 
  RowBox[{"[", 
   RowBox[{";;", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7715012228272567`*^9, 3.771501237042012*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"bf51de4c-5c9b-453f-97c1-221d1cd314ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10605.9`", ",", "13.300766884330681`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10775.74`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11856.24`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12979.59`", ",", "13.299367320442135`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13753.65`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13870.08`", ",", "12.800298232784295`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13955.18`", ",", "12.20040900495877`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13865.3`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13643.69`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13457.88`", ",", "12.799556911302023`"}], "}"}]}], "}"}], 
    "\[Rule]", "13354.17`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10775.74`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11856.24`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12979.59`", ",", "13.299367320442135`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13753.65`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13870.08`", ",", "12.800298232784295`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13955.18`", ",", "12.20040900495877`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13865.3`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13643.69`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13457.88`", ",", "12.799556911302023`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13354.17`", ",", "12.8`"}], "}"}]}], "}"}], "\[Rule]", 
    "13466.12`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"11856.24`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12979.59`", ",", "13.299367320442135`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13753.65`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13870.08`", ",", "12.800298232784295`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13955.18`", ",", "12.20040900495877`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13865.3`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13643.69`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13457.88`", ",", "12.799556911302023`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13354.17`", ",", "12.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13466.12`", ",", "13.299260182226433`"}], "}"}]}], "}"}], 
    "\[Rule]", "13773.01`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"12979.59`", ",", "13.299367320442135`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13753.65`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13870.08`", ",", "12.800298232784295`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13955.18`", ",", "12.20040900495877`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13865.3`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13643.69`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13457.88`", ",", "12.799556911302023`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13354.17`", ",", "12.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13466.12`", ",", "13.299260182226433`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13773.01`", ",", "13.3`"}], "}"}]}], "}"}], "\[Rule]", 
    "14224.43`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"13753.65`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13870.08`", ",", "12.800298232784295`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13955.18`", ",", "12.20040900495877`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13865.3`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13643.69`", ",", "12.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13457.88`", ",", "12.799556911302023`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13354.17`", ",", "12.8`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13466.12`", ",", "13.299260182226433`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13773.01`", ",", "13.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"14224.43`", ",", "13.3`"}], "}"}]}], "}"}], "\[Rule]", 
    "14401.84`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771501808200865*^9, 3.7715018246622496`*^9}, 
   3.771502000601471*^9, 3.7715023758245444`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6b50a22a-191a-4e82-8df0-17b523afd317"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainingdata", ",", "testdata"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"allDataWithTemp", ",", "45000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.737216377598666*^9, 3.7372163854646373`*^9}, {
  3.7372174399282813`*^9, 3.7372174435098157`*^9}, {3.771425598726018*^9, 
  3.7714255998920107`*^9}, {3.771502037045251*^9, 3.771502040960859*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0626b4bf-93d6-48b4-8d7d-606e20e9e70c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnn", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GatedRecurrentLayer", "[", 
       RowBox[{"32", ",", 
        RowBox[{"\"\<Dropout\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<VariationalInput\>\"", "\[Rule]", "0.3"}], "}"}]}], 
        ",", 
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Varying\>\"", ",", "10"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"GatedRecurrentLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"\"\<Dropout\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<VariationalInput\>\"", "\[Rule]", "0.3"}], "}"}]}]}], 
       "]"}], ",", 
      RowBox[{"GatedRecurrentLayer", "[", 
       RowBox[{"64", ",", 
        RowBox[{"\"\<Dropout\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<VariationalInput\>\"", "\[Rule]", "0.3"}], "}"}]}]}], 
       "]"}], ",", 
      RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "128", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7371402652794104`*^9, 3.73714026941372*^9}, {
   3.7372164027225027`*^9, 3.737216418147526*^9}, {3.7372165925472975`*^9, 
   3.7372165944106045`*^9}, {3.7372227978305197`*^9, 
   3.7372228008705745`*^9}, {3.737222908985196*^9, 3.737222923116688*^9}, {
   3.737225431871337*^9, 3.737225462002136*^9}, 3.7373023115999365`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"1627ceac-5684-4dd3-bfc7-8c1b04e835b1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"10\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputSize" -> 32, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[
                    Association["VariationalInput" -> 0.3]], "$InputSize" -> 
                    10, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1976105531]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 32}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 32}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 32}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 32}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[
                    Association["VariationalInput" -> 0.3]], "$InputSize" -> 
                    32, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1976105531]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[
                    Association["VariationalInput" -> 0.3]], "$InputSize" -> 
                    64, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1976105531]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "12.0.10"]], "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    2, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "2", "States", "State"], {
                    3, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "3", "States", "State"]]],
                    NeuralNetworks`Private`NetChain`opart = {
                    "Inputs", "Input"}, 
                   NeuralNetworks`Private`NetChain`part = {"Inputs", "Input"},
                    NeuralNetworks`Private`NetChain`selected = 
                   NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1976105531], 10}, 
                    NeuralNetworks`RealT]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"10\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"32\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"64\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"64\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {242., {91.5, 97.5}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7714540499885774`*^9, 3.7715018406763077`*^9, 
  3.7715020502601523`*^9, 3.7715023926178665`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"6dc73074-ca47-404d-bc2f-ab104d98fa92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"trainednet", " ", "=", "  ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"rnn", ",", "trainingdata", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "testdata"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "800"}], ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<ADAM\>\""}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "100"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nso", "=", 
  RowBox[{"trainednet", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.737140304926762*^9, 3.7371403136958346`*^9}, {
   3.7372165852435102`*^9, 3.7372165885599484`*^9}, {3.7372166494943748`*^9, 
   3.737216660011284*^9}, {3.737222928053795*^9, 3.7372229291085963`*^9}, {
   3.771425621890419*^9, 3.771425625290434*^9}, {3.7714413379649453`*^9, 
   3.7714413717107525`*^9}, 3.771454119154849*^9, {3.771499584720186*^9, 
   3.7714996483982697`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"14cb6ab1-b312-498d-a164-51c1bdadd143"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain","invindim3",
   "\"Data provided to port \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\"}]\\)\\\" should be \
\\!\\(\\*RowBox[{\\\"\\\\\\\"a non-empty list of n\[Times]10 matrices of real \
numbers\\\\\\\"\\\"}]\\), but was \\!\\(\\*RowBox[{\\\"\\\\\\\"a 10\[Times]2 \
matrix of real numbers\\\\\\\"\\\"}]\\).\"",2,17,2,24136949551518385947,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7715018493108997`*^9, 3.771502056016942*^9, 
  3.7715023977861123`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"386c5371-a01d-49a7-8cdf-33ecefeb9422"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.771454576661124*^9, 3.7714996783349404`*^9, 
  3.771499990621109*^9, 3.771501849328663*^9, 3.771502056029914*^9, 
  3.771502397798725*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"9597aa49-7484-45c2-ab23-8f20d61b4a0e"],

Cell[BoxData[
 RowBox[{"$Failed", "[", "\<\"TrainedNet\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771454576661124*^9, 3.7714996783349404`*^9, 
  3.771499990621109*^9, 3.771501849328663*^9, 3.771502056029914*^9, 
  3.771502397799756*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"c3947826-0c16-400c-87ff-dae059f31010"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771499258440802*^9, 3.7714992744198985`*^9}, 
   3.77149984527371*^9},ExpressionUUID->"a925d668-172b-4fc1-9599-\
ffbbbbc81a52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"PredictorMeasurements", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Predict", "[", 
       RowBox[{"trainingdata", ",", 
        RowBox[{"Method", "\[Rule]", "#"}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<DirectTraining\>\""}]}], 
       "]"}], ",", "testdata", ",", " ", "\"\<MeanSquare\>\""}], "]"}], "&"}],
    ",", 
   RowBox[{"{", "\"\<RandomForest\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737217107076222*^9, 3.737217130234973*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"08b6e8fe-aeca-432e-98ae-293e69c3b764"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"RandomForest\"\>", "\[Rule]", "367478.18601391464`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.771454597573434*^9, 3.771454787588606*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e8131b23-4326-4848-b78c-2d84a5ea3eb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "111", "]"}], ";", 
  RowBox[{"rsample", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"testdata", ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.737217890368599*^9, 3.7372179748421526`*^9}, {
  3.7372180559538984`*^9, 3.7372180688156443`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a9cc8018-e612-4311-8c77-43dc6097e868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "15571.09`", ",", "15650.57`", ",", "15550.`", ",", "15302.72`", ",", 
       "15084.68`", ",", "15006.45`", ",", "15040.44`", ",", "15374.55`", ",",
        "15861.36`", ",", "16102.74`"}], "}"}], "}"}], "\[Rule]", 
    "16253.81`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "11153.28`", ",", "10787.98`", ",", "10716.01`", ",", "10766.78`", ",", 
       "11116.34`", ",", "11535.58`", ",", "12580.08`", ",", "13398.36`", ",",
        "13455.65`", ",", "13345.32`"}], "}"}], "}"}], "\[Rule]", 
    "13460.64`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771454793142868*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ba665d27-f36d-4922-b2d5-1b340272641b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainednet", "[", 
  RowBox[{"rsample", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.737218035152339*^9, 3.7372180409675937`*^9}, {
  3.77145465771443*^9, 3.7714546590769806`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c95bfb30-e39e-4977-9bfc-2313e67fbd93"],

Cell[BoxData[
 RowBox[{
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             
             TemplateBox[{
              ",","\",\"",
               TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "5700"}, 
                "RowWithSeparators"],
               TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "100"}, 
                "RowWithSeparators"],
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"time:\"", "\"5.9min\""}, 
                "RowWithSeparators"],
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"examples/s:\"", "12884"}, 
                "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             
             TemplateBox[{
              ",","\",\"",
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"training examples:\"", "45000"}, 
                "RowWithSeparators"],
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"validation examples:\"", "13670"},
                 "RowWithSeparators"],
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"processed examples:\"", 
                 "4560000"}, "RowWithSeparators"],
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
                "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             
             TemplateBox[{
              ",","\",\"",
               TemplateBox[{
                "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
                "RowWithSeparators"],
               TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "800"},
                 "RowWithSeparators"],"\"CPU\""},
              "RowWithSeparators"]},
            {
             TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox["\"loss:\"", 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   RowBox[{"\"6.81\"", "\[Times]", 
                    SuperscriptBox["10", "\"6\""]}], 6.810218456069352*^6, 
                   AutoDelete -> True], ScientificForm[#, 3]& ]}, 
                "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             
             TemplateBox[{
              TemplateBox[{5}, "Spacer1"],StyleBox["\"validation\"", 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox["\"loss:\"", 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   RowBox[{"\"6.76\"", "\[Times]", 
                    SuperscriptBox["10", "\"6\""]}], 6.756998256624155*^6, 
                   AutoDelete -> True], ScientificForm[#, 3]& ]}, 
                "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[GridBox[{
                {"", 
                 ItemBox["\<\"rounds\"\>",
                  DefaultBaseStyle->"LabeledLabel"]},
                {
                 RotationBox[
                  ItemBox["\<\"loss\"\>",
                   DefaultBaseStyle->"LabeledLabel"],
                  BoxRotation->1.5708], 
                 GraphicsBox[
                  {AbsoluteThickness[1.25], {
                    {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
VW4Lj+X7xnsN0p/+VXk5jO8jdlo4ehW/qleJ+4oWI19q7h3R8X3GT4s7bWf9
ag3ivqrF9bdTsz7oo30oRYtfr3cpro4U9yUtrCPuLO1j5PtUnhYzv9/bdWS8
uK9qMSN1R+EINd9XK7QouHRn3jMF31drtag4usJzsJHvq01auNiHHDqqEfdV
LY5bFQb+puH7qp0Oo9tWfGkZz/dVmQ6f1OweNVPN91U/HQKdv/mzViHuqzoo
gr6wt1HzfTVFh788a3XPjXxfzdDB0Xf7rkQt31fzdOj/65PSj+LEffXD8y2t
OxV8X63QsXkTFl+l4ftqrQ4OFgO6OMfyfbVJh8rPWxwuRYv7qg5DItY2L9Tx
fdVOj+qN29R5kXxflekxQDjmk6zj+6qfHi/dFX9EsPjkJF+P0dnH16ew55tI
vx620VfuPmTfbyH9ergNzV7Tn9VXKOnXY9XRga1H2XzbSPr16GedP9yCvf+M
9OvhZ+XbNpvt4yGkX4+g6qLqy+x+i0i/HpbpG553YfinpJ+ds+Lmp7P4g0m/
AQN2zFHeZPkqJP0GfOJZP/0043tC+g0YUpQwZRX7fhDpN+DylxdbqxhfAek3
oGTNu/k72Pv/kn4D1rsVTLZizwNJvwGT/ug+YRY755N+A8olZlecGf4x6Tdg
ZN2Qhjr2PID0M/7HiwauZ/e7gfQbkCU/+OoL9vwR6Tfg2vPy3snMz/6k34jh
3omNb9j9ryf9Rmjq3S9/xvDNpN+IANyQ7WH1YSp4Iy4skt96xfKbR/qNUOSm
VU5m9d5E+o2Ypn+wzZzlx4/0G3FpcfeWTgy/jvQbMTQ8ue5DvT8k/UZ0Hym3
lrLnE0i/EWt6lZQmMf25pN+InEuHjA/YfTwg/UaY5Wzv6cie/x8zA+S4
                    "]]}, {}}, {
                    {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1:eJw11Ak8lHkYB3CKlU2K2mxeZiZHVjZHjlzlJ3KMY8YxRtrKarTrKtlSuimb
0tI6WmSrLUolrEqypYM2XYhKiy4jig5rdU3FPm/DfGY+8/nO+77zP57f858a
ttw/fJSCgoKEPuz3gPEL59wfnjjFrQzzG8jmYcXKHzM2XZQ5ZZ03sLu2iwf5
dWWk9Kt1uW/noWzKoaq4ZeOgopupa7OJh4qtpfSLJhSGZtyPj+Mh8+PYu5rV
k6E/XdGzP2zk/7QxzTA+JF3Ig+B5re/zWg4S0joFNg48TC7flfytZCq00rcN
3dDjQflltbQjXB8FGVNWmKuMjG+Irqb20zsbuZCGM/sFEUbIcxnQ6E3loukP
z0HlKGMsN6rwDgUXF++v/u5stAnSzcfcqnzBGZ7vDMhsrsZwszjYK7r9tXGs
GS5yvK47WnFwxSPxr1eV5njo5a9eVK+L6qU5PdfOWOAdZIP8cN3h9c2ElWzW
ln0yHRw/8Dc9YYl8U6tbhRk6KLjADmgFmTZTMnamDvIfDByadc4aoz+kmCx5
wAzvhw1MM27kb9/DIFVbn5Y4C+cKFvlOimKQZGtvdfW8LWy9ynHZm8HaIL8l
BRfsIP2o1iB2ZIb3zx79t0tz31szYBVyyQFm9sdXHyCHlu3us65xRNv6j+Gr
bBmI649zNWpno07w+6Qt9Lx8v+fgXm6EuBQM3L5s33DlshPqa6Vm6a4MuFkJ
NCIwJkZLKdudAcNOTwoYWKge1uQzw/VxRmu8mp4RzU/TWUc3r9MZizJbIiU+
DNQbD59UCZ+L+JuJhqt8GagutvRe9WQuDp+t+sVOwAzX0wW7DVcwxWTFDfx1
wi4XjJ1vGPUf+RO7PUtd0bvy1AEDIYN3ed8fNel2xa7YBmMhWV7/eYjysTgx
n9xXueafL57Ow4KmR/Yx5F53JdoiN9y/2tecTe6+mz6m46kbLDh3cuLJ8ry4
49Xa4m5n8kO2PM/c8XD0GuUCcuuWmQ3TIz0Qb5l09xCZnU1OjweK09I3JpLl
+fJEtLooaw/5pvmd7J96PXGTL07eR756PnTG4yg+pN2zn0nIl33ZDeejrr0w
ZTNZnkcvxMav6ygln40eTUvywuDWsjfseJUf0lJ/i/GG4vie/TXkkzvYgHhD
2byc40+W59cHMUydcxz5WJGF/6OXPmht7Tuzn3yYVuOz3Bc+zf9yS8gH2Xi+
8oVtf9eObWR53gXIGxswFEHO61xMiRGgSf2TuJF8/cxr/SRbITS6gz2ayZ5s
O6wR4o2vqNaULO8PIa4POBS+JbtOcN827b0Q7i56onzypRa1gIV2fkiI4/FP
kbGviZOV4Ifn4gzVJLK8n/zwOKglhK2Xo+miCkWZH/YqVqay9a1ih7f3R+Jj
FX4R2ZZdzlp/LBQtKQoly/vPH3fqI1d3ktl0tcv88cperJlG/nOiA70D0FJx
JSSDbNamQAkLwB5LWTBbD3m/BuCe6srq7WSTyJ2TKj8EQCIJ4nmRj7Db6RAI
JWm0Ejsfo/daxYbrA9H1oqGNR5b3dyD6I8pjisl6KQddMj8GojkxYtkAmcI1
/pqjCOqWzK8eZI4WOwMRko9V9RqR5eeBCHVpjgNs3rTZcn4S4WRy3Qk2rzkx
m+cUzg6C1UQv1dfkr6zZDg2CavKo3AnCkfMjCIuTwiVHyBq1tyiRQXjbJyns
IadTejbPEeN12TduWuRxVI3TG8WQiEp6SgUj540YTdJg7m26rtrxtNFgSIzB
pzWxCeSfj5TkL3AKhkYABCp+DJQ+HzjBKGwLqxELR86nYJRLpo+2Iyt8fs1H
y2Doh6N0//+iqrJo
                    "]]}, 
                    {Hue[0.59, 0.7, 0.65], AbsolutePointSize[
                    2.2777777777777777`], PointBox[CompressedData["
1:eJw11Ak8lHkYB3CKlU2K2mxeZiZHVjZHjlzlJ3KMY8YxRtrKarTrKtlSuimb
0tI6WmSrLUolrEqypYM2XYhKiy4jig5rdU3FPm/DfGY+8/nO+77zP57f858a
ttw/fJSCgoKEPuz3gPEL59wfnjjFrQzzG8jmYcXKHzM2XZQ5ZZ03sLu2iwf5
dWWk9Kt1uW/noWzKoaq4ZeOgopupa7OJh4qtpfSLJhSGZtyPj+Mh8+PYu5rV
k6E/XdGzP2zk/7QxzTA+JF3Ig+B5re/zWg4S0joFNg48TC7flfytZCq00rcN
3dDjQflltbQjXB8FGVNWmKuMjG+Irqb20zsbuZCGM/sFEUbIcxnQ6E3loukP
z0HlKGMsN6rwDgUXF++v/u5stAnSzcfcqnzBGZ7vDMhsrsZwszjYK7r9tXGs
GS5yvK47WnFwxSPxr1eV5njo5a9eVK+L6qU5PdfOWOAdZIP8cN3h9c2ElWzW
ln0yHRw/8Dc9YYl8U6tbhRk6KLjADmgFmTZTMnamDvIfDByadc4aoz+kmCx5
wAzvhw1MM27kb9/DIFVbn5Y4C+cKFvlOimKQZGtvdfW8LWy9ynHZm8HaIL8l
BRfsIP2o1iB2ZIb3zx79t0tz31szYBVyyQFm9sdXHyCHlu3us65xRNv6j+Gr
bBmI649zNWpno07w+6Qt9Lx8v+fgXm6EuBQM3L5s33DlshPqa6Vm6a4MuFkJ
NCIwJkZLKdudAcNOTwoYWKge1uQzw/VxRmu8mp4RzU/TWUc3r9MZizJbIiU+
DNQbD59UCZ+L+JuJhqt8GagutvRe9WQuDp+t+sVOwAzX0wW7DVcwxWTFDfx1
wi4XjJ1vGPUf+RO7PUtd0bvy1AEDIYN3ed8fNel2xa7YBmMhWV7/eYjysTgx
n9xXueafL57Ow4KmR/Yx5F53JdoiN9y/2tecTe6+mz6m46kbLDh3cuLJ8ry4
49Xa4m5n8kO2PM/c8XD0GuUCcuuWmQ3TIz0Qb5l09xCZnU1OjweK09I3JpLl
+fJEtLooaw/5pvmd7J96PXGTL07eR756PnTG4yg+pN2zn0nIl33ZDeejrr0w
ZTNZnkcvxMav6ygln40eTUvywuDWsjfseJUf0lJ/i/GG4vie/TXkkzvYgHhD
2byc40+W59cHMUydcxz5WJGF/6OXPmht7Tuzn3yYVuOz3Bc+zf9yS8gH2Xi+
8oVtf9eObWR53gXIGxswFEHO61xMiRGgSf2TuJF8/cxr/SRbITS6gz2ayZ5s
O6wR4o2vqNaULO8PIa4POBS+JbtOcN827b0Q7i56onzypRa1gIV2fkiI4/FP
kbGviZOV4Ifn4gzVJLK8n/zwOKglhK2Xo+miCkWZH/YqVqay9a1ih7f3R+Jj
FX4R2ZZdzlp/LBQtKQoly/vPH3fqI1d3ktl0tcv88cperJlG/nOiA70D0FJx
JSSDbNamQAkLwB5LWTBbD3m/BuCe6srq7WSTyJ2TKj8EQCIJ4nmRj7Db6RAI
JWm0Ejsfo/daxYbrA9H1oqGNR5b3dyD6I8pjisl6KQddMj8GojkxYtkAmcI1
/pqjCOqWzK8eZI4WOwMRko9V9RqR5eeBCHVpjgNs3rTZcn4S4WRy3Qk2rzkx
m+cUzg6C1UQv1dfkr6zZDg2CavKo3AnCkfMjCIuTwiVHyBq1tyiRQXjbJyns
IadTejbPEeN12TduWuRxVI3TG8WQiEp6SgUj540YTdJg7m26rtrxtNFgSIzB
pzWxCeSfj5TkL3AKhkYABCp+DJQ+HzjBKGwLqxELR86nYJRLpo+2Iyt8fs1H
y2Doh6N0//+iqrJo
                    "]]}}},
                  AspectRatio->Full,
                  Axes->None,
                  Background->GrayLevel[1],
                  
                  BaseStyle->{
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6},
                  Frame->True,
                  FrameStyle->GrayLevel[0.5],
                  FrameTicks->None,
                  GridLines->{{20., 40., 60., 80., 100.}, {{6., 
                    GrayLevel[0.3001]}, {7., 
                    GrayLevel[0.3001]}, {8., 
                    GrayLevel[0.3001]}, {6.30102999566398, 
                    GrayLevel[0.8501]}, {6.602059991327962, 
                    GrayLevel[0.8501]}, {6.778151250383643, 
                    GrayLevel[0.8501]}, {6.903089986991943, 
                    GrayLevel[0.8501]}, {7.30102999566398, 
                    GrayLevel[0.8501]}, {7.602059991327962, 
                    GrayLevel[0.8501]}, {7.778151250383643, 
                    GrayLevel[0.8501]}, {7.903089986991943, 
                    GrayLevel[0.8501]}, {8.301029995663981, 
                    GrayLevel[0.8501]}, {8.60205999132796, 
                    GrayLevel[0.8501]}, {8.778151250383644, 
                    GrayLevel[0.8501]}, {8.903089986991942, 
                    GrayLevel[0.8501]}}},
                  ImagePadding->1,
                  ImageSize->{302, 182.},
                  PlotRange->{{0, 100.00877192982456`}, {6.682, 8.518}},
                  PlotRangeClipping->True,
                  PlotRangePadding->None,
                  Prolog->{{
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{-2, -2}, {20., 8.518}], {1., 1.}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{-2, -2}, {40., 8.518}], {1., 1.}], 
                    InsetBox[
                    FormBox["60", TraditionalForm], 
                    Offset[{-2, -2}, {60., 8.518}], {1., 1.}], 
                    InsetBox[
                    FormBox["80", TraditionalForm], 
                    Offset[{-2, -2}, {80., 8.518}], {1., 1.}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{-2, -2}, {100., 8.518}], {1., 1.}]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"7\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 7.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"8\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 8.}], {-1, -1.}]}}]}
               },
               
               BaseStyle->{
                FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                 GrayLevel[0.4]},
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxSpacings->{"Columns" -> {{0.5}}}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
    "11153.28`", ",", "10787.98`", ",", "10716.01`", ",", "10766.78`", ",", 
     "11116.34`", ",", "11535.58`", ",", "12580.08`", ",", "13398.36`", ",", 
     "13455.65`", ",", "13345.32`"}], "}"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{
  3.77145461921427*^9, {3.7714546613417597`*^9, 3.771454671862384*^9}, 
   3.771454802013002*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"eb88175c-c518-48f9-866b-07abcf375d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sobj", "=", 
  RowBox[{"NetStateObject", "[", "trainednet", "]"}]}]], "Input",
 CellChangeTimes->{{3.7372248309728565`*^9, 3.7372248507732735`*^9}, {
   3.7372265575384083`*^9, 3.737226594979128*^9}, 3.7372268153850274`*^9, {
   3.7373024991402426`*^9, 3.737302499867403*^9}, {3.771454699652968*^9, 
   3.7714547061537275`*^9}, 3.771454737756176*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"a2f37bd3-0b9a-41e7-ba9a-2279d9562267"],

Cell[BoxData[
 TemplateBox[{
  "NetStateObject","arg1",
   "\"First argument to NetStateObject should be a valid net.\"",2,20,7,
   24136634284585170698,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7714546344986005`*^9, 3.7714547092003155`*^9, 
  3.7714547396082306`*^9, 3.7714548152159414`*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"1546f7fb-bdb4-4dc2-849a-0b346036b1eb"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.771454634514262*^9, 3.7714547092003155`*^9, 
  3.7714547396239033`*^9, 3.7714548152315693`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"123e2919-2ece-48e6-bf26-9b5fd9b3d412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{"Union", "@", 
   RowBox[{"Flatten", "@", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"trainedNet", "[", "#", "]"}], "}"}]}], "]"}], ",", "1"}],
         "]"}], "&"}], ",", 
      RowBox[{"testdata", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "100"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.737226824884161*^9, 3.7372268449172544`*^9}, {
  3.7372268928130693`*^9, 3.7372269355793657`*^9}, {3.7372269793001595`*^9, 
  3.737226981853904*^9}, {3.7372270303152704`*^9, 3.737227086322617*^9}, {
  3.7372271340108805`*^9, 3.737227144731275*^9}, {3.737227213450314*^9, 
  3.7372272169706306`*^9}, {3.737227259681749*^9, 3.737227260048719*^9}, {
  3.7372272943425465`*^9, 3.7372274196143312`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ab42edb5-7b31-4d82-a762-00c986b21bbb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"11827.97`", ",", 
           TemplateBox[{"109"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 24136634284585170698, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 24136634284585170698, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 24136634284585170698, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24136634284585170698 === $SessionID, 
   Out[21], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771454837751239*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"396448da-d31c-4ce9-aff7-6f2d220c9a2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"testdata", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "1000"}], ",", "2"}], "]"}], "]"}], ",", 
    "results"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7372274350221095`*^9, 3.7372274624868507`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"2050c5e7-e067-4f38-bd26-e444c5760e28"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdW2l4k2XWDrh10GGCMFIXMIBCXamCWlH0BVQqi4RNStnSPS1Q0j3d0zZp
0zRpw4hDcRgJ4mAVBqqiFhcMKExVlKj4URS1fAp0EDWIYN24Pjz3ub0uv/55
r7vP+2z3WZ5zzvNmWOqKWRl9TSZTz3km029P/EXvLR+0ZXLKwHcN/Ycxq2Oo
5+LhxDHG1Z6vZvb+3m6Wp8tMPMg4MbNj6P29exXHGk86xvcr+ZL4KuPc8IfL
dhJbjMTDZYO2nCUebhzY4Bj/9vz3FF9j/Pb6nFX7FI+U9uvjieOM6xa27Hph
Bt+/3njjdNzC0UO4nhuNd/fu3XtiwjuKb5bxtp3oVBxv/Db9RbcT32KMOfd3
6vz/KL5V9v/Vh3sUjzHyxvc78MZB4rFG5m9/g/j+bTKffyfx7cZvfA5bx/Hv
kPXNeONtxQnGb8Pnebn/O4Wf5BeIxwk/uSe4/ruMM3ELW1KHEt8t8nAGON54
PC8nvsc419xxz0Tie2X/g7qJDeMcfad7LtH5XIbs54G/kM8Jwvfxjcq3a4Jx
bvsbIonkf6Lw17Bc33dNlPELC8n/JMjLxPEngc8BnP8+2e9Px5RP130iz7/+
g/zdL3yfN0ax636Z3/o/5P8B8P8y+z8g47/Tl/0nC940j/0nC399j1AeiYJ3
7XpL2xOhDzVc34Pg54xi14OyvttuJv9TjHPLcbwWq9g1ReZr4vumqZB/X7ZP
FXmvPMb2adJ/USLbpwl/+z+m/KeL/BY/rXy6pkv72PPI70PYz3/Z/yHRrxVd
HH8G9rec+5sh41W9SX6sxrntxV1Vq9iwyvqeHUs+raJ//d/cDRy2ijzSVio2
zZT+h9IVGzNFPvE5il0zxZ4+PMH+M8FPlPKbJf0X2jn/LOFrfUjl45oFPkp1
/eFZwv+j6YpNs/G8SrExW+yho479Z0MfRyoOzwY/L1D+c8Q/Df6a/efIfr9J
or7OMR5bc+7vatXv8BzY71vkf67wMeJCxcZc2c/aC9h/LvxnksojPFf847UH
Of/D4i/2bub+HxZ9+Gc++X8Y/mqc4jDwIDP5myd8zGW7MQ/+YAD1fZ6MP62U
+58n9jJyJvU3SfbTQn9tJMFenuT6k+B/f9X3w0nQ36PsP1/4ufyMYmO+yC/l
A+rjfPizH9l/PuwljfqdLOtbNpn8Jct6vp1Df5Ms+lOQFtH+ybLfI4Zi0wKR
3+oOfd9YIPxXLKM/WiD225mu84UXQH6fUn8Wwp6vJf8L5RlaT/7RXjSU/C+E
PXnI/yLwP4H8L8L6l7D/IpH37hM6fniR+JeseeRvMeSxn/wvFvt8/E7yv1j2
P/sH6s9i2OtI2vcSkXfXC9TfJfCP39Del8CfnqL9LIE/Osj+Nukfm6TrsdhE
Pr+Oozxs4r+nHFM+bTZZz5gN5NeG+T7S90M28LmOfNuEf+8HOl+3TeT1w8vU
/xScH23KjyVF3rfvJZ8pOG8uVmxLEf2c2kr/koLz3684lAL+BlFeKbLfw88q
7k6Bvk6g/FPhj+K4f+BNTsojVfj4dIzuz5aK+GcX/XGqrH/UGe4/Fft9SXE4
Ffb+mOLuVHmG5tN/pIm/eW+OYkua6EN9jvJrpGH8VNVvW5qM5/mI/KeJPvxy
lPOnKd/kPw3yu1/3150Gf3YX958ufH22UfmxpMOeash/uvBvvpf8p8v4cV3U
73T409cVh9Jh/6+Q/3Txj5MGqny702V/R6fy/MkQ+9+8RvXBkgH/10p9zkC8
cIHqjy0D8cxVPI8zII9+ikMZop/PF1PfM+B/fDp+dwb06wLqXyb4vYXzZ8Jf
jOX8mei/X7EtU/jb/iLtC/0vWq84lIn4cQXnx/vzI5w/E/J4mvvPEn9SO4/8
Zwnf0aM8T7PkaTv8ps6fBf8SVezKEr7GX039z4L+Z/O8zUK8cDf1P0vkseEt
zm8H31yfxQ4+h3D/dujnTm232REfzuT5asd6vtDxQnaR1w2V9Hd2nK/E3Wif
OoT8Z4u+1EzR+SzZiE8W8jzJhj0cU322ZWP9LvrHbMQPu/X9UDbO0y/pL7Mh
73Ydvztbzq9bRnD+HFn/VvJlyRG+VnnIf46Md8k75D8H59FQ+p8cGe9kMvnH
eN+2kH+0z/xAcXcO8puBPD+WYn1X0v8thb/axvNoqfB34BHFtqWIT+7j+b4U
8ruI/KP/sE9of0thXxHKH/O1VVD+y7C+Gsp/GfRzpfJnLIN9HFZ+bcs0vuf5
vgz28TLtD+9fdIj6j/F8q6n/y2D/Z7j/5fCvj1D/l0v/yeXKt7Ec8f048r9c
9t88nPq/HPvrfUPnX454ZpHiMMZreFFx93Lw+5r2N+XCf+2i/HMhH9qjkYv4
qz/5z0X/PeQ/F3x+R/5zhY9xP1D/c8VfH7ma+8/FendR/1aIvbdfp/xZVoi/
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
e8BH6mH6O11/ks7fi/aJPsa/Naifjld+YmoQH6XTHmpQT8xVPmNrEO+8wHpl
DfLJTYrjaqCPR2gvwAf+pOMloP8zS2g/NTgfjuv8iTV/jM+tNagvvqryStL+
XvrXGuQ/Y3S/dsWMRxw1yOceV+ysQX1kM+tnNciXr1T+vDXC59d5ym+wRuyp
z0nFreBr7b8Uh7D+tssUt4GvlC8Zr2I9I2ZQ/uDrVALtt0bOi6ccykcn9uej
P4rUyLM7QXEX+Bg3lPUdrO/kp8p3Tw3i0+2M92ugf/30/V6sr0+A8X8t6hln
FcfUIl5ivG+uRX2oRdcbW/tH+VhqcZ/G9rhaeYaWKY6vxfcNjP8SMP7xxxk/
1YKPCpVvYi3qJ3E8T2tRf1ip/CZhvcOqFNtqke8NUWyvRf57hfZ31EIeVyj/
Tqyvey3zDx1/j+qft1b4an2W+RjWN6ZLcWstzmfWd0PYX+UvitvQvofxfXst
9Ot7Hb8DfK15mvXLWtxXd9D+wfcoM/P5WtT39mp7l+73YZ5vWN/zG3V/PTrf
7TzvwEcy86letLfTfkx1qMcl6ngxdbKff6crn+Y6Wd+ygveBY+twvmQrttTp
fZriOPT/ZybjpTrE+0/r+Al1mP8s5V8HPm+k/SsexfO0DvbL+maSzk/+bcB5
vYrtdfBHgxhv1uF8XUn/Xyf8Hiul/8f7z6+i/68Te/2C51ewTp5GUHFrHfQp
wvi8DvHFR4rb6lAv2qy4He39+f1aB8bfkKU4DL4q31LcifWtDtP/Y7z+Gcpv
F/Z78k7F3eC3bY++31Mn8r5+uOIocPIE3V9vHepNzPdMbuhrQPmIAc5kfGh2
I9/uURzrxvd8+3hf5xZ+S5mfxrkRz09hvcCN5020fzf8XSHrJ26R76F+ut5E
t/CbR3u2upFPTqb9u0Ufpw2g/buR75B/uxt87qD9Yz03fK7Y6Ya+s17scsMf
FSj2unE+vqT8Bt3Cf/O/PwBuxfv91igOuRHv3qu4zQ1+N2n/djfqG5t1/A43
6suMN8Lg91SX8t8JfldfzHgO/NkeUT673KivVzG/dyO/yFPco+2HmO+jf+gZ
Ha8XfJ+4hN/veYTvAQFdX4wH/uVt2r8H8ecOxn8enP983wL88U2M/zyYbwvj
P4z3bZXiBA/8WybrBx7Y76WUP/o70pQ/q84/X/lN8iDeSlZs84j8TcMU2z3C
54iN2t/hwf3Myzq+E/2TP+P578H3M9uVHy/eTz3OepQH9r1VcasH99kLWJ/0
QL+yFLd54A9Zz2oHTtyi8u3A+68MZv4CfNdVut5OrCd2uuKI7mcM7d8D+Z1l
/OfR/JL2Dzx0He0ffMavUdzrEfu+jPG8qR78vUn514t8Br+m85nrYS/U79h6
xK8/0//j/RIX/X897ve/o/+vR/zN/CChHvH5ANo/5g8yHk2sh/89q/7FWo98
oV5xUj3iv9WsL9bjfpD1RXs98o3FzDcxvoP3006MN2My80/MN+K0yseL8XNK
Gf/XC983vqu4FXysqmB+Wo/7xSGK2zDepDsY/9Ujvp6muAPtGxbR/usRP9Xw
/Ae/g/l9W6Re9PFvRxn/o/2lZyn/etgH/WMP3k+l/4vq/kP0//X/7/vRBtxP
0L/ENOA+5QnGfw2of+ym/2/A/eGlrA83ID+YR//fgPi7D/1/gzzDcYoTGnCf
vpX5n873E+XfAHuxsp7egPt+3iclNaCeW8T4vwH3F2MV2zH+nAW8b23AecT6
nhPrO28g7V/Xe5rnfwP0+VXG/9hvdlD1u7UB/sOpONSA/Hmg4jbs59KnWK/A
eE+l8fxvEHseuI/xH/bzK+8jO7HerypYz22A/OYp7sJ8e39i/N8Afb5Y23sa
8D3hAtY7db7vle9erO9/+b22ySv6NGo+7d8r+uChvzB7Ub9fT//vFb5ve5T+
3wt/3EH/7/3jeRGP949k0/69Il8n9dtA+27W1xK9ok8nl9D/e8V+/IPo/72I
f45qu80rz9AKxXYv7Ivxk8MLfbDy/Pciv1rO+M8LfxRl/I/5DvF7sCDez0lW
3Krz8XvakO5/veI29F94gPE/5t8/Wfnv8ELfd1H+XuRXr9L+8f7Y8xn/ezXf
YPyP+V3bGf+Dj1t6Gf/r+t9m/O+F/W5l/O+F/vB+39QI/7mL8X8j4uU7KX/F
fRj/N+J8on1YGkU/w7Mp/0Z8f1/K878R+T3rJwmN0M9Oxv+N0F9+n5KI9Xxc
wfi/EfKxKU7S9cxifa0R8Tu/d7A3yv5f5fcsDrQPbFLsRPvCdfT/jbhP2aHr
8zbi/uoA63FY78Ys1n8aoV9xrP8Ap7E+0Yb9LzWzXof2SXN5/qP9q18ofx3v
Asof+7uO970R8JfAeL+rEeffrYz/wX8oSv+P8RewPhRtlKdxtcqjF+2bgqz/
+YA/of/34Tzrw/jfh3ytUPmL9SHencz6qA/7Z70ozifP8DXaP94H/8x6XwLa
Le38vtgHfd2u60vEeCOeYP7vg/4/pfwk+WA/zHdtWG/en+n/ffie/LDuz+FD
vMLfFzl1PTP5/a4P+vEo/T/aT/vo/zH+TD/9P9Zzxk3/j/04Euj/ffgeZTf9
vw/2v5/+H+37+P1vGOsbvE356fThe4Xr6P+xniNFrP9gvacS6f8x/rYJinuA
V/F7q6gP93+j6P/B30TWA0xN4Gedri+mSZ42+mdzk6znHtbfY5vgv/9G+29C
vkoc14T6Uxb9fxPuu1Pp/5vwPRLrA0aTnBfT19L/N+H3Ivn0/5h/aFRxks7f
Qv/fhHy7l/WfJvz+ax79P8av/Jn1vyZ8r/MK/b+u5yj9P+YvuFxxEPu76DL6
/yb4i/Pp//X9/7L+A/7Cl9L/63rojzqaUP/Zzvtb8DOJ+V4n3t/K79EiTfh9
gZ3+H/xuy+D9XhO+r2L+24P1DDzG+K8J9ltO+wcO/p7/+XGe8nuTGD/4H0r5
+8G/nfIH3sL82+LHeTVa+8ehf8FEXW+8H/clm+n//YiHPqf/90P/k1j/8cvT
4PfHVsz33o/0/374z+fo//F+uJL+34/vix6n//cj3jlG/+/H+VPO+2c/6jlW
tQ+vzsf7lKAf/PN+rBXjO/+q8glhPZtuo//34/v8X5j/4f2OnYo7/IinjrD+
68d90yzm/+Dv+WHKX8SP+4SfKH8/7t/O5/mP8Wbw+8keP+Lbh3nfg/GDzF97
ga38vtcUwPelO1n/D8jTNp/1/wD8w2es/wcg7xbW/wOoZ2Sz/h+A/Pn7vfgA
zrfHFScEwHc+6/8B2BPlkRjA+qaz/h8QPv/Vzvp/AL9P4/eUNrwfoX+3B/C9
Tz39P/pn8HtPZwD2FeD5r+8/x/w/AH6v4fkf0O/Rmf+BH+Ma5n/Yv/1z3v9g
v284ef+D8V5t5vkfQH7K3wOGA3p/p+93BvD9/eus/2O9o/n7ti7wP6eZ3/dB
ftv/wfhf+WY9O4r2g376/wDq3V+z/tcM//Yc7/+aEe9+wftwtI/i739im1Ev
5O8/Lc24D1lL+29G/MB8J74Z9RF+j5CA/iPvYf2nGc/jPP+bcb95Of0/5j92
A+N/9L9wAOs/eP/YVsb/zRI/ThnJ+g/WN2066z/NOP8/Z/7XjHr/3bz/wfgb
H6P9N6P+2ab8tWJ/J4v5vbu+z98btGG/7/Sn/Tfj+5pRlL+2P8n8v1nkmc78
qxP7HXyA8V8zvg/9gvm/rpf13u5m2P/fGf81i3w/Wsr4T8cj7sV6X2xh/acF
v7dk/BjTAvsyKb/mFnz/Y/4QOBbv32JSbGmR8X9Yr+/HtaA+epXi+BZ5hu9S
eSRg/PdzeP63IJ/oEzH+D16M2Q8=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      PointBox[{{1., 11827.97}, {2., 11865.42}, {3., 11877.92}, {4., 
       11913.52}, {5., 11922.14}, {6., 12288.17}, {7., 12795.41}, {8., 
       13430.17}, {9., 14132.3}, {10., 14628.51}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 9381.394444444446},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {9381.394444444446, 19522.18}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7714548440581684`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"653d2bcb-8f41-4024-9c0a-97c496222b3d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{682, 820},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 160, 3, 67, "Section",ExpressionUUID->"ef771bcb-58a0-4479-8cec-315a818b978d"],
Cell[746, 27, 348, 8, 86, "Input",ExpressionUUID->"e09b966e-77c1-4172-8167-5078ab3dc601"],
Cell[1097, 37, 993, 17, 124, "Input",ExpressionUUID->"31cca320-f34a-4970-beda-6d7649b26992"],
Cell[2093, 56, 1298, 24, 143, "Input",ExpressionUUID->"dabc3f74-e286-459a-8d85-b2ae153d13f1"],
Cell[CellGroupData[{
Cell[3416, 84, 238, 4, 28, "Input",ExpressionUUID->"e4597614-2e5f-4a28-bf44-783f21f35db0"],
Cell[3657, 90, 2225, 39, 166, "Output",ExpressionUUID->"edf36beb-3dc5-41a7-beb1-38b4ff50471d"]
}, Open  ]],
Cell[5897, 132, 1432, 31, 86, "Input",ExpressionUUID->"cec0ced0-73ee-4552-86de-0cb2da892e1a"],
Cell[CellGroupData[{
Cell[7354, 167, 258, 5, 28, "Input",ExpressionUUID->"bf51de4c-5c9b-453f-97c1-221d1cd314ae"],
Cell[7615, 174, 4831, 125, 299, "Output",ExpressionUUID->"6b50a22a-191a-4e82-8df0-17b523afd317"]
}, Open  ]],
Cell[12461, 302, 510, 10, 28, "Input",ExpressionUUID->"0626b4bf-93d6-48b4-8d7d-606e20e9e70c"],
Cell[CellGroupData[{
Cell[12996, 316, 1648, 37, 162, "Input",ExpressionUUID->"1627ceac-5684-4dd3-bfc7-8c1b04e835b1"],
Cell[14647, 355, 37690, 749, 232, "Output",ExpressionUUID->"6dc73074-ca47-404d-bc2f-ab104d98fa92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52374, 1109, 976, 17, 67, "Input",ExpressionUUID->"14cb6ab1-b312-498d-a164-51c1bdadd143"],
Cell[53353, 1128, 640, 14, 39, "Message",ExpressionUUID->"386c5371-a01d-49a7-8cdf-33ecefeb9422"],
Cell[53996, 1144, 273, 4, 32, "Output",ExpressionUUID->"9597aa49-7484-45c2-ab23-8f20d61b4a0e"],
Cell[54272, 1150, 317, 5, 32, "Output",ExpressionUUID->"c3947826-0c16-400c-87ff-dae059f31010"]
}, Open  ]],
Cell[54604, 1158, 176, 3, 28, "Input",ExpressionUUID->"a925d668-172b-4fc1-9599-ffbbbbc81a52"],
Cell[CellGroupData[{
Cell[54805, 1165, 649, 14, 67, "Input",ExpressionUUID->"08b6e8fe-aeca-432e-98ae-293e69c3b764"],
Cell[55457, 1181, 297, 5, 32, "Output",ExpressionUUID->"e8131b23-4326-4848-b78c-2d84a5ea3eb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55791, 1191, 389, 8, 28, "Input",ExpressionUUID->"a9cc8018-e612-4311-8c77-43dc6097e868"],
Cell[56183, 1201, 800, 20, 90, "Output",ExpressionUUID->"ba665d27-f36d-4922-b2d5-1b340272641b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57020, 1226, 343, 7, 28, "Input",ExpressionUUID->"c95bfb30-e39e-4977-9bfc-2313e67fbd93"],
Cell[57366, 1235, 20614, 429, 506, "Output",ExpressionUUID->"eb88175c-c518-48f9-866b-07abcf375d6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78017, 1669, 453, 7, 28, "Input",ExpressionUUID->"a2f37bd3-0b9a-41e7-ba9a-2279d9562267"],
Cell[78473, 1678, 427, 10, 21, "Message",ExpressionUUID->"1546f7fb-bdb4-4dc2-849a-0b346036b1eb"],
Cell[78903, 1690, 230, 3, 32, "Output",ExpressionUUID->"123e2919-2ece-48e6-bf26-9b5fd9b3d412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79170, 1698, 1033, 24, 67, "Input",ExpressionUUID->"ab42edb5-7b31-4d82-a762-00c986b21bbb"],
Cell[80206, 1724, 8856, 230, 92, "Output",ExpressionUUID->"396448da-d31c-4ce9-aff7-6f2d220c9a2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89099, 1959, 390, 10, 28, "Input",ExpressionUUID->"2050c5e7-e067-4f38-bd26-e444c5760e28"],
Cell[89492, 1971, 10836, 193, 230, "Output",ExpressionUUID->"653d2bcb-8f41-4024-9c0a-97c496222b3d"]
}, Open  ]]
}, Open  ]]
}
]
*)

