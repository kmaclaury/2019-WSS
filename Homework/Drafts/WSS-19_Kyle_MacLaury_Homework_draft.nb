(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    268246,       4898]
NotebookOptionsPosition[    265221,       4831]
NotebookOutlinePosition[    266191,       4864]
CellTagsIndexPosition[    266121,       4859]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "How much electricity does my hot tub use?",
 StyleBox[" ",
  FontSize->16]
}], "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.770373672636671*^9, 
  3.7703737875292807`*^9}, {3.770537045333147*^9, 3.7705370778202133`*^9}},
 CellTags->"Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],

Cell["\<\
Using Smart Meter data to estimate the energy consumption of a hot tub.\
\>", "Subtitle",
 CellChangeTimes->{{3.7705374234368105`*^9, 3.770537478131421*^9}, {
  3.770541554725836*^9, 
  3.770541555555993*^9}},ExpressionUUID->"01592b2e-a6ea-48f3-a6ee-\
4260a58d89e6"],

Cell["Kyle MacLaury", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7705370647683773`*^9, 
  3.7705370686182747`*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7705376555178785`*^9, 3.770537664962737*^9}, {
  3.770537705829153*^9, 
  3.7705377075750284`*^9}},ExpressionUUID->"4bdd3023-3314-4d31-8103-\
e3391eefafb0"],

Cell["\<\
When we purchased our home in 2015 it already had a hot tub installed on the \
exterior of the  home.  I have always been curious to know how much energy it \
uses, how much it costs, and what its environmental impact is.  My utility, \
Green Mountain Power (www.greenmountainpower.com) (insert financial data \
here) allows it\[CloseCurlyQuote]s customers to download their energy \
consumption data as a CSV file with their kWh consumption in each 15 minute \
interval.  Below, I have imported my home\[CloseCurlyQuote]s energy \
consumption from February 1, 2019 to June 1, 2019 as a Dataset.\
\>", "Text",
 CellChangeTimes->{{3.7705377421585503`*^9, 3.7705378344307585`*^9}, {
   3.770537865581972*^9, 3.770537894163731*^9}, {3.770538002398693*^9, 
   3.770538069779355*^9}, {3.7705414544549503`*^9, 3.7705417032013817`*^9}, {
   3.7705418213438416`*^9, 3.770541856143684*^9}, 3.7705418961608295`*^9, {
   3.7705419367282434`*^9, 3.7705419850072756`*^9}, {3.770542019978404*^9, 
   3.770542043100441*^9}, {3.770542102522296*^9, 
   3.7705421056538267`*^9}},ExpressionUUID->"66c1f441-94a7-4fdc-b8d2-\
e8204dbfde2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SemanticImport", "[", 
  "\"\<C:\\\\Users\\\\kylem\\\\Documents\\\\GitHub\\\\2019-WSS\\\\Homework\\\\\
Drafts\\\\Homework Data.csv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7705417652666435`*^9, 3.770541768665533*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c0dc7183-a5ea-4080-9cbb-ba49a1b65e11"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 11516, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ServiceAgreement", "IntervalStart", "IntervalEnd", "Quantity", 
            "UnitOfMeasure"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["kWh"]]}], 11516], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ServiceAgreement"} -> 1, {All, "IntervalStart"} -> 
           1, {All, "IntervalEnd"} -> 1, {All, "Quantity"} -> 
           1, {All, "UnitOfMeasure"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ServiceAgreement" -> TypeSystem`PackageScope`AtomShape[702.], 
              "IntervalStart" -> TypeSystem`PackageScope`AtomShape[75], 
              "IntervalEnd" -> TypeSystem`PackageScope`AtomShape[75], 
              "Quantity" -> TypeSystem`PackageScope`AtomShape[60], 
              "UnitOfMeasure" -> TypeSystem`PackageScope`AtomShape[27.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1757223020], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ServiceAgreement", "IntervalStart", "IntervalEnd", "Quantity", 
            "UnitOfMeasure"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["kWh"]]}], 11516], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1757223020]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 11497, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ServiceAgreement\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ServiceAgreement\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312815525][{All, "ServiceAgreement"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[All, "ServiceAgreement"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalStart\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalStart\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312815525][{All, "IntervalStart"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[All, "IntervalStart"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalEnd\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalEnd\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312815525][{All, "IntervalEnd"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[All, "IntervalEnd"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Quantity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Quantity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312815525][{All, "Quantity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[All, "Quantity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UnitOfMeasure\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UnitOfMeasure\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312815525][{All, "UnitOfMeasure"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[All, "UnitOfMeasure"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[1, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[1, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[1, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[1, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[1, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[2, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[2, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[2, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[2, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[2, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[3, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[3, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[3, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[3, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[3, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[4, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[4, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[4, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[4, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[4, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[5, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[5, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[5, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[5, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[5, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[6, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[6, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[6, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[6, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[6, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[7, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[7, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[7, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[7, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[7, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[8, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[8, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[8, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[8, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[8, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[9, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[9, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[9, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[9, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[9, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[10, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[10, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[10, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[10, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[10, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[11, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[11, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[11, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[11, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[11, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[12, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[12, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[12, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[12, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[12, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[13, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[13, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[13, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[13, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[13, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[14, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[14, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[14, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[14, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[14, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[15, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[15, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[15, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[15, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[15, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[16, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[16, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[16, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[16, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[16, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[17, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[17, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[17, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[17, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[17, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[18, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[18, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[18, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[18, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[18, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[19, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525]
                 [
                  GeneralUtilities`Slice[19, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[19, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[19, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[19, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[20, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[20, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 05:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[20, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[20, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
                  GeneralUtilities`Slice[20, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 (-20), {1, 11516 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 11516 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    11516, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 11516 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 20, {1, 11516 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 (-20), {1, 11516 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 11516 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    11516, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 11516 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 20, {1, 11516 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312815525]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312815525][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1245., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.770541773259242*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8acab437-41fd-4292-a2ad-59c5acb516ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Key Facts", "Section",
 CellChangeTimes->{{3.7705824732169685`*^9, 3.770582475446989*^9}, {
  3.7705849075063457`*^9, 3.7705849086453032`*^9}, {3.7705849581289625`*^9, 
  3.770584963058813*^9}},ExpressionUUID->"7fc2d02f-399e-4fe4-85fa-\
23f9cc9f4fd1"],

Cell["\<\
Our home is located in Quechee, Vermont a village within the City of \
Hartford.    The nearest weather station is at the Lebanon Municipal Airport \
which is 5.6 miles away.\
\>", "Text",
 CellChangeTimes->{{3.7705824977224445`*^9, 3.7705825278967276`*^9}, {
   3.7705826784703794`*^9, 3.7705826809806733`*^9}, {3.7705837334966955`*^9, 
   3.77058374774858*^9}, {3.770583844363197*^9, 3.770583844872825*^9}, {
   3.7705845047460113`*^9, 3.770584576828931*^9}, {3.7705848776362333`*^9, 
   3.770584883726945*^9}, 3.7705849407404633`*^9, {3.77058500352955*^9, 
   3.770585032796277*^9}, 3.770585116518379*^9, {3.7705855302402306`*^9, 
   3.770585568346359*^9}, {3.7705856234639606`*^9, 3.770585678074555*^9}, {
   3.7705857806858325`*^9, 3.7705857863835545`*^9}, 3.770585850041315*^9, {
   3.770585881156128*^9, 
   3.7705858836574116`*^9}},ExpressionUUID->"3a1b5f95-c471-4650-95cc-\
6dfce006145f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   TemplateBox[{"\"Lebanon Municipal Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"KLEB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"KLEB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   RowBox[{"{", 
    RowBox[{"43.6538820", ",", 
     RowBox[{"-", "72.4092450"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7705857209897547`*^9, 3.7705857216749115`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4c4185c5-246d-4f89-89cd-72c10e9b463e"],

Cell[BoxData[
 TemplateBox[{"5.605157509974291`","\"mi\"","miles","\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.7705851353500414`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"52f34072-fefc-4a62-a82e-0c51b30deedb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"Hartford\"",RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Hartford\"", ",", "\"Vermont\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"City\\\", {\\\"Hartford\\\", \\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
     "Entity"], ",", 
    RowBox[{"GeoRangePadding", "\[Rule]", "None"}], ",", 
    RowBox[{"GeoMarker", "[", 
     TemplateBox[{"\"Lebanon Municipal Airport\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Airport\"", ",", "\"KLEB\""}], "]"}],
       "\"Entity[\\\"Airport\\\", \\\"KLEB\\\"]\"","\"airport\""},
      "Entity"], "]"}], ",", 
    RowBox[{"GeoMarker", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"43.6538820", ",", 
         RowBox[{"-", "72.4092450"}]}], "}"}], "Code"], ",", 
      RowBox[{"\"\<Color\>\"", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7705831575982914`*^9, 3.7705831826846437`*^9}, 
   3.7705832252877073`*^9, 3.7705832712079296`*^9, {3.7705833752377214`*^9, 
   3.770583510057577*^9}, {3.7705836332790356`*^9, 3.7705836350991297`*^9}, {
   3.7705836653891673`*^9, 3.7705836731842856`*^9}, {3.7705846672716646`*^9, 
   3.7705846886052103`*^9}, {3.7705848007469196`*^9, 
   3.7705848073701425`*^9}, {3.770585064393812*^9, 3.7705851016501336`*^9}, 
   3.770585579381851*^9, {3.7705858577597094`*^9, 3.7705858653194838`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"317c9f72-3423-4c07-98f6-41a616131f9c"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvfmTHOd55+k9ftgf91/Yf2JjY2MjNhy+dsOx4Z2ZtUZrT0ysbVka22sr
VlpLVng0Y8smLXEkx5ikKBEgJRAAIZIAaOIkjm6KjYs4uqkG0IAaQJPG0aAF
mlKQXIIiCYRr8/NUfhNPv/2+eVRlHd1dPzxdXVVZeb6Z+cnvc/13v/v5f/nZ
//IXfuEXvvjfZH/+5e98+Re/8IXf+cq/+m+zN7/5J1/8g8/9ye9/5n/9k//3
9z/3+1/4H373v8o+/Ov/4hd+4Zls+v86+//+R7c7E5uYt/Pnpjsff3S389N3
7nTeXDxdOu3xmanO5e2f6ixv+e+jtrT11zpH9r/Q+fD9652lq/OdSxdmO5cX
5pLzmzsz0/nnf/7nztzpqcr1fOvGfGfx0mx3+ux3VdMvX3+9c/bkdOf99961
37y1fKNz5sThzo9mj3U2b9rU2bLle52lK+l1w96+c7uz/fStzs7ZW53vn+ra
llMP/i/7LDbNyxdvdX767vLIjvUH777ZubpwItvf0503lq507t+7Z/smZmz7
4qU529dMj52frWlzJ2w5S4uvdX5yY67z07evdj6+e2vkY70fe2PxrI2lWzeW
bHv4jNepqaM21ke9fjFjn7N+c2dPrNr/d9+/Yd/NnjtXa14czw8//KDz5tJC
572fLvW0Plrm9Td/XLmsux+8b8u6s7zQ+n5hnr1uw1o1rrF27Tx7rPjs9o2L
dp7rc8bzjTcv2+vRo0c7x49NFWN9FDZ1ZF9ndv+jnVvZvSW0n7z8R529e/fY
Nox6P3rjPDu751ud0y8+0vnJ/IuFXXn16c4rz/5F5yc35+y3zOPsyaOdm0uz
nffe/ZldV975yeVG67J71/Odwwf3rPjsvZ9e6yxcOGfz5/XO8sr9c/nWcnYv
utn5XsQ2bf9B53vHrkW/S9nzB6dsu944sXXF9p7Y9Q07dqMe9xMbf4MXxYKv
z57s3M04JTXtx3dvdo5N7zfWTHEojMo0TFu17LoM6tdx6eqlzs03ZmttG+tw
aX6mc2H+TOeTjz+231+5PG8suis7f2HRQy/vsfM2NY9rby1X8mVdDsW2n7nV
WVxeHjmTcW+BF9mvP3nrVpJFezX2NxzBsw3X10vZ9VA8C2OM8t7WixlLZ9vC
vhIXiUHHeVtuXl+wdWT/a8zxeubMCfscLqwzH7YZXmEfcN/sdX1YJs82qe95
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
wfU1ay0pDuD12fR9zmurYX17fP/rUZ/uxdgfigEty1FBe4aHqG2O9vnI175k
bMpv//yLn7P/OR/hUHipjXOSecKXd078bTInnu+YZuFCvR5fgzBpoGFeDvog
OiGcppwu8pgUZxTmOGFiUGJPpX0u1HjWMgbNOfyTj5aLnn4wZd3t4Hlj/9nL
pnFXaaD7X9oe1UDRgecOPTHycT2x9WPkJnGd4ToOg1Xpht7q1LBvwqFtmHrP
wZ918v1DW/6Hbt9P+eeJC2Abt29/prMpY9EXnn+2Ua4w03V7VfTGfdIRwxx4
r79WzbsqBiClZTaJZW0yrWoCsE2s//dzDoUhFKPr8yWUEzToscN9mNgA1mHc
akYN2hhPMKf2fx29so5JU8WvXjfnrMgpLqlNyrpyrDQ+JsyZ2E8uH6m0Dt/H
b1vsIhooLMqzOPGg8Kj0T1hpIa8jzPRmPa6XcpHIN4IzY/xJTjzfWQ+lBnpC
20atpVQtUJjM+9UVy4yGzDpzP2J/wtvEHVj+RV73qUr79PvKMyjc6XmRnpx8
zrnbzVHt3heYju/4nF4Fv/Irv9L50jeeqKzJhEZalndFzMGox/XE1pcZe1LP
4f337P+PGuih6IfT+7aNDYdSC4bzu5+6orDrwuuvFj3rqS0Kl3JP3LXzeWPR
7du2dmNJa+oBXAek+8X81V47lcFpdeZNrVGx3KitSdwA2q6PX2A/oD9KN/OG
XxgdbZAxSGKfQS9n3IwxzLarLmpbTGd9WrPnW/y8dTRV7t/+OQRtMzWtYsiZ
xnrO91gPYr2bYhNholTPKvEkcZ/ooOxL+AmWQgPl3sArfZf0PFHUbvIsqv9r
sCksa2z56tOl+UhiUJY3qn1Y1hM+rE2k51j2Udi/HVaFRZnG++irjGnhVmnB
XO/D+kmpvvCyg9N7jEE/9/98pVIDndr12Kq4V2m+CzPbRj6mJ7b+DF4Th0oP
jeUoUfuTz0OtlHNkXDiUbWkzXol9QQ0rcRD+DOLP9u/dXbAoOVp1dTqrC/Ju
t6Yor236mbl3V8Wl+lpOofn6UG358auYNPyM5XP8zAcf5EtwbR9UvhLMBc+0
lYezVszXFFQdqjb4k3qvyu8qy09n/FuPg2waxXUqJoMYUvU+UD8v6/ma90HQ
dIwTOzcvnJtoooHpuYpnAasTGhwH+eDJsyP3RzlI8BO8hC6658UfdJ7bsbU4
D/HlUnuIefJb2HQFf1ZwaKiBlsWCwnrWQ+nGaBgUzQ/WZD1iPeHD/RnGfLax
Dmw7DEo+vT6rYk5v1KPn2YLniP/zdz5bSwMNt1c1Ud97e/D+qIltTEP7M/bM
85Spb4JfWt/DduY/OD5j8ZbknXsWsJ6eGWPCmqPm0DYN3iZnSpqoOIh7LNwJ
f5IDQU1s1dkeBz1GnIuWqjr6TdfL18rHVP9Tpnl7hm2DXZmP2AQ9IdRE6T/Z
tlapXOzbVk9l41xnFYeLBtqW/93PF7Ypi6NW7UWxJ88BJ189sCLPqI5RY1b/
t7kda9l8z3MMVlTMLN9Llyt8DWiNGTvSy5N4UIxnbtiF+XD+w0GKFeUVfz05
61ZvKLs2wjp2fS9hUPVFgj+NQV/6rSSDqk9nk75kaAewYBvcyvLRBOvWJir6
TLeYQ4UmDYP6+2YdBoU96Rlvtv0HpoP+b7/xLyrr0cPXsbjXK2d2jXxMT2x9
G7yFD5pcec4jdM8rLjfj6uLrBYfyenlhZVyIOLSst7w4FJ/5sHvC9WPyE+JX
tJrqpx/kTcFL5E/QFwgWVX+gtcTabZniVMWmL/1oubZWGtNsqW1vNbocY0j7
4nOrd9ICb8CgzBP22Sg6GtupmgRnjh9ojduIpRVDVtWT4TyiN5L6vGrfczy8
9mnmNFHfJxZm5ZXequQoWd+NSW160zL1DAdfqg6Tcv3QPf05Zb5ep2PybMA1
jLx43vM7dFJ6FvGq3Hk4FJ0U7uLzwkcfWSfmZ7nwR58pGDTWH0n5SGLQJtdS
H4PcT04jjK6co1hP+Nj5UlaXs1dT7wC/HSkGhTupP49ZP86pheI7GBT73rFr
jerRa3t93OvEJjZIo28StTq75/EbRR8l1QaFP+mnF/stz6vUBg05lPfUcqLP
Ej0/f5iNdYxnTHor3bx4ZOx1fvkti17W2T3Ta2Z8z71T2iiGz57750bS1kJT
76hUff8Yi66orX/imu3TMF/J4tzoOZ4dBxik11oKGNyk2vMbxRev/HM4tJ99
583XdqrTy5Tpe+3Tqvo23Ro381YH3/fo3OhaqGqii4l4XvN1mMI6FPCTxTAG
PnW0TemiT3zjz8xXD78qPlS1RMWi6KLmD4r0VyIvx2ugVflIYtAmegX6p/Td
BzlrK3/P+zBeM7Sl+cPGZLG4yGuze6PjUbpzaf5XQ2P9YVC95zoV1lGi3pL0
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
r+4s9M8YMxJTUuQmZdw4/cK3VvVT8nWc+P8fD/9pZ/GVJ5P+fD5nvuPkn/f9
ZuS3rfoNPl3uFdYnJmck8/dmRo8Ab/pcPmOWpVqJRw/vXxFXKuOerVqlcFjT
HnGjNnzzKU20SZ1R1RqFa6/e/JHtB9uX7L+MT6hP2cSH7419y71t3GuK+pgR
9VgY9TqlTD501QxlDCsPrem81L+bZ8O2dF/1YxxXPzzG/lMcSRmDcs2Xzx3t
SvXlYr4uDPYRp67Io8w5lP2yymf/1S9aPOg3/+LzpoG+9NTXrIbTE1/rcuc7
M1819vzC536r89DnP22sqvwY5a+3tV90jfY5DqGpB1KsRmbqeKfqMrH+/dSr
51jAoOFyL109b59XMaiOGSy6/+xlY1BqNGk66jGV5f4zJlh/z9CWvzam+v/E
1q7hZ1dNUHLhYVH5u3mFg6SFcn2az55/jmXPqPBljD/xr6sG05vzL3fu5zlM
Vj/0padL+3qKQ9FE0T1TuqiPFV089cLI/fPqu11W38diP3NdzuLxemQfxSjK
Z2xx9tn2c9+wa0TGqqEv3xufy88sNh31GIwZ1zlYNFVXtCyPqQ6TMm+23Z4F
ci59ffZkxqULtY8Nvm2OpdW4uRHPsx2lEbNR9CFtkDs3TCNPSs9i6M3q08q1
iLF6++alnu55Vuv1/ic2z7aeE+RzRQMa1/uwYhPv3/skyt5ouTAT13J40Y8J
aXepXG5+62NFw/GEDiqtlGWzHFh079bufQLuoQfooe981jRPGJT/n/3GvzX/
PPGasCr+NXiW+dXpQV/HLF8tz9WK+TLY3phvWjVBUzwPI/JMQtxs0Ycqm2+3
lvZFWy7HpGleHOsHa4bj7NCp1zpP7ZmqxaDFccvWp6hT73KRwnpMioXV7zi+
FgtQow/rxCbW1OR7V+w4MaCcK2FPeLRQ9U1X/Ql0TSzFn6ZRRq5hjOkj+1+o
zaE3px9JsugK/3x27lDrPpWzPwzjPqccCGIRuYaonwu8x73QxyeGudphDxhv
vm/2pbx3nuZj8X05j3INDK9ZrBf3cU0T5uT73Hx0VbZhnOJNWQ+YsW6N+xiX
ljEp8/bLCzVq9of3xaeM48n+jdWMHYXBdqo3hd47Lusl41rA/iLeUz5SXhX7
IG7uhfWU69d2/v8geuG0beLkWM8oziW4Ez6iD2S4b+FHMWjKD85v0Mg0H69V
Sls1nTTjFRiS/Q9Xoi/uffZR41Bfn0k66Mk9j3Vunj/Q2bXlWzYd86fmfRn7
sH1sL9tSZ99IK2CcwegwoumV2TyIWY35pvmM7U1p6b4uk/Vcy5ZxJa9jyP/6
nhiOJtdUag/s3vX8qs/DHkixWFCes6nh5Jf3qU/9pjEov93/wubGuf8Tm1ib
5n3vyhtdvv56dFqYFDalfydxj2cOdvvohlzo+bOMBe1589Bu651Uh0OxxcPf
TNZ6Yj0UczrqWk6m6eQcGhp+IF9LvapmZcr4Db81Ps2W5XmUa51xLZrS4mul
+o/lMMKmLt6U+NIw3hQulWY6Sr9zFYuW8WZVL3vmSQxpzFgmsaX0DlXOE4xU
Vi9/1D7vrn7RHYcw3jj1r7QeDrPdPp1dve6eac96BuMcYqyh9TO2xc5wTZ3z
xfsk2Pa2atUPqhdOm8a1Fa5iHY15gh6LqleZ0sPli5fOWWd/hBwKg6q3D/+z
r+CbbY9+1ezq3i8VDIoGCofOPPV7po/i04JDj+/bbH58W4cEgyonRte9sjqw
rCvnAOOC38RyFemNxP0r5pvmnE7lFqFvqk6C9p3fJ9Klm9YoQD+m9pX/jLpM
1KSvkwsPi+KH12+Z1zceeyKZi1TWh3RiE2vTqCEf+t7r1NAlvko5SJbPvuIZ
6pla/CmjvhMxOU04FLs2/XjSP886FPnz06OLFTU9NOdD9W/R/bXtuufiUeZP
zITX6nhesFrtuc4Ka3Id5p7MevA7i4/0Omsebwp3wqTopfR48r58tAmx2OKl
uaHHmcpHH6tvX5c568SXplgWOzh7uXPi7Ku2rxRr6Q2uIt50FOynOqfS48el
7xPHjTHIOFVcno3PSF0z8+U6HVN9kagPV7YM+FZxf9bLtcXeq/K54ncYRN37
NkzsndJ/q2qmS+O0Opc1NTv578Vo+G5hT+ZF3gt+7BXX6jz/Hf2TGFDlJBE3
SjzoO4vTxl8w6eGDe2z+0lU9i3I8/LkXi/FkO2FAWNY/q7+V+6nI40cD5Xt0
2LBWO5zGZ2HdT2+eMRmnTMu+0DUxljNfZaw3fvhQe+V5uCwW1BvbG84XhmU/
ca+O6b2xPqQTm1hbJu1TnIKuyflT139NzCX+9zAGFCaE/dAgm/jCmRaWacqh
+OfJW6qKFbXen8e299yjog0bNpt1fVNd/oU/fD8h/ufY8znXbq5R3Kfrxj3i
V1OOCPGkPr7Ua6ZnT88MLQfqp++W9/6MaaRt8Kl/hUfVgzWmibZZF6jKOP6+
39O41GBSnLJiPRWrUtovMecpi/3J9q/y7Mx3H5nensVy9mZct53/D1upDvko
rykp41lDnJXS7WK1Tdow+ArfOfubZ1Tes4/C/pyY1WPKuRMf/NyOP+y+z67d
+OzhIF7hWHKbqDeKXxo2XpGTny2X3vUPYuTvFDESLNt89JfPF9dAtEqOIZ/H
9k0sH4n815kXHy2NvfAxwql90zR+Q/lI4XoSx1mHQdFAY/Pl+LCdsVwkuHQc
x/XE1ofhZ5/P60fgQ+Ra3TQ+jPwiNMYwZ53xDPP1ojteXXy9s2/Pbust34RD
5Z8P9dhUbtTVM7tGnrc0TONao7gAMSn+Tu7ncCh+Tl4xPvd59z72VHn65LVw
X0M3R+Pzvn+xacyXj6Glwqb0JW3ay73pNqsffT+xo3U/X+XPP3HNWAmdLMwf
G0YtJ3hTHMzrOOifXGNMx8yfe7Uv6uRvMU7ElPweBiVnLOQnxZVKE2OMchza
fv7pRc8alnGstf34mVO8wz6Rn73N/SO29blOZT3iVRNUWih58tQPhTmpTQ93
4jvmPZol/6v3p8Wxfnin4FB4jeVpnKDzyUfvY2PK6vryeSofqawuqI2LEsas
it8wzSD7fXiusj2xfCRq02NVDOp98N5i9U+Vi0RdqlGP44mtP8PnzdhXzXnO
Y86VWK+jMjPNMqKBwnk/7LOvLPcLOPTWi/9XYw6Vf15crLqkXqNFnx2XvKVR
Gn5KuJTrnqyOfxODn+AJpvecCleiu3GdV29m6a1iU3Kdtn7viRW5T9JPuTfI
n9/mtspf/9KPlvvSPJv67rHnpk4XOTVegx5kD3pif5VbyPEYh/hPmFhchI4O
Tzat78/+kq7rex35+D6/r5kWHY5x2qbWpzhLjuO49edkfbiu+3FWto/lj0dn
9D7jusa5GvudrzMqzoVBvQZKHyTfF14G+81Pb+28+8YJ88fzW14V26r+n1uf
fsL+X+Gfz4+Pj0Pw7Fmnhhb6Sdizsm6/oFhtUBnLNp/4vU8KDdb3Yy6ea9xv
2a/bt29dFQtqdUEzLkULrWJQfO6xdaXffar+6U9ujl9dj4mtXePaDXuiYSl3
gprz1GHqaX43zxlrhnlB8sH3s67w8N49eyxf/q19v5/kUOzK3i9HObSq1xKM
qrwlWBpNdyP7Hbh+y69el//IX2J61WuUrx1TjaOiJnxe5wg+kL+f+yNcyu/R
THkNa0ap1n6bWqliR6u0TNW2V90mXrHUb8t0UzhUGp43tq3tWELOdTheeeSD
4tymZtrvB+8XMdG96m7qdWS1cvPY5TD2WXGlPGNpXLNP2toW5Z3003+9bbNa
Q66niHpkpOIWvXXP/5kV+TN1rgPSO9VHXuuhmFDmqTqiaHkhg8Z6c8oPTy/P
926cNT88nAlvonfSDxSfPfNkO3nP+nI80ESLHj3ZdsN5C5aTGfe3pwz+CnPi
lSeeYjNd98p0Ttbvgzz+xD+Pql5AjF9Zbxg0vE6gbVpNpmPXeooFFWfHcpGw
UY/nia1ts+f0xde68dXZvY9YT8XBoI/UzTtKGXGVq2s5PGNM985S/7UcqHsP
h5JLVMWh9FZC+0xx6J3ZrUkWDfs2sTx6Lm0UbRS2g/cUW9dUK7K+BXnfGgxm
LNMxWV53XD6IUfXXY/iU6zHzOXRwj60T9y3ppfymLR61e8a7y+avhzE9Z/J/
ma+8rp8/9M0TN4sG6LdZNZza8IUqB0cc1lYOeFtjrY0a/pZX5OI/fByI9W+Y
nS6ehxhH2Jkz7fYOqIr5G7apL4b4htdexpQYyufCl90niMlkOvaDXlWjCSbV
M6n88cRxhn740JSjxPUZXzF1QfGnw1FwNTzKtpGnhBbKe9aTWFA+4zvrDxn0
bmqyH9A6QwYt64/EuGbbWa5y7GM6qM9XUu4Tv/Fx+myn91uw37Qv/byotVS3
R3yMQYkpSOUiUYtg1GN6YmvLuHZcsX4iU6Y3wZx33fPWRz+/23lz6bKx5/I/
xGsuNTG0w7AfJ+/5/P7P47p/U+O6gxYKS1Zx6NyOP+ocP7itq30mdNGyWFHV
FlUePecmPIqvHs13vTGp+aYzVhQ7vrl0vi8Gsnz85cumR2me8OPS1flkTSL5
T+EyxUzCpLCE5zQ+I37Ux5aim6ILjEPdkLK8/FAb5X/2jfzkxfn54d3cT9g7
M/r+XFaTa0zyj9o2tottlKaquOVYLVy0+kHE3Y5TXVD5ncUxHHvWq9/zGf1N
PJnq+c0zq/e3izX9s6y0Uj6HE+syKHb+5D5jUOv/mfEnr8aZx/fb/+itMChx
ouTR8/wKl5J7xDpjViu0IYfCZ6HGojyd2H4tai9kY1KvsfjrWAyx1U3Lc/XF
pv44pPqlkndZty5TyKD2fJZtX5hzpdpTbfajmtj6NGp0Wk3Ic9OFzqnanmJO
Yj7nFXMyP9Oar5n5WD+iV55cFa9NPbfYb24sne3MnppulPdEXCJaqDTOKg4l
n5440ul92zpzR7d0mbNh3pL89J5HxaQwNttHrOs49ATtx9CF5ENv+x5tbJkd
O2oRiUdZHnkxWpbVC6I+FNe6XNNSPXfyU9SfkbHteQ0elS6q3Hvy7selPyba
aIpF/fuXj50q4hq9oV2i4zXlB/En7I61WYd93Ey+eMbXKJ5BWCZck/K3DtOU
f+VrDLWpzXK+qk590Rs+2BdiT7hTGqqfRvGmGPlFPh8+xqDeV49uajzk9Ezy
3aV/4qeHa6kdCofCoDArPEodJ4slhekaMihxkuTA1/VRc0/k2Qg2LovRCJ9d
urmiD2Jpw/EMQ1t/qMAPj/8G/qyTjxRj0NtXjiVzkajFmupHMLGJocfBk+G9
mWdEOFTMiSbKORD2OGrDFAvq8+H5v8wPH4u1rrOtMCg8KYas4lD6LdH/U/Gk
MV3UajnVYFHpo/jrYVLl+4tLVevp1sLRsWGgumZ1ymvkHvVr3LPQQhWTh6GV
+jp+yhWI7UPl88t378c8+fv458WjaKXj0nuyrKeomBTfvLjRc+jd3I/aRBNl
/5D/XScHZa2b4mrZ5mEsT/XNdDx4fSvX60eZ6wXbKX7Qnl+uXhxYnVLfsxMm
ZNmY8o4UaynffNhTnM/IqfEMGuNPuFTfw4E8b644px2LwrwsR/531hE2hUfR
DcWorC/fNWHQWF0mPvN9K2NWVn/e+iVdPr8ihkN9CVPPMik/PHlIjz/+qNWX
r8OgYV482xbWPlWsAbX5w2M4sYlh3Wfe6RX9ky9dmDV9ES4dVmw8/mnLfXf1
OJUPn9IHH9w3mvmuiOWSP152/u//g+XFl+XMw4dwKLqo6bUR3zwcevrFvynt
Q5/iUraX89gzKe+XZveteY20bWNcWi2UxQuFv5BX9VWvy1q+/j7xJuJRzgPY
1vcXHYc4SK7hZXXzxaKvHIvXtUfTqaOJWvxjnocyjJpPo7ZhM2ihu57p1lmH
qUadj4SfQDniYh6fK8MYaHscMD8fKyrzuT7ogaHvnt+gq8GTc0efqe2HR9+M
+aA9h6K9oElTx4ll8z+si8GgXGfow8nxqhuf0FddppI4YfYTeqR/dinLoZcG
He4Dq0v/5OOlPeLL8uKVb+Vz/lX7lHuYjmGTHK6JrX+zGrv5tZde7bAoWuco
alzCWWEPM2In4bBU3GSvDEruPhzp2RFdFMYs41DlKsGhWFmsqHKSeC2rdZ+y
23M7OwtTm+z37JcJj3aNa6j6WHrN03rcnz/Wl3bs+5MyP9Uq9Xn1loM7Bixa
pYliL87M2nb43IQ6caJow9TYFH+Osh/osMwz4TCWxxhDq4YdOA7SQTlWxKyL
99AE2671HjNf+1PXVF9viO/hvkHq4eScSxtlu33uPbzp4x35n/pYvjaor8kU
Y1CmY/pUHGphOYvCcqpfz7UFH3z4XKc8rao6AcoX935q5epU1Rws8/cpjlk9
DWA8xlEydjTbbzCoP7b44MlDqhsHipG7tGK+kXpMYd0puHcSEzoxGVxHLpHi
fRZef3UgPva6djUSr634ydRvemXQxey5Fob0zAjv8tn07sc7N7b+YmWMqHzz
sCy/TdUUhWulafJMyDbhh2/CpPDo4itxHiXOsc49ATZjWmJ2+B3+fnqeMh+L
B8jW0xufw8BMx/TvXDs2UhZhG7t5oidW9WAcFBNa/f3ZB/GjnkXJrx+1j557
R6x3k48TxTePnltXE2WbxfepWIa1ZmxD1RhhbOELsn4KQ6i7zzJ4FoD1ee5R
7K24Rnkk8Jj5fAe4Lmiw4fhQDCjM4ntQhmw4CJPv3ddzUm9OTSMm9QxaFQuK
z57pazF0oIsqb159MsM6SN1z5Zo9N8Tmz3X3wFNfTtZlKtunYlCOgWotdftw
XFuVj6QxxH4L58n7mAYKTzbhz+2nb3U++Wi1Bhqrx8T9W/uDdYpq0BPbkAZz
cs1F5xl1DDxGXk7IoPMvP9bNiU/8pk0Ghcf4DM2B/CNiQMs4FL3Ua6L8JqaJ
8hnzntr9ZGf6hQcMabGf2fZynsKwYU3UJvoor7xnOTCjWTYN7/10PheKZcPE
fA9vwsYycSnf+7gA6boXj+8cKpPCD74PjuoODYsBfa1yuM2zKD76UcZJ1vHN
i0VjcaLqNwmneQ4ipmHUjN3WsVONeVhPzzGYZ2zTHPPryW3jrxMrjHhjqx2a
9/rqJcfLm/VWvf+J7ecHOXUXrbe4j0+2fh8D7JmE31+1J2Eplq9+oeEzi2my
NWqxtzWuQx+9GNT3YYIp8f/WiQUtcpHqrofjUMYNNUOtRuj7N1bUDJDx2b/7
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
oIveuHTM7OBz3y40U/iUZfO/3rMecCqGRmz1Ul0s6bA4lGOg/qReY1EOPb5a
5SxZz6UDLwyVRWN6aMrgUB+bhqFFr0cORV/v+oJW94rxx1B5WsqLU94yPKq8
LjTwXtah299m3nrKar6KM/bnPv5V1Xvst1+R+LOobXb14pquGa769KlYUPRR
vme6QdeTIo6zDQYl954Yz1bGeXa/hz81vshnR/v826d21ObPUANlPyreKvTB
cy9AD0nVr4Z7yI0f9bjZiGZ51uTxnT/bmT13xv5XPsowTLVAud5xX7x+dTC9
1/o1WC/MjVed+ti4lp+K/jZ1jgH8efLQ9lLuxCcv/3jM0FCJcfT95puwqHgU
vz6/RVfV8m+f+LbNWyyq3uuD9ueKZ7u5sN3+ldxj0Yr89ZGxYz5y4uqmXzBd
M6aT4r+nnil+/zsX9hiDwpW7t3yrs+/ZR41H+ew//eUXjSeP7N7U2fqdr3fe
XjprXIoeynTy1b9780fGoXyOnTm42fRaGBQm9WyKtsq2rOrnEsvN7+N8pq84
/neOUaw/qeqZMjbRupRDjz4KtwyLRakhGubMp/RQ+s2HOfMcbzToUV8b2jQx
KLWWyqYhJgReY7rus+50EVuq/UMdp144nedA9i3zFyNczf1UPiesG3N8sm+f
ufhTOUhowIPqwTkM4/xWbdCymkz4oHmmH+S6wPFff/gvW2FQtMKmsaAx49kF
/mQf6fijfTbpxRn25GQeqicV8qfvyZk6XpM+SaOzxbwuluzq4usD8cXDmuid
XuPEzwJ/4n//6Od3O7OnVsdpjIvhcw1jQslRSvnj6SXKNqETLF9/PTlf8Weq
13uYr3761LHO0pU5+x37D/vH5cumo8Id4lGmh2nh0V5Y1Bv+/bd2/R+dnxz8
d523Dn/JOA7djGsIRh1KeAafb79xTdI4lfsL54a1PojL5D7F/Vf5wfgPvYbK
dYX775njB4o4T3z/K2qgZu/hRTRQ+FHap/zz/I44UO6/sOh3/+5h+w7Te7RR
dFLezxzY9iC/6fZ5407mC9+yDJuX8+fzCjfwDMOr8XwLDIr+yX6r6mFjDDHb
3cdiUdUW7eaj9c+irA/HqqyPYp2+Sim//Hrj0DqxmGI2alUVfmt6ceU5Qpwv
BZtmnzftYcl45xmP5zrlr3EuMUZYps8Rku+8V398yJ+se6oW5VoxzjurDXro
oWQs6CBzkbw98vWHLDe+jC3hQeJGVT80NR3jkmn6ucbz253Pb7f4AOm/u16d
tTx9aoEqx6huLpLWhZ6isTpM8CjXfOpfpdZbOtxaiO9fj2b1dY/PWDzoh+9f
b3XeXJOIGeI6SF7L0tVLpreqrhu5R4xtGBQWHUcfvAx+ZizDX3X88UyvvCT6
28f2rfgTXqyKx4Q961zjWQ7H8my2zz2PMh9ykfph0RV66bZfMi49v+Mztg+m
9m4t9NGo1ldi0uUUr3g3vx/JyI9G0yGnBuZkWpbR67UQVoVbxILwIRrl3z38
p4Vuue3vvtrZ9M0/t8/QQOFNOFMMitb6nx/+s86OrZsK7dSzKWwHj8K+MCj/
b9/0iC0XVuU3vFreU2Z8P/P3j9n/+PBZJtuI9le6PS1op1bzJ1tfeI6+EG2x
KMeH9X9zacGMe3NqXPB52FcpljOf4tBR5fq3bRxzxvrdRD9Db6ZJfnS3ew3N
6/uzv/kdz3EwJJ83ySs3n0POsqHmqVwh4hdVX+dB34DzPfmUuQ+IP1nfWN/x
tWbwONfCslhQ8pXCepjtj6WLtfzwcCXHQFY2LbWcrB5+j+uELx/mFXsrB97z
J+OgiR8+lYMEf5IDj5XdO9WDtemz2sRaGKPZPaGrQV9qbZ5w5JuLp40pYU6v
X+l66Y0cKK5D48yfsqb+eOVZsQ9CjRftsoo/VZOpTmwE88P8Z+jZfIZGSV17
Y9IXd9SuK9qYS/O40tPZ/NEY8eviF2b9U8+YsAPPKLCPHxeXrB9gV+NEg2Ee
yq/xv+e6QS5dz9ePjN9Yt4e/+gW7V7MstFC48bO/89vGlHAhPAqXyq8OQ6Jx
PvaNf28sKQbl/8f+9q+NQ6dferr4HA2U7zD8/KaLZss88PyTxrEsi5gAi6HN
lqcYUzExMbV8t4K9W/ThY6q7DwN5FuV+Cos23cfMT/zpjetO7PkB33wqV2kj
caj86VX+bfbhyVcPFNdY4lDke+c7sWSdelY8Z+g5RP7w0I/Pe9VMgkO7fZ16
98WjT6huEK/j0BOvDWOf4GdP1WQiFtR00j7iD1X/s4zZ6eFZpYFK27Ta09k6
VTEoRr36XtYZJvb9OGFN+nCqBr36HHGdqaOBWs+CRA6S9CGr632z3E+i3qqj
Hjcb0dAkGXtt+N7R/biGkFv07s/eKcYrmhw6IN/BZNJFuzH1U2NTh76O3b46
E/XH81kqP95iXe93Y13xz/MZmnCZ/93zZ9n+EWMqjhfeK1t/NNJb1y8YGxBz
QR1QeLSq92c/trT1fzGtFC6FyWAZ7o2wJPc03Se5B3l/Yqy3Dz5muIjrL9cf
poVLY2xa2xK16JkfvWvU/4669miVih1FN0ULNTbNWFSsyHuYkmmJEy0YNGdc
mBMGhSfx4/NeOujxIzsLzRVmZTrmSw2pML6U9UFT5TcWO9cCh4rzMc+ivFfu
UjdnsFp/DjXQmDEOw3lxnoQcGtNGYxxKDf714JeHJdEv0f85D8r2t+Ipwjhe
xhp+8zr58UzLuVTkA125lNROTWPN88OY/7s/u2Pc0rSGJ+ykWrv8fq3WYIoZ
jIVfKBULWuQi9aG7cR8lJgmOTY0PWLGKJzmWYlD843VqOaGt9uK3Zr/Ae+pb
v+XFAyty4KVroo3WqUfPPFQfJYwBRRNN1WHyJj/8JBZ0+IbuyL7HX9zvvG6+
MWvsqbHLdY/3nCe99uoYR2vqj9dvpGsQxym2xDeeyj0q+DMSzwd3oltz3BTD
C9ehBTZ9ltC8YFf6KMGj6JiD0EhTWukrh3bb+qvHunx73IfDa7RqDcGhYiXu
nX37UFK9OsMeSdnx4N6i+vViVfnZYUf+Vz1RtE7TMg9vNmaFRWFM1X7ilbhR
OJLf8j+vzItp0VuJNeU3sBW5UDAuv4NBYVe+x9/P96vuRQ01UhiGHCbF1ar3
p/rhWC2VjEO3fu8Ji9nzy7O+9dlvxUEpDTSmiYbrAZuEfvlUntJt1/9F/LSW
81m0L3UeEJdp8ZI16kX433stNcUoWo60SPal6uSXzV+9GaWZwaFNrvOMnZA/
11PvK84T7gmpWFA00n50N+tn7eIlUtP1kg/Pb6q00+d2bO2cPd4sP55zkvkq
1pcYUPogKfbT99mERev05IQv4Ux6i8ZykIgRrVov9ehcT+NvrZj88FV5C1WG
tqneRsSTo/vBpGvBt96Lxfzx1C5K+eMx9FNqcCoPhpzsKv0zfM6EF9nP8Jq4
k3hapmtDx2YejAW0cWJ2qGEPkxJDOkidVFqpuBRuI8eJ2E+0HfnHdY2Ac9BD
0bwGGr9Tk0ulk6JXmWb14R2LOeFaC4eiifKKDgpTEl8qPZPP0UFhOl5hUNhU
eVEYMaforWit8KfynDB0VuZhta8CffReap172BdWCyjbNngIXon1//TMWaV/
1vHNx+JDY9pojEPRR8c9r4XtLbvvwfLGeXn9h5hfIGXKKeJYpXhc81d+Pcza
JJZBvmDlKVG3qc7v0CXWM3/Ch1bz87nPRBn06t4vdfvI93HfZR+qH2uZfleH
QeFC1sczaFgHLbSmNZo4vuif6KD8j4ZJDrw0UJiSOBxNz3lflQtv80z04qzK
QfLHymoCDbA+68TSpvot/fAL/Kk+sLDLuNZVatMKf/xr20vz4xnfxEqjgalW
e6ifeg71/Mmx8QzPMbKYztzfPoz8PZbJcqgVy7LhQfgQTsS3DjcOSi9lvsx/
7gd/ZLyP9giXonm+tXx5tLHjIcuVsKnVSSK3P+Mh8vPhU1gUnZM4UzGoxYdm
20g+PQzKOKI/LLVJmZ7fSkeVMQ9qRvF73nNs0EnFt3ApuU3wrS2b63EfLGrx
hdl2oE9z/4P71HPpheefNdbhvtqEPb1xPw2XyXH2tZtSPeZjdZvCOkIjt2yf
W+/UbD/ZuDgzY+vMuMZSfcg47+QXiI45pvuwu63Mh2PAtGUaqPiTaYi1KHTW
bH4cY4s/rzFGfJ5S1b4ONdf1yJ8YTAjTpWJB1Rep1/mT91VHA8XqMCjHA/+7
6sXX+Q0++ya9koi7gHXZN8R7EgOqPpzwJ59pWurNl+XFw6dMR50ltM7QB6/e
elX5u/LBw8ZrtQ/CWjbt/37qgBLbKP7kerqefO5lBhuqH2Xoj0fjXDixs4iF
Vl1KtFP1mr9z/qVVHIqOqtpL5Gj5PlGeP9FBe13vNmoecL/o6l3n7T7nudR8
+Nt+aag+fHhc9/Sxu5dFmBTNSVyBPirdlBwmcpuID8WXLx++8vXJY4JFpY+i
l6J1yp+vuqWwK98znWpOMQ36KdOwzKL+U4+aKFzoc1d8L3r0UbiqFxZNPVdI
N6lTP1TrJCNeTjEe4zAefvmXfzm7x3+pqHfAOn760//ajOersP5Al/FOrNRB
s/nAml//m4eK48j/zJv5UL8XroAtYzGa3s9vMdg+3jSb16//+q/bOtYdH6a5
5vnUqfyYsP7SeuVPDD7c/9L2ZCwofvh+dLe6GihWJx5Ux4P7C/lCdf31dc8p
r4HyHoaEQcWUaOJ+es71sjwkpk9poPLB8+xdtk7sN/HnJBd+NEZfJOoxNdVA
4Rj8Nfjb5U/ZSPwpQ2MK/fH047G+lOoZ6bgzxp4y6s7Dnt3arAurckPJX1Lc
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
H/XYG1e7kd1XYA4/lqhtLtZk/BL3iR+lTA9TXkzsO7hUTBP2ilyv9vMPbnbe
WTpuXOljQPmffHnqQ6zIi6dOztWZ2poj9VVVYxrr9uxulxNVDzTWp8BiNPqs
G+vN35O4L9bVvpSDjw5PHvyw4kqllfqapdyniW9lfcYm3wmL+Oy5T7G/iPlU
7VDpouTR0+dJ8aNop3AoufbUeVK8KByrmqNoo6rds8pK1o1rNLoJY5nnj1ht
UbFoU84POTRZx/7iLYslhdU4fuqrHuqi6g3bZnz7g17q8/bsJb5jWVyXufcX
fvOMB/ie86OrOX1pBYPiJ7f43Q/vdP7F//4b9j3nB/tUOqh8DFoO/I+/AWbl
e3Ew8+rGax8r3qsvmHRSxSyUjfVYjVOfN2O58huEPzFYBr0zxqA81/Y6X8vn
yeuwpnRI65dFPF3GUdzbVVOZ+wbjjGMBb5JPBI+ijf7gyb8xnzZ8Sb3O3/3t
T1se08mZA6Z5Mh3fPfTVL9pxbbLO6gsvvz0+eF8PVNNV9USCT/0YI+cozIfn
M/zwddbLet5l+1NaJ68y9l3TOE/iRCf1ReNG7ST0za4v5A3rV4622Us9UPJh
sNT3cKhyZoaV9zJq49yGMcmH9zlIlhu/6xHztb9z81xjXzfT+/jQD+9275nE
RAyiHzb8CeP6zziGbWjb6iN429XwguXUb7Pp/Lh+cE+VVjrMHHzvw2eZYd/R
scmVDBgR/oJd8L1TUxT/L+tOjlLR3z77Ds0TPkX/hD/RSq1O6aUux3o/feHD
bpA7rdqi8J6v50RtUeKtxDxwoNX7qaH9+xylsvhQ6SiqKwX/pfoRwsOMU6br
h0fZ54x7cqOYF8wnNixiAl1OEnUF5KtXnjvv2Ve8kkdkNedzbuUzpmO+nkEx
9qvmpXwlficdlHnhE2N+Yl2th3RYxQRxXGIxC6rv5/M/lAOv9VjP+e8xg0di
/PnG1l/rqy+S9inzSO1PuNP3ekf3R/eDJznOxOmKI3085Z3ze+z1oa/8YefQ
s490Ti0eNW4Ul/V6nYY/VccezoQ/1Rde+e1YVT16HzfKeqF3hrGgpvPMbBvJ
MTfmn/SaX2WwpnoXcb1FV+tnfhZDWNHT09exJNZw1PtgGMbYx9e+6nzI7tm9
zA+fO/yp3iX8z7OtfPPoKf0ey9CUew9TcwypfcD7smeOOqbaPYr/4L7Ofcv6
XU4dtXHZxv2J5aBNDjsHP+bDP3rgBfPhj7xmaVCPB4PtqFcPh2LSOK2naMby
9FzCJ688evRQ4nTRR+FU4kbPHNxc+Pkth6mhv5Z7EzzDWID1VM8JY0zouYsx
Y0yasVuZDsf8UrGhoXl/HnzLvFlGTBcVf1mtIcfFTY4p0zNvxbwy7tE6lZ+l
Y0MuEBzOMvmeWFDGMWPIasiePWG8zu/QNZkOtlXPVPYB8yCm03p1ZfuW3Hj0
VDRnqwWU+yBYH96HfXDY90zLdDwfkk/m9wv6W8iT/M86wp7yYcJg4iD4ZyPl
CbCtaHExBp3b8YdWF6iX+fIcZH6C7J5QVlNAvnrLUWLfBznFMCjHkPuJ9bF8
9ekV9y3TTvZt7py5cdjWtZ8eiqwLDArzUn8e9vQ1QWFSpqNWU1VfeM+r71w7
vqouPf/zGf1gRnHcJwwat7Mnp3O/zGzfviX1lSfevWpaGIZlbhQGpbYSfve6
vePLTLGgqj1gLKp43MXTxoZ8t3T1Umf5env7Fw1bzw2nT3XvJcQG95qrJP+r
ckG4l6FzeZZAu1Gv97aPiXLwmbevVwonDrK3U5kPH44Zac1Sp4vCLOie9ADF
58r/6KLonuigxB3CpYof1bTk2fM59e4x9WKiN2gv28UxYr9wX8QHLBaFhcRI
PIfJR55aRllsqF7RUjB007B2pZi4KmeDccwxtPWxWKZp41hM/WTxU7BdyhGX
b1znBNtjflGn8bIOOrctTjrk+vw906lnKs+iMDK/kU/d+0jkf/AxsLAsZuzN
Nue8appvnp+FwZXMk96bVssqZ5mquvKc49qHLLfX/O+1amV+eNi0Vz+JegDA
hSm/FJ8zrqzn6ump4vlANdP8OGYMpThudmaX6aCKl+xlfVk2eUjkI9kz4ulb
xqPyw+NbpxcS01b1hfe8isViQdFEWfdRPe+sNwZFB0N/ggVgvl5yUeATnnnw
4fp+O72afC4bJdazicVq1RMPymdN5gMHij/JQyJuIoyZ4LiqDwyM6OuIlhnn
JnEZlquaGf+jpXY1nS5nql5XP8++GP5c5aHIr4l+g4X3Lq6RcOgwuEz1SmO9
nYaR7xT2HZUPv436nLUtyKm3WMK8ZxL6re9jTy17OJO8JbhTsaPUwif3Rb1E
icMiHgXjeayIG+3xGLFfFCuKricWvX//Exv7KRZN1a9P5cvDrffc75XfYTUt
89pXTfKF2af8BvZCo2Tc695faKl5fLf0XZYHq/IKu/HburE27AP2BXqn973a
Zxk7mn6cbwNcgk6qZ0K+q3tMQpYVh/rYQLu+wK7uuaFO/fT1ZLBWKh/e+nM2
6K0eGtdJMWiKs9j/7PeQU5kenZrvWAdY6ez0ziTHkTfUb/8g1hfm5NX4c/sP
ir6c8Kfvy8n3VQzq1yMVC8pnozr264lBFYMnP+iD2lTNeJTnIHFKG3V9vK92
1Pto3Ix7cXg+UzOUe3JdHRHWNObMrhPcN8r68JJjphgL7mlVx+SK6ZGzdo/0
PkY4lxhhviPOlLqhGBwKp/I7mLcqVw0zHSebnvuc4j7v5vcq7qlcE/GTh+zA
exjU+r8M+bj53k74zr1WOkwf/ki00jCnnv6hH94xvy56J7onnIk2yv/on55B
YVO9Z7xTj3RhapPFIngexTfWC4+KRVXPCRalTpln0ZiPPuRQWBPtM1XLnu9C
FtV4loZEvAhjOhU72o9165EsFX2NeJW/v8m+UnyrYl7Ewp5Necbgle960SdD
TZX1Vj4xjOPjEK3/TM36kevFyjRQPu8nZ4WcdzQlnlN4XolNo3t+yEIWx5ud
355N4bVUTs8HeYxwk17woVGTHh10x8krxp7kOtEXKeTPqlyk0A/PNZt77TjF
gtq+XwcMCicqjhJfibiRV+LcmvAoPDOf12XrZxx5kw5Kbrw+g31g01Hvu1Hb
zYtHVuTGq2fnD+v6BjIG4FmBeE+uFdRsrcoZgw91P0A71Xxi06leNLzJuIA5
YVg+D2vCrvA73u3mMHtONd+d8z/KlwcTSPeEEVI5DDEblD++F+N+Tu0q1n3Y
Wql8+GF/p6HUhorkuuOPh4dh0BeefNj0UXLs0EQVL0o/plU1cE8/W/gBOAe4
Z8Cn5Oc35VHVffMsKt1PPnrGoZ8vTAl74nNP1bKP1bOHX4lNC9dBcR2KCTWf
dbZcGIwx3zabwpHSTWFg5TZX7SvlfHE++nWSf1bvi16gPYwT5q9895ixnPv3
PtlQefDd68Y1u1akNFC+60e/4XhduXzerq2xeFBpnfZ9sO9DNi3L6cH/wX1I
/cR6WVd4GQ0UHdXnIKnPu5+2KhcpzIdP1QXls5sLR0Z2/KnpxPaOehz2atIY
q/LJYzzK//zG61T4ZxlH1sto8XRr60msoNXwCWpLbsQeSd7C+kyqCWoMmqgB
Krv7/u3O5k2bOl/5ylfM/uprX+vG0dbI8+DawjWf4yxft/8dGqb0Up5vzG+f
fc/8lRPB+IB5rZ5HHhcmTqUPltUYvxvP1wiNabl2cR1scv2ST3rUxxGTpmT1
IuFo4v7Odn331FE0rXSIdfR9f6ehaKUBh6KZcXyIGUUL/dZffN4YlHqj1lcp
wqBlPKpcvab9mDyLwuWwqHrUexYVW6FrwqIp/bOs1yfsym/LOI37onzoluuv
57HT06tiLMWssDNsqbr9dZkUzr2U9730PMr6kcdE/jrG/3yvWB2MfcZ6sk5c
t7s+9P56YXXnN2UsJB2U/7vxNytzrzeKse0pDbTffHjZ+RJdSfGijC+f+2F9
JjN2tWePnE15FkzFgi7NH7ZjxzjqVcdWP0vqMIk/w5hODD20iQaKwZnhuqs/
Z1ld0EEb/M82rzXtH3bjuiCW/P/erf9sKh71LEjOOtdqYv24LpO30qbvHG1O
/IvPFr7Z6PyJUXsp7BsvBuW75G+ze/xzP9hm3AnvMRYef+zv7D1+Ub5nTChe
r5tLctu+Y7/zOT2VONbUFN6589mufgo7/OyGsRPXnjeXLhfzQE978tGHV0yr
GqH+PcthGdzPONZLV+ZsWeRNoKtwP+U71ln1dPC5KweDaere68aBQS3mLdsG
f/+Wphv6TpmOdbbeTiOoox9qpeSBtK6VykefjTXy1pn/mePdvkrkx8ORJ/Z0
+y7AmPjiK3uEZefH/MHHipq5+P7g2CbrzJiyPl8ZhxIzCosq5tLqHwV9j25l
9zmvhcZq2ac4dYvj0X72K+vMMyDnjHKZiFnhecJ6xuZ+hFj9/NCs1vtcN6eI
fHnVasL4n32iaS2XaMAxHb42KIxj8V8lfWXWo6H7pWrSKxepjd4tynmPMWjK
D+/ZVM8FsT7rbeX0sC8uXrhg/PnEpk3R+vKyKg30exHdNLXuXFNGOeZ4Hlxr
deq5X6i3UJ1c8zJjfKt+vHreMB7nS2o49Grorb3UFl3P9k/XX+uJQbm/o31y
zEzLyZ4dYEfMckSO7C300U1Pftum//rXH+589zuPGafy+b49u8003aGX96z4
HUyLL53p4VR9rml5bvmLv/iP9p5XYgK4X/I/6wCr8p2ebdBbqGVN32leeY8+
KP2Ve544rq4WCk9wLoyqtqZ66Ch/A31N8QZe4+LeH8bDea3UzudsXxB3N9Ta
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
088U99mEPT2D4gem3ibXT2md0kb1XgyqvKSr1s9uqVvX+3i3V2jZ9SylHfKs
xX6NHWt+I7YmBrSqB2fdHpv9WpkfPnbOTWzw1u0DcKnIW/bf4fOFCXtlQfJa
fMwP+dtVflueQVUjqi2+WkvG/aOsPr3vC9DG9VnWNBZDzNprHQV0V6urn9eW
VU7CuGvfyo3HDzrqdZlYucFIMc2T3CV4I8xRMj49vN988coB4pmMcVnm8141
RrJ7GfqmYkBT/nmfR0/+ku7pYlLVvVffUP2v70NjGln4Hb9jGXAqXFqHEVXb
k7wl1RrFr0od0qKOaPZ9mKMkDm36nMY1JYx5hUv7yVWy+Jldj1Vqnyxj0M+V
3biGbuwmNTthz317d/XEn8SLwqDEqMKZcOjFN86uquPk+dPXW5fWLA1VcaKx
9U7l8DDOUnnk3EdgUI5nnTr0TeM4erFB+OEn1r/BndJAw7gXq6f0wfur2LSJ
3bg2a/NRT4bUdLAp0yhfsq3+n2vNrEfSrpW9eKkVikaiY9K2Zq08sPv37tXm
2ib9lFLGMwbzgX8V46aaiE3u+cM2Ygc3Sr/OtW7Uoo/VEIU7Yjopn8OujEGe
M3z9oLIeRjFDo5TfnftcFYt6jRQNlWdPuJFX5sOrPlt8ZZPND35N5UJhTMO0
xreOX/mfOL4y7YfzWrwJj1uPsNw/r8+pJYAG99KPlou4UB8jStxok+MFE8FV
beQqwXz0eF/e8aul/LkwhJ4TyitTTCZszf7thT+xqRMHzNctfkT7hEFhUcyz
KMa0/AZ2hT0tFynXQMsYlH1IzlFYS7NMO1QuPM8rh069VhoHOkwGJeYl5Ydf
mu+dcdar4Q8lLm+Q/mhi8dCfuL7E9C/PO4Psc8O2wrmqjezrSa7VOj69WrJH
0uHNti+Uu9tWTVAMDuRZA+6ve5zVo4nf9Vu/QDnN9CpUHqb6Bo7jcwjrxrpO
YoDG3zhG5NmE9UGVoxTWc+JzfPXdejcPanVqXHZ7LTTzz1u/z5z/rNdExpCp
eNEqu3NhT0+/82wKl8Kk0ku55nB/Dscz74mLtd6euZETpf6g1BglthutmN5L
aJ8xDuXzn75bn0XhIfU2X5GrlN2jmlwP8DuX9T0i72hYdUlZDmMIPx8aqPKP
euFPaaCwcywfiX13Khun8sXzzMz0/A4OVS4S61TVeymmgSoXKdUfnmWigfJs
opz4KgYdhi9+4odvZkeP7LUcYmrvDOI+fMViQt4oeObDSK0cntO4vnTrN1T7
0Xuxbr/aadPg0NXgTq41sA1x6rzfSHGh3KtW9UjCj3Zsu/Vh55mhbt5QXeul
P4HvVd9WLQXqZFP7xfd+QWdpGpc3sYl5s/gJfO+RHCWr1xT45OFSxqD/ve83
2YtvmOnRRdXzU9oo79Ey++HKfniU5a/g4+w6U9XfiW15ffZYUcsJbdTqmGb3
i7CvfJg3X9ffrf6Zvo+PxWjV7KvEupTVYKLW57D629i65P5v+I9tYNm9aqAz
s4eL2kwxBg37nIs/+S01l5SLpLiAWN8lHeeYBqqaoKlcJGJAYU+2+7tPPFqr
B9KgGTTlh6/T42mjmnKH7bzrI1cdViDGDubkFY6EGeTzhiPKGBetFOaBD9vM
mcdYH/QkxQOSw8T6KX+aZfLd4qVZW+eNwKKxHkncG4gTVY5XV4Nr73mgV5Zs
u6asTPd8H0uMFgWfTnKBJtaLoWnGfO9WlymIGYVVqWkfjjXGHzEjPBv30+uc
8U3NetUWFf9ZTtJU18depZPyPezKtPjt5bP3/no+r8u3zGf+4GNFPCp+l/du
l/ekZTu8JoreDLdIDw01UfX3xD9fNx6V/axekzLiAK5W+F7wPadq0PM5emTZ
OnDs33nvx1aXUzU6YTg+a368uz2ZqCGpbbFaq9l1V/7xXnRQGfMJ4z75jH2g
afh/hR8+rwkq1rfensE9Fv90TANVndDUMYM/2d49R44m/fDUYvL9OgedF5/y
w1f1eNrIRl33ok5FD75OdE34ET6AN9FUeY5Hc7ybnwd8V+V7hWH5TdusgY53
dXGhiP0Me+2IldVvXDEBsOkg4wJGabEeSRifkUsgTbrNGq7KcWJ8NB1ng+hX
H66bj8vj3i8WneiiE2tq+AZTdZlCXz1a6KUgTlBMpDw6ngW9ZtjNd15qpJEy
PfdHe8Z0TOpzkmBTNFN85spPapKTxHt+D5vWiUk1bTRn0Zm/f8zYUjXJ2Cc8
G1pt0reuFPXtqScKiyqOAc0z1EH9e/KY6rCoxem4PAFfb5/PY7+32lIlefBo
3+H1Cp3Ms2ZVfc6mtcxZHhxote4zDhSL8oom2YRFLy4dN65kLPLbUPPEYHTW
k3lKN8VYHhwgLVn5+b4mFvcX6z2fPxc10UA5x1S39PmDU52nphaS/ZAu31oe
Wo+khZltpX74SVzVarO6iR91ubGJL57+M5ybXB+lI5rvduly4ddQnlFdbhBr
wID99uTRM6F0Xrjq+tV0XR54k3VV7r6Ylc/WWz/5sh5Jc6/uNE5sErNZx5r0
5wzN5+g3qRPa1NCwuN6qByFxG/jo+ayOX25iCfv4bWOgUO/jfWO9OZ8XtbZH
vl0lRt31WF2mGJviv4/FSBK7rPxtaXLqa6lYYXT8uucT+01xl8QAMN5vXMq4
dO5wZ356a5EPj58c4zO+u/KjV238c31nmVarITs3dI2HEa2e0syLK9iVVzTP
Mo1Ufnox7alD2yyuEBalLkRo5Mz//+y9+7Md13Xn93/l17EnP7hS41RlJp6J
K4kyGtkal52KVJbMyJqy5ZB6WNRIIEWJIKjAAAGReFAECIB40rx4CbgAOPcC
F+AFCMIgCFAirTgkh5AZklUn/Vnd377r7LN3P87p8wR+WHXO6dOP3bt37/72
d631XXyCQ+FG3717rffO+3cNW4R+eY9L+R8sUocB6F/lQclURzLclmUpDtTe
N270z59wncP4xMF47d438vpEzJvkDXHNVceqDRZlO3Ce5bTfymMTxHsK5/I/
nywHsyqPieOYJpObO8GbypcqY2+P/Z1d91gcaJXvmuPD99IvoR5TWPedz0lg
UNpS5YfnPgG/D1MjaZGt1ABfOd9YowhMBlcJVlFuDxym1TootHfAG7kforkv
V3GITesypox7cOXC6XKc42NvqsXDfUufEB8rLE17FokXVY0kz1WoRtKFV3d3
zoH6cTasxhKxxOLIx50/xlhhrrx1c62PD5n1PPqZtQw3bvrmH/f7NbNl23/0
zd7yiV15/cAW+3rsz/7tzMdK8DyCqwt5T37HuFAfF+qN57dqqaumhs2vhb4D
ZrUyE/56X8MIXtFvl2sSvV/WgY8dm/mYdzJqxwvHmE+1qBnPOxo4We9t94s8
FHve7nuixKPwo7zzpnz/LBc/C45Fi5S2c505N8O5t9fsXDkW5mt+ch4hJzqY
t5Tjk7p4Uc7bc3byjficeT5TcaDgUjCSvwbDxmR6a/PuzjHBn/Sd6gZYXEcL
LMo5gJnAnxi68zLFh6ItoFwkxY6Sp8R24vHfLTRINEaFReFChTVjvCHHSZ0f
+6d9d7P3j6d+sVRiTK5xiNcnxYPW+eFpM5Z6n5Ce67Tnrkmar5vYNP8Z37a4
Qsaz8YT/8Lotlw+XMTcMX9VV7aKb678sxz/26uG9rfeh+mE+h5rzzv0y851D
Tz34VI0k8LrlqK10G3s5ao1W048tagBW8dldGnMmz1rGgDS7eea2qbH40PLn
4Tf+t/+u/7lfYEnjSIoa1lrexqx2CJyo276sJxLZZ99yt35fGzocP6manQO5
8xEuVGZ5867WJJgUTKn4Ee4J5rxwO71L+Vruhj8++tD2YTxehk3UX1wLb8Kd
4D3l7nMPit9SfU2wEetLS0O4mOtN/h94UtpRPI+r6jvBmfq698Szfhz4xCxG
htyBDE8TH4p/3nScsnPh2ZGKE/Vc2dZCpydVO5xzqsqZB6OmcuHBVcJbcF6j
Yk/PhzYde9JQCu/DGBaNxYuKA5UuqDdft1PGfr2/HlxqWolFnn7+/LyS6zAW
WAsMPwwHyvHgQLkG5ML7WFCua7i+x6DjrNV56fBTdk6xmAJxxlWx3crzWuRn
Czyn5ajdu2JG7o+e603yn8Gawp/UP9Q23JfvFu/BxF62jfejTexrOZvz5Ace
JUcfP/65U0csLqAtFxvbF/eN8DXtg/OdRS2fpsa8nqqRxPs+59rl+xj7YlyM
UqPVvy+ZvsEE+0t+UY0B4jtmVc9pFg188tgjX+7DgmAXcCl44vmn/qZcDjcK
J8fy7U9+y/jTLd/98/L704/+H71dW/7WnmNbH3+k99Rf/6lh2ctnXzYujP9t
WXa8l3dssn1qX+xb+2O59sE2LMeX3DUOhd+89PM/idZR8r9Zp6qGl2pNgrvw
g8vHCU48dXR3ru20muMw4QyvO6r7WpxnyAMKl6iGqEx+LjBombuTYVjhUL8P
xbKAl2M57yxTbQz56ZvUGo3l0XscJf+86izRV/jnQyy69Ww6Vxqc8uknd4M+
T+fMLx16vpYDhccjRrJtLlAXGBQONOXz9VhUvDrv2JyXsKhiPsGgoQZoDIP2
8bxFPaUPfrVubQAfsB3HMX3GDKue2fdENA9JHOjxw3uTXDXbg0G5Pk9v/Vlv
y77jlXnvvGuMG4MS30a7Y7r04FJh8yr+XfXgpz1fd2XCTlz/k0f3GM8Jn0Ne
B3gR0/hjnTqcBn6nppDwp3hK/OfCn9TJPLt0IIlfiCEVBoZnI//a/DkZrlXc
JmN0FK36jfvsTqc4ymJrsnZxjopdmFffPM8BngH+XiGPgGVtOPGmZvqz2buO
PctG6DPGDDEejFvG3aT7Ldf3Olbm2j3Uc2pgGaYDI4E3wYrewIrkbSwd3F5i
UPnZ0dTkf9P/ztbRd3Al+9v19GPldmAx+fVLHJkZx+TT78svB5dqHxyTY3eN
QTFwUcwnn9ILTe1no9bk+6Uf3WMj5k7uM6914rUeQj7RG+MYzIpfPTQfC6k2
WNz+9atDjX220RwkHdNUvCi8qM+jhx9TDSawtN4LweZolYNHMTSdaKvHouLJ
Uro9ihn1OCGWM0+8aCoXiThQMBo4TLijKwwa800rdszHqxv3+kY8lyc0adpL
DyzPg7hpGM/nIIGPfF0kaeBLtz7WXpbrOJo7mbu5bq9aLNi2getNvy69uKny
fUwxAlynJ5/c1Nt55nrSD4+BS8fti79ejOeYLv3Jg9vLeIUqnS7+47wmOj+P
0VSXKDSe4bw/6h2S9+O6mjXSMGJ9ckP0/AdTipvSGFbdOe4Lb6xneUG3cgys
WFJtw7KVQrdh1HykcRo4SHqn4OdZbmvKrEZSkLu38soT5vsah6+7jDkeUevp
t268wYVOo8aqcaIX43pOVc/4B9YyTCe8KJ+vcCV4Ek7SYhGz9eDRhANZTi3y
8DtYEm6R9crnTYE5wVDsk+PBb/p9cX34zjNbOBcsCgfL+ti44kxNNzTDwSEX
GuqFwoXeulmtUwQfH+Zuf/75pwPzPMuUT9cUJ8qvHlr4XOc6Md8zV4ySqwd3
JB3Turr3iheCG/X5+FaX6eUt+RjKzhn8BBYt6ywVWCbHoncHcGeISX3MqPTu
81qiGzqDYImYH546ScdferbkEKVT1JUvPqbXpLk1z8nI41VVF6mNTxd8y/Zg
TPG+4O4rly+XsZf0ZYhFq3L8PQfEdzhV/JKKx3hvtb8OApgUzFZVz5Tl4GPO
+9y1ddNnquM40WMapz4omD8V18q5omPKNQGTK5c/th8w6KS0ZCdhPn5Iz2zz
KWf3KhhDOTtNnuVcbzAj79jel+p5KfYLThU+SxkckmomYXAE7Ad+bF7iLDlX
zsE0fDqOm5yE4XeP1enEwHhdXgfGluLEushzor81hrrUz29roZ6T5exnGPth
rGhgcJuPfNni9f0yMCJ+5BL3ZcvgMeEmxYeKtwy/k59ScpaZ4ZMxf3+2DCxi
uq9LLxo3GuYw4bPnGFw32gWewtheWHgc/cC4iMWBhr+rYtfh/pQnj++UOV4+
eDC25QkVdYb4PqyuaJ3Rv+TrjRq3789L+UhNao2qBhP41WNSy0k+tdvOW/55
7MD+vWUu4d0Ai26twKJbC8yimFHGB9hr34s/T+oxdc19eov51lXrSbiR8WG8
T7YMvCg9zqbvCsqDYHvPjUpnVNja4mEr8qyEgcFbYNUyZymRB6/cHXz0Ve3j
uGBQ9rvntYsDOfGx+F6w6TgxaFWNp1MvP9PHbSpmNvaMWDRfvOHMbMyAMfGP
+//AioxZ0++q8WnynPc1LYVXTVezwLk+Pg8sqfx4cO7KhVPFXJljTfZHXKm0
QLvGPJMy6kOPI398Eqa68KF+xKVjWxvXcW9qaCgwfoghG7XWZjjufI48HCnP
nklzo6GeEz5B0zdcHaxJ+CCa+Ma+vihwITjwq1/+Q/sPHMIy+FL6lPhMcaP6
znOU7+QgsS5YCANLgme1npah/27cqotFhScVJ2t4NvtfcaFlTMCY+iFaQyn4
jS/XtI8i+2CclfFKpw5ObHzFjiPc22UbeE/piwFtUWs01L7nHRufPfENyp+H
gxOOA4t6fqzKR++xKOdd5YeHgwVzhZrzXVgynzo7J+oShRr73vAztp3bwXni
Rjd0FN7r89On4l0VK+/zlJZP7I7GTAqD8v5RV0+d/qVGPN+f3v1K72cn3xzQ
ZQq38f8Ta9H1vVFV53751IE+btN0bo/l+lSx/q7LW1oE87Xb6+IuTVe2iAHl
ueq5dbDkKPUcwcjjqAc5CQNn1+lVgk3B2bOotcD8jO89fGcDg3YZ4+pjOBhH
sTqtwxhYlrhcqyFd4FquB/dvV8doa2Aonydx3/JN89yaBzl3CZ4MP7fHdmBE
5QWBCcGOh57/cV7PsuAjhQf9d/zx+g6fiV8ek599//bH7TfHY1/gNLbnu8eg
ysVH+5L1Of448afMcoeD/KQYJkWrPdyWMSQOlNiPccV9eC0nacVbrEk2lpXP
NE7sq1qj6OT7PPqmdZjEkXp+9PyhZ3oHX3ja/LbYqvEe71gOEpjE82QxXtR/
f/mVI8l8eOItwGch58hxwIn40vF5D4tLY/3Ffk3rKMM6yj1XzAB5PTyHVov4
JWHottdE7z7GJbj6Sx5fVnG2YCvTFM2eMeDM0Aev3+DQuppSXD9pMqVqI/mY
T9bz/3UdayMONIxtlW8+5l+HF4353E3PLevLtaBmxSIZ85ivy171vIZPEn7A
vx7qtI/KY6Z41Hkw9Usqf5znLu+d4OtJ6Qi16fdYjSTzgxzY0ulxVAcVPNZl
/dU+LrTgoaeNQWWK8fcxe+YfK/ym4CXWeWA40pjmUVPtpXD7Kg2nuv3G2pNa
Z0zGNQdfhnGgMS703p2rfduCX5VrxDgaR/vCXOlULFWYDz8uI15UefTiRnmu
N6kxKjzqazHBVx3Y9YzhmOd3biuxIriE+M8qLrTEoPv3JPPh4eh8bGYdn2X6
p2DT7LmcwqYsg1ONYSeePWAZ5QTnz9JjpaaU5kat5/nQpvOPxcIW2+odhN8e
i4KpVC8plr9v+g2HNkd98B6D3lkdfPfyBjbj2oG5D5/9ZRKDep/8OHPiUxyo
4lqp8UTfrAaa2JxHKvdINVAX9fkg7EQeeh3fBWaAayIONOTw2RZcCg84iu+W
YxBT2XVNnqZGPtHbN5eNS7Pc7QacpfClaUwk/PDj4P66sroaSZ0cI+tH4U/x
7V3HW8DnMzZVz0AYdBbiOsQlmR/r+tU+XXD6g3lbGo9gUsbUos45D63fiGUF
E1VyoRlGDblQ8CHxLOPAoIptLjUjs+OoBlNfnGmhST8uDJwyOF/89MqlVD6S
MGmV9r3PZ2J9sMGJXd/v7dyec6LgRmFFcpBSeUsYWpQpXfpLO/+jcaAer6PB
bnqYCY0k+hwL43aETevmBGFLXTfTC4HDDjAo5vVOVffJ+2eMoy/iSH1OEHiP
ORbMqToG0goIff1Wu+DCiYFcJDjaWP0gcZ9gNvBaHZYA/8sPD/7c+uLB6HXy
GqGe4waPdjkuyYWvqnNvGLXQFOjb7upFe1bF9qnY2VmvwTGMKS4vhilD45ku
HVA4yvC5jqZS7hO6OFJeONuKl2Wfk+oLzo/jcWxwNu/23JecM7pE4NFUXKHH
l7FzFx76/PPPOo+t7MJiNZLwc7EM7fpR9w+eUu66arWOA4fT94w/zbXkE88K
BvVmOjRwB+ecxuxv7/fN39yX8ts/xKOLbzGtphgX6mtyMS4Ulw8W7KId0njw
45J9V/nb29ap79pMFz97j0b33jDpnu/1+ezr8pnAQcKi+M63PfuUYdFcnzA/
r1znfhCLUpd87fkvJv3w5JCHvLFpIhe5Qb7fwGbiL1WzaJgYcvZjNTQvnCj9
7DEMiuldQxymNOPBn4rz8FiWbfhfeFpYGt+6/PLE2HJ+cEniRX3tA76DyUId
Fp+HxP8e48ZMfnjTBfvkbu8nm747EAvq4yjYZpz1kRiDGnN97zpBnXvlb/lt
q3KPFlmnXhoOddwcz3D52Zmbwli2XG/88kj5OByDumvL50/3Tp9aqvRrd2kc
l3sKjVT//Oe3eF3dR2CnEGPSPmHzFL5EG39S5zOMxWokqU4n99Ww+wWzW85Z
0bcbPp/xYUKNaWo73Vh/fSYxqAwMca/gz+G4xC0xTryeI/M/eJT/Hiif/QNk
cKFh3fgQg4JRwaraRnUSQowwrAmPiKO3+l8d5xhNyj68tzrgs0fvOMWNgn2k
m8O65IopztDrUt4t6tA39cOjU8k+YrEMwpnC9/b8+PzToi7AeyNjUW+aF1Mx
hxzba8arLqly6nV8cN9qqYV3bGD/bMc6YFPLvw989Cy7cSkeLyn8Sf9zP8D/
VT0vaZP88PCZaNNXxUz46zaOXKRLR5/Jc9NqajxJ599vW+WLT8WKzrvF4udC
A2/B4fFeI39hLI+Z8cv/cH1tcy0Ya2i7l9q3Gf4EE4P/xq1zpPhE6YtLwxRs
IN18YgOIw6ct5ms/v1RyopwruinCrTE9AcUvjBqjME4jVzTUp1eNpGE5bfne
VR8VfnISeWY+JoT3plnGoPJdhfkkfFccHv/5GrM8y27eWOmdee3gQzy6YGZx
oQ1y5JkztQ0YUe/Jo8Rkwq8Kz8ov6znXeTXe28I69cTq3f5lPJ8J/AAHB0ZC
Qwf8CJfJM1D+eeUtgS/x4af88HCkwjtoBplWp7uXvcYR/wn3iTOM1c8cFosK
Nxp3mfDpes14H0vKPCNu1fvbNd7yd6G41h7/+XhReHWuA9cgzENiGXhNuVR1
uMv74bkWoSZTleZr13Ggd9dfjeb3x+rc80wK9fZTOqD0eypnfh4NjCRteDCB
xhrfpZVk+knZ/8T+UEvR64GFek75GGtfX14G1jRtsezdnjpLPl67fG8bo86R
dCWJUTS8lHjn4hyZg9RfcFS0XXnwG7E+K7ZP+ez57jWsZi0OtLwOEX16OAOW
td0XfQXuhofkvOnbSdcxVWzElSuXbXyFMRRcB55LsnfvXjObZLwN7zlwDPZu
cjF93wiPmuZjgEfhq9Bmt1j7CeTPzJKhxWTzRZBbZPUjs//kH/afs95HxI4M
5MgHuUohF8p5MQZG4ULps6uO95pX7lPGfaz6oDzHFKtg99LKkdJXDzcVy4fx
2IH6PIqJlA665gnzqVb44VWrx+Mg8mbAa2HsjY+h1DX0MeR69oDjuEbkt7fx
qYGB2AeW0kOXmR/f1XQHB1MHSnhY40TPa+Yn1fdOjT9h0TPFu0DY78rZIadc
WLzq2Q/PKj88vw1/Bn74KgzaZRwobYnlIYnXXVva3tcPPJPgnP0+UhhUcaLz
fD9unPud8n6UKV4jZeI+8zH3VjSn7+b6L8vxRy5Pmzaxv19lz/5YnKW07q2G
aAeaxwPjJpuPpDEVi2/tGwfZvRPT2ad94FDwqfzxxiGcOmi1UMu6p9n8N8v6
Xklt0CPPtNoP7zi8h4hXps/G7XuPmeKcGb8+zhvsKf+8TJrVsquFL2ncbfQc
aNOaNT7uX3rgu17Y0Xvkka/1fvzjJ3vHjhww/DXrWKsLAyehoeTPVTWVqNsp
zU/V/Sy1mGag7VXXt4leKO+Gfj4JudA2z6u83k8eZ4UGaVU9xHkxcJDHSxYn
5d7zOGd8P6pRD96MYVHi+BSbiL8XzAkOxTcKNqjzw6dy6sGm4CthrdAsVjTI
UxcW/fyzjfpX8IVN+gOsynWFSwPD8sxuMi5oA1iUvvy4qAHi+VT6hHU1J4Xx
raGBg1NaoMZ/Zs8c8DHzGrEIVe9T3g+f0mSK1RjQZ9N7xPKneJ+pwMNgzBiu
Fq/r3xVSGDSWp8S6jLkwh36eTTrxpg9GvPLK0kD9TJn+h/usinkHc+j/LrFG
mF/SdV80wbicD3lKfj47dnS/YUzVl9KzAB+waVvd7893pn9mGX9yjtw/8J7h
nLB+dlejfXDucI+eJ7544bzFVUzrvMSFKkfeY09iP7gmzA3SNOc3eFBYFH/3
uN49wUpNONDBa/VOyVexnWoJ0Xa4see2b9vgRGccb41k2bmprqc/T+ogoSuv
86cmEv2kz6m3u4FxfcPaSbG68tSa1jZ5jN6GH70qjyMcT/j/4eSY43yOM2OU
3+i5739xh/XfMHXgp2HKq1J9KCymncoy5jjFIMZqlbNMOJT5AowE5wAWhetM
+eH3HT1Wi4eoKwm+8bk/qVhR2iusx38Wa9QAg4LRwDbMC2yHteHKrVZEhh1p
B9th8u2Bo9DBB9tW5UPIhMlSnDPHieU7xQz8v/uF5+w73PJTmzc34j75pA5B
0/NXe1L6nClcrTwkeF2/PvdqzLcey1OSPr2PvXkQbSUR52Hju4i9g0/tUutR
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
aIqb+eAz3Ca8ib13+gdmfD/8ky/1/vxP/73xm/jbPd7EH//sD7+Z/14/0buz
etA40Ecf+Y+9i0t7bJvtm75p/B9+6TAvHlwGfvR5SuIY2+BVsB7biXckR6qJ
ltOG3SlrpAvLKi6ySTvC2IFYLEGMH4VTZY5TO8Gg4E9wqNrGfA+egps6e36p
Mie+qT59isOU7qs/Z9WJhyP1+yg5zQB/VeX9x2rIt8lfamKKcyWGV+8iwqXD
8K34pMGcYM9Q71Z+lhRvOS2d+VGtTu8R7Mw1HGdekHAY7cCXOElu2Goevf6a
HZfjc1+CM88c2GL4U/znqUPbzTf/UjbfWF90+GynDRPPu2p5XRjbc43LGphw
xPrVS6Y9Pu32jGLgT2JDiU+cdlvm0arqJg344/dvKzUK9aywWPaHOHTAePZT
Ewm8iS/+0f/9D0oMCv4ET+JzhwcFU4oPRQcUnzz/Y3CefLIOGktwYcRPLR16
3r5jxEVyXcCn4Fn4QHzUHvuFefHCqGGN+hTnKH14ticmtapOD/5ljh/DnU3i
V2XKmwJT1+FW7Zfz0XFpA/1Kbg9+eM8JSquK93B0TKswaFN9+hR+pD9S+vQh
H5PKO/L6pz73yGNp75eI7Yd1VVur7XiO4Wv2p9qr8JnUe2q7X/ZBbB5Y0vzz
TscxtQ08IvgTDm0W+ay68QHXFeP2TIf/n++PlSc1jJv13aTrV4Kv4faIj9Bz
A/4TvvPCq7t7P/7e/1liULhPfn/9z77Ql+O2qCb8yXUhhmSW8tbGYWBO5ZW0
9Z/MpGXjk/hFcCjz86KP13FYLDfp1d2PR/lRnoWKAUOr3ueBTPs8ZsXAPIbr
ifssOFDw6PXDjxoGBVP6vCJiLon5FCaV9icxk6pzCMYQBgFDYGAPPu0+/uxT
i4/gu9cd4brAW+HzBaOCY8nngT/1GFHxmFX4DgwlrpH9+LqY8HmXDj9V7lM1
TPw+6/An69IOjkGeFtuzT8WnKmepyb7CPCv2h7a/ODxfV4nY1R9s2ZnMnWqC
QeG9y3jNoKY5PLb53V37lGPl4xv6Yj6DfZh+6OefGubz95qv3+n9/7H8JeFI
w6AujokxxbtM1T3sMahf7usj2H8jxkY1qeWutqx0FGcwKSNnH+xHrF/IP4JD
wGXkCI0LG3JMYhekT1WnN4CF61j9hHtXGmN/+DyO9W7xrCBvDCx689Jhm+fe
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
A3uAQVI+wEU25obvfPvRyuercOgk+FDVnfe/DZsVvGCdCdMxl9HunINK+9rB
rMyFFg/VMgaDsRJrF+2tq5GkdaVNSvvgQbln7tnzcra1aU3/8/gxw5/EeabO
F2zKs48+wd++dnxz7/03jlkOErGgfFJ7jk/pNaK1A1ZTPxkXmGEnsATr6D/V
tBROi2FQn08ODtO+ZeCwMkepqH3nj92FhfpL8KpomVf55aUdyrj0sadWXyl7
JtNP4jXzOL5jpf4neIztwFw6H3CaaZRn+2S+Y32wpvC1+o1thEFTmlgx37zp
iJ58MxoLGmLRMD9eWvoDOV6Kjbt1wfCm6mcxbsCiGHk/an8stoJzlZ++CktN
DYN2fLz7Vm/jRDkulFss33vduLY4xHPHS07TxlGDXCXpaTKXcXye+/Lty3jX
Ef7U2OYTvpbtWD+mmcV/YBNw2qz4V88uHWjkN7U2Z3MXmD7EFqpHyfuCjzU1
vvriy4Y9wZxWt+3uqmFQ/BPyh4Dtp90PndwL+G0ybMh1HpYDlZVxuhdO25iR
NgnLGGeMUa7ZrHE8MW3wB8KIPSl4t7p1eUYrdrTrWpuhhbyr8q29DztmMbyp
d03OM5bHLAzYlntkPrEcqohfGP3PuhpJWtfr1FuuS8JvaPUB8Jetnixq+6xZ
G9peC9avwrf0ATGb9DcYEwM/qk69lpNHAv5EZz7lgzcNADTGL1zo/d7v/Z7l
wr+9esj4zz/60hd7v/M7v2Pa9Pjm31o50vvjL/2H3r/5N//aOLHf/d3fLfXi
Necyvxw/vNf+E3aUnrfFLAS+eJaB93w+rvYdGsflWPp/WL97aHCU0szn+QFX
B77jGMRQ0tZYfpO435QWJP8zFthecyz75nzJqUb7nPtb/QVWYz2Msc5+wX30
HeOJPuY/8pYUn1kVqxDzzaNrX6XflIoJ5VgcU3Wr/PzEvSLNLoyYUEy/H/3m
V0uswnmF7a2rJa++TOkpjMvGcTzmA8t5+eyzoubBid6v7l6r5JW8j9I4yyIu
SRwSY1a5O+ADuE0Zv5XTw3ZwoB5v8rw3PpOcn9dfy/X/37pY1llibsYnzzKO
7/ep/a44PSrOifObJk8EPqSOu7Sa6OOq9VO5WKYLk+FSrlU4Bj58f83ykZSL
9P6tZYsLPXP4OcOk9Osk40bGaTb2irqcTbX+q4wxlNdEy/UHGGMWY5LhdXzw
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
ScUmE+f52/fyOIFLh/P6XzeWer+6cc5ylPDDn106kMeCzjkGZc4hHpbvbcb+
/cJfqDgH/x/YnfcH9iOfGjzpPOqOpvI6Hlp3Bj4U3quzsNZSGIuZ8ruH+Uoy
+erle/c+eK3De3oVBiU3vg6Dgu9Mv74iL+nV3Y+XtdTxs1fxnm3wqHQ5S370
+GY7DrwnPKkf31UYVHGh4FD40NR5mP/98r4o/8l/8J8co1+rfcXuNcUHgK+I
ETA9+iJXWPwicYp1sXxNLKa9I0wIRoFvUy36ppxZ25ykOs6L/lDdWy2Tjqmw
qDAzfTLMHKU2KOcH66sXlRn9AeZTP3iNgTZ8Itiyrl5nEwyKwYPSJtWDB28a
/iy4UDDo/m2Pb+iEFlqLZY4tMbaFrqnqAXBe4I26fmzDAXMcMHPTd5lh+OV5
s3/49d0+XSZsnNpMdr3v5HVF+azTqqLmpY8Hwgdhtaey+QFMiYFx+G3cGzGI
q8vlHMV7PVi06nzArMJQ4N6+/4v67/CeGJwnuFNxocdfejafFxYAg3pbuXCq
1djX/Uxfpd4TlHtWt96smtdOnHZbFtW8rmeViZ/0z/QQk6b87iltfLaVvid4
lPEZ7gOdqufOj8aDaixVxVDCHxLTFtMwun1uRx+W9DlJ+Oqb4FLwKNgWHBzm
Nplly8HBdvwEBsXWD3/X2pnyw1fxnxyH3Cz5oKz2fOFzp24A/ePrOfn+u2G6
fqulj9tyqkbQUGJ/YF0wrXzM3lcrrSLw2DjeP5V/nuIS83zIM4bVwSUhxhQW
VQxrG+36/nG5wekx9mN9Kn1OsCi/fT5SG44PbIkWfVifM/wOX1q3L45LfhLv
Q1y/Uy8/Y5hT+FP5Sd/46h/ZufFOEdMz9aY8f9PGcrlq9ClYln71NY3CHLBc
c7g/hoPf7Atsvxaph9ZmTCyKKSdJteJtjL13zWoldXUM4zSz46TqldbpVoFd
iE8UDhW25N0PTEquO+bHD/MS3CaYso7TlTYo9T4HfP7Sqjm/p6wJb9hz79O9
LT/8T4ZLjx7YtTC6TDLiN9uMfavBVuD4Ktya8xgnTONoEhq0XZrXTpx2WxbV
mmp5xrBqDJemYky9xpKWpTRKw+Xrd+NcKMtpe5N3K+JX0JpN5ZKDTdHSDPEk
vCXcoWI8l0/ssrpF4EBhUulvNsWjiiFlfXApvnvFz/HbuMwLW0uz3PbCiIdP
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
oaEW7WXic2FdPL/q911H96E8PEznngOp6bxydk/wOcrL0z8E66F3pnHo1d1f
NF7F79NnURgU/mRdad95Y8BoGfjT/KMmft64O/zV5JrUAIPy2p0yKN8xeneU
V7W6yRYLwY7d9Ca5zACzlF0DmidUO+jm3ovovNJw+SzVN7+BQdUXn6FBuzUA
fF7on8rT6lzMutE+VecJn8lnSv5MSXH9g+bM833DI7l8mfw8KYzp91jxurt3
bbfZXO0+SOnz1bNy8vhZrSzPGfe5+m+ar6v7+rp+4Jhy6zzk8RX3fnk1umw3
75FjO/RaT+fdpl9PXBrd1bg2c7hxd3k8rqvkeIc1xVKqByXy1I+WHSEdlIA5
6UeiJjRtuW7D19iTfn9Uc9fv/dMWLV1bfvX3rp6yXDx6KP3xe7f92P7erLl4
t+a26m3ZTOH2JoVyjPwuPfflf9848taLT9kxuv3BX/154f46uHX7P3yjZtAt
EsrDU/+p8x91oZaHv34u8Xn4vXPOoIeVnvnpPd9I5VDqR4cP7G72ErVmOGpd
q4uTqcehtFeee/HEduPPLAadPL/xt9rVr5o+Q6O5+g3gZL5fbo8NQb2mnbs/
f2J82klu3mUGtKWqvBvhPnkqWd1gwdo6+E+5exiJ/QDfsE71zsfaXAaDmt/7
2KnY4wgN1HLfEUf5vU4E65fHlDQ/36fJDZi1SE+8Xwvq6rR6PxdnmhoojxX1
7MrKycOhqpOF6dOun9gvLMN+d/dzUp0Hy7j+AvGxHb3eHZuZfT+og6fl6t2g
VxpPSbhEPDo+NtrGnJrZRXTTW1QonJpF2DKkZ3K/fT9bDIouWiZ78pp5+JN9
EvtvDUKvNj5Nn6xbDxKf64E3f278yd+qC+W28u3sIPzZznXkj7TeJM6hL/79
Vxs//Zv/GOtQnNdhUFjS9CFpog6j8j/3N+uM1y2ow8N/h7+5n8dtnTWTbrqw
fvhAHp7+eHTQLF2P2krOG+t3F+3vLC97HuO1YEnqSeHXNB96jj/Wy/LDh9+L
9c8sBqVvH800tE7zUGxpWLAj3rpZ9arqmYJf/fo39RHJn0f+O3k/A9UV9qLH
qUi4c6KL6LmaBy89DYZV/l4Mg6YmJuV9JvmdunF2rDlzCP3TvHvoqRkfNr5i
vWL1Ng/32adePkleTYR52d+8ZT3xRWtB/XrV5rbMmmcU3lFu738RPZseJHRP
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
9TPiWecJnk/sE81+x98In/csb1KxYNMDfqHZc88coeUrbSyqWlHVq/5m5uoG
PyafO93Av0mvCU+7fVF8jsyqd/2PeA+moaTMRUoLd74S7+38ufeCPUpurzyM
mOZDn/qdbC0rzdTtpaK+lv0H/4Q4Nq/Xq1s3CG9xfkXnpIYQDr13Y9ZqQzV7
HI8f8vbk5ntV30XOjrw5WidBL5FY9Etf/opxo7TNHW+2jsdo+2FDGBK+hE/1
N78Z/A2HcstMTesDW7hs60Ib5b2g48CjrJdb/ufYhHnwXfLr0pvH2fqm+a3g
s0QLpR+pvYbk13Y/cwqq3sa0qHoOAF65ffXILSGYzWm/N0tX6tmmdeSKpLlI
kweet9x83t999E2+L1n95wrr78zhZa+eeTEomqivafLbbfclMCjPv3b6tbjX
Hs+oPNsYuqbjPviZ+8g1LHXoX2h9P452tNXrp/V+lbMNzXV0Z0/ueXe3aZR5
alJhJ7jJ1+DkFeWyqHLR8KTVgR48mSsHTz+8q8W6s5tUC+r2psm/k2WoabTa
ggI+/7xvbTe3Wrd6lJJ65c2zaf1KYm9S2j6knoTtpdeLfDz7VDyb5Buq73Ju
BlU4LPruzpeNN1ULSm0o/k3oofTQq0+pVz7n+CL4Hkq/HJ5u/Nt/+79YsF2a
NcmcTn1XVS9Ivvbjx4+MD8mx+9zIMjAqrGk1oW6dWsCbifWTS2Rf4vMNk+JP
BQsNVB9SjkjqT+L8Qo/SIP/uVe0/gA7OObXq/ZA30ObVOzHotSJ1DE6Qa/f9
mG5MvmNcSo1Z3vXAdXxfiuqMMOvk3udSvZvcnnkxqJ/vx7czqc5UDOvm8Omd
ytpWza6HNd3cF/1V4kc8jDrJoaN3cL53z/NbMTRP051Hrlvui+cYRYylHnf8
l+DPvL08rEOzl0KPw342vz1iVJaFJd+aWArOhk/Kw/uzkaQZiqepF3AfF2vr
vWpuad56Dc0rkr+/+5h64v1eeXEoOVCen+RD74f0eC0bmj+lfnm/V4ng+sLm
sH76SXFGavEXdY7k5+lZOrDrJasJJZi5Q00o+XiiFzlovD997/gvfe1bxp/0
q7d97u+fietzdLz6AYeSQ2eZhYu/s21W3afV9m3CmZWdxsOU2bOD3p8kf/qq
dGd8Ibh+rXo/5A3lCBNnxNdRhxfSQC3X7daXkZvPMRdJIW/6pFlEaQHPwYRT
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
5nU2/a1OxVpov3LGvA497GX1YLM+n0Fhyslz48aM/M+5RDl7//lsB76Y7px6
f1+wHuo6tT99/09f/yzqwwQPwYX0y1AjQW4c33j4sOzvG+tlPusnHz/uq++v
9SPNnO3b64ViM81lqKP6wPeTeUFp/Imu/nff/nbufPzzP/2x6XsXrZauOXMe
fYhrZritas1PPqDUfhbJxcOgPC+P5xBBTQ6z5/EKTeNQ/EhNnx0ADlXuXTNp
zI/nxHCsfebx+iTIu+O19MqrL7Zpn0U0z0FiT4V8ivBq8nuR/Dy6eTnN5K/3
hfupoUIPpder6vdadqxcavYphbQt5bsHoVcJFlIN6OJvt8fbSG5e+Xl3No/8
gsSj8Ct8xOfJurilP55jBAbKe03C70enOVWeB+txLeyuE06Ekwm2jSCXTd4b
TZE5pctTQxaL5/bZLe+F+wmWgdPRM23GfPS7zjrzaotsF/0yrr8T6xRX+vs8
dIywXJF5quYVFDGhetPdoFfo/r27xsecr+DFtcXOrhXc+YKqXeL6o1/HsvqR
qM2t6rvj+jJt9hroOvoTeXriOa5h0B/+8AemgWqWfBqzyu/ezeU/+MO6PcZv
ARzHdx7dvt/nG31X4WR/lvzc6Z3mLR/ixTOHXjYfgSKvxfLk7f158n4s7/+K
9epUyaHyJNdcbv5W7p3bPDV75J3hRnRPGDTkrZTVayT27Ge9p3qust6jZiGh
f7qeoKF+IvZfEQZFW8XrX9+hymokexjql588ENYZ3V6lKj0CrBempckl5YP9
gEfnj79qy0sj5dYY9cgrxqIw4ZWpdD8M8eep6NoPjS6NGY11W7xI7zh9/Gy3
mA4eVk2lGDkrWFYMnvZcPFSpXWAb2BbViebxBIZjtX+1neieSftZdRBEkfpP
tgnuf/zHh/a9wp8TNiLs/MO8rg/X285V6JcsJw0F7SSJsXkvPE7dL+tC92Qd
eM+itfa6D96NQehHatae3Leo+5HqyArqI+HKPAz61u5ddlzRu0TfUdZzNDPJ
ri2jczXfT+pD4FC3ppT/+Y0oynbdBn1A+O/Dhz6HJvEiy3byWui++PYzwzON
Q28P/bmxHnnvKrjcaj//9ROra2QbNOsoyw9Ssby6YJon4fYc5Z1nVAV7Nj+f
pg8TvUXyYPJ96An1r6Od4NXe5gkaqAsuwqDwq/hTPU5brT9JQd2neCJcd9ns
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
f/qJeUGhg4ZqFsmXh/gzr8887NnPmk/8kagn6JWvJnwk/yTVpmT1jbE8tQta
jmNb9YxFjmvOxdTtkrvv59yVKoL9orlKSX5I8GlV2+fn4QmbjZRTg7r5++Ys
JX2Pbf7QneZ9sOz1O/P2mHm/P67OZ2dQQjMvLc8+ccq+5zDp50+eWJ6enqCq
t7HqqLofSXn4vPNb6qjDDXR0eo2yvOezgl6lsuZ0cp3L9hD90vb5/tCbFOI/
GDTUK0X9DTkQsSfaZlH2VPx+/OeNuwf/Mpd30421yx29R2rx5LOORvfe0P5g
z4vpn/vesRx81iyj0H1V1HySjxodPdU4ceKEcV7Zv4Xwo3oe8mig2o8wqJuP
73S7pMHm9Wvd7IGfvXxCQ/WGVWwTMzjlO6Z5nPAi/FhkPXqOtNMnUfz+/qL9
D4OS1+dxgr+f5fM6jE7OXfWhBL1psGm/8mSDHFX3I5kfQauGrvZkqqPTWI2u
JeHQ4cMHY/bDi4i8OqFeeHTO5778783bnvu07Ms//2nj+999rrR+OI5rXf/y
e9MPrwfy6MMHdgfZj1w5Naru8vJ1ytI9ybszF5QZ9QTLEvCqm6OHQY1Dj37N
+pHy9CoVOTfhPaSaHTiGWkU8mPx1kP81/ozYqaj+Sc8RdZ9lfB5sByzL+gh0
pyyu5Tloj3Aos6zLrAHQnE4CHdnvNUoK+r3Yl93WUVjf6Z/+ZL5QW3GGUihc
P3vri6+YQTkGQ3l4uLHoutA4xZhpeiePp+X5n4VAY+b7BmdZnVYfZ2AOelTd
j0T93P31O/VspDq6Dr7T5NHpU/r+977beP3l5xvDb3yncXtmn3EojLr9H77R
+O3b37NjjcfhTgK/+7K3B56V5y3s1Os6E3qiJqJzXbge84ttDEpvu/zt747/
IsiecCd8mtWXhPZK3agYNA+HqleJGtE8PMIyYigYRjM4/Vzy5bUV0z7pfy9a
9wl/4rnEbTfnB2pUYU7WE8rv51n3B9HvMZoo/FdG/SS9QK5XNfyfl295ffY1
fqHdbAPXEGjY8C96di+/C50Gn415Uk2esoCb8bnq5nigVylUI1rF+4M9YVBq
QnWf5eE71ONsf0UMqzx86FiFQbdyDXCRoCYF3098FWreaUbV/Uj1bKQ6ehUr
l0aMN/Wbj5cQ+h339etYgzuvLc7HvZG99B1j1lnSHCPmbMKdLMd3LTRfScE+
EntSI8ryXKOyzwhmRvE+eG+sE3/SJosO2bnW5VBy75k1ood2pOZh1INk9fv3
n+pybi4Zn/i3Jpas7z1U/5nV+w57Evo7bVt4LfiNW+pFCfQluPPgP2ezbl6d
Fe6mTgoW7dbvXzOSiuTh3eCzRXfuZhss5+X45A+SFsq2oVOxffJOMv+kz5+Y
PmJzqLr4DNwaUc2aL/J8zs983/ge4oExPZW/flNBvpzrIhj0owet9ba0zG73
n/XSt1hUOXr7rcCz7v26xs7dT8uLCzaP/Vntgfej6n6kejZSHb2K1YuH2xjU
egFaDNrP7SAPj9bPcU5+vle/x/QcJfkkzb3zlYjzLpnnUhJ/kluP2TO6LoVp
824rTIr/EnOH4BX0HrFoFocqNw9bhriE8z/aGcHf5N/3vPs0B4/nPLpnyHcp
KRe/M4E/Q4yonDrLJK0jb5+TtNC8nynvcWb6rOXmO62XYp+qhoGgN0jzO3Mf
w63epE7reBXqJ9Nsez5PzsVl+CV0Guiz8jtt9o7ct/oweJRtlK8q86Ty1i8k
xb3Vs3FuPt/36lpzfvf8jPW0LCxcbnoBTxXXLm/db+bh3WssWBF2LHN/yufJ
5dGqPttBi5pBN0aV/Uj4J+Jj8+m/flzPRqqj9FieHjJvDZdB8Xnjvm7XXZQj
6UtS7Wmvrreof03iPBgUzfLY0WHjTLeOU9on7Mnj1Il2ysmcf2BJWJS5mWJR
NNE0Dm3TRJ08LXlQ9SDBCTAALKRlxmemG7985WfBeUehme8hdvRz5tynnmF4
1F8Hy2d5iWb53BfZvyxL7rzTXiXVYXaqgWob8GhiFlW33xteX5+palM1w95y
lX3UR9dvzsVeAfLSPzYxFddlcH3DtZVmIUgTLSM3n7Uc/dJoRNpP6mkJeU3m
ienVJoNyq/vqPHl/A+bBM/Tj6JivGbT6fiR6h/GvWVt5v56NVEfpAYNSH+kz
6ERODSIU1Fzi+0l+uki/u3qUlNsr+5qL/Dj9t2m1l3zX3ZmePn/i7VSWRou2
xMwil0Xz1IjyuOpEOTeqBhSO0twedFZeA23ylVdfNP8ltEUirxYZYs8QK/r/
o+tM3ThucW5xpHEyYuGjl5fadNQ82mgnnk/8TsOh6KJ5Oc2Yz+tF6vTcpxqI
MhhxXTOso23zeZR6X82372UO1903vCbsmfSZ/Wbmatvcp25nbaa9L/mb4xvJ
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
/yYGhDV8j0vxqPU1StjN+9PZJ6aZLnproUMDVRxo5uPfSmuLojcq9pTflfoy
SdNknVbX/8vnxnnh/4HG7ONUZeTzq96+4lzL1JXv1RiT4kUnpa9mkXGOq/49
DdrQPT2DNjnx023yY5NTfivCbHUz5R6pxyb3vNXlhSyWgM+KDUXHDP9/8N/N
XeyehwB7wqD2vD0GmtAkGs8bFnf26yfW/6SKMcBisb5I6KKrsz+t/BiVsaKa
9OPclzPP7m5dyXKrY8/V6HVwV7+16eeT4xPWAC2bi6Qe8VqX1R9q55h3xHoa
i64ah8Ci4kbYUjzK8qEGanGgyb7hOxC7Wo3Nj5db5y6ny7AP0ldZT5YXn7yK
31k+FoeInir+FSv5vHr56hkv8w4ylnEp61Ux+fnwkxgHiv18cS+D0je+6jE1
Vp3xP3/v7m2rrTkOPSvDOlKp7vlgz/h5podbiCNcX9mbA48GihbabTs+X56a
QONwbCbNloPnjSrGEIsF5f045cPDmqHWSU36qDY6Rn0588xzSsyHYXGMC/l5
L91s4+ZK65W/fKGQP/Pq0qsuk9aV+sFnO2I8fe9L+b7Vb5R9wudNfSameQ2U
XCPmUc0iXqVJ2j1t63hrc3vFpnN8WB5WZF3UJ2WbcDvPfhZfH4lj8D04le+O
wZtoobyyPbTclFXjcVH9GP793ViD6jlx2Axa9W9pGOYZlDq5VY+nsWqNvPKH
9+/tyTGvqz22GKkP7d6o2FX54VcWd+9zlo9wYZdf4Gymx3p2FhnzKSfbnunH
2D85jlaHurVonWEsqHrDj0NvLa55eDNWkz7URumRNG59OWMmTrmSU8tLLNfv
+uGsl1/6XuvH5+LxoEX8ib17bS+Div1iBifDcYqxRGNUjSNMmqXyfnydJvz8
0k7F25sPLmU59551lL+OHss05XPpGLK8mFX+fN6nY1/ek/PF+sTUjDdW76nv
cysf18TnxC9MXC6SzDMo76seT2PVWpp3/ND6XtL/surxFBmxAp/9+vGesYY9
HGVw50dryxnDkFtEve28fKSi43Nn66atp4kNHZ3B+7c2b1g8RFU1mbBxjwXN
q0kPg8b6dep5bZwtiwWdi/M0nNZvLKiMnKa8mqDdzPvi8Xejg+YxKLxJnKb5
ttt5eeqfBId5DdRiP9fPWywCzOp99jAkmiUMyntpoWKeLK+o/Zl1w7TooWJa
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
SZkG2uYvvldvJF7FoKrBJG2UWE94lPx4uFZxoL6GKOZ7I4mHeN1Pzx7Gzz1T
Mak84zIW4662RkpefdnfvMbI83ZVvZLQb9k2eVY6fpqGXu2NY8l8+sxzEbEh
fjnmYVneY8zPNfH8Nw9tn3llWtZb6+l9W8/pYzN75mO9RcvVxUIGnb/ZMOg0
m3quE18UMijXLjrolQnIW5DfXba2mh/DSfyBZzxy6vHX58UowmriULivl/ym
bsb9W3zJemP+dqZx7uBMjZn7msULPE/jBXj12i6vGCyieAT0Yr9+1WYqo5fB
7ayjr3OTHFdiM2HsYWrJXOvd7sd8jwa6fPwHHbGgK2d/XPl1nGc3N660Ft/8
o46cI3KRYn05J7XfLMzFvczqfLi6wfyOYNBecmGOnrtk/PmjM+vRPvD404vy
6/GtM09RXSa4wdeJ8gzKd7CJ6slh+LI3F08YH8Kgfn4xqPWHdxypHvK8soz1
X9o6nhksig8fdhfjpkyb1i2N+YbZbzRaetIrdgCTdssyNs/jGxanqnwkLOvL
5Hz1ZTn0gWm76ThhuioYFIb+2r/9N62T77+VsSTT/vRP/r1N/y//+U8zO/LO
wdaf/Ic/av3xv/uafeb1q//qX2YcznH+p//kH9t0pmHMxzyeJf/e3/079soz
1L/4yj+3eX744ndsWbbBd0XLVf279HZydS+D8rnqMTVWnYlB6Rkfy60hLhQO
qXqcgzD4ili/Xn2Q+KI5BkX3SLgVRpR+yn/AfnOV4GDFqcK4vXItbCcuRQ/1
2i68x2f+q6ndD0NmsaUJn7Cv0o/LxJnCn2gc/eynar2ibQwrR4b9gnO75ak/
unPZfO43z7/edyxoFfbBsXei/nYsjA9l3qrHOyzz/Rz975U4UOJBy6wDPfLg
669msZ8HcvTPbsyUl48Uaqewp/L31UcTnvR922WzZ45kuUvmo78xZ1wpu7qw
W4fT5zd5HmU+z6DYxQvv2LMuxjHU+mJ52nwOl1c/+nA6pnyk8Pio1r2sbGyo
YgawKnzycCJsJw1a0+BB6zHVZkmM/WK61aFNPvNcwWeW5fN/+6//KWNJ1U6C
MWFSzr24E7ZE/2Q+jifTMa5VpvHclbdc3RiUmqCeQYty+hqbfOMaLmJQ4om6
8dekm2JHy2hoxnBt3QLm4XOvx07rgQ/Fs/uN3YPtlNOETgp3En9JjdSw1w/b
hUnJse6mg7JexTbA973uJ89AirUdZj3N5cvlOPfm1cOmg8KdYtCNM6/VOhbU
YimCmvRon9SkD3PkyU1SrMUkWl6PpLL5SPAfTHBg5r2OPvAHchgyz8r06UQv
FNuYL/fMbk93WMvH2CiWkn2EafidognCHLAYeTrKh5f2mdYLTXlUTMqrNEt0
TN6fuvBexu4sK76KxSZK94Q51WuKMePrjzGo8pGe/eqWcaZ6yof3xbIMynJi
c3ThztjY4caBcp7gvk/aca1ie7jUzkXbxPJ+OnHFaKWqg8V6yNH67d/6BzYN
7Zhp3PPhSfjx7UMHW9/+n9803RVN1TMl75mP6yZvuboxKL53z6DY48eNP35a
7XFy3RPvTl78rYRRwu8VE/r5k9uVj7Uqg63K6oF2zBKWV65SL7557q1wInnh
0izhxWHUKWI8rFe9fmA0tgWjqdeP9FJYWv3QeSWuFt3Txzawv6oXhal+FPwK
I2n9igEwu5rWRyJOYNj1mFg32yCXixruFqeV/JdwvDkGGOMkH4m4T++Hxy+P
nljX5zDiKUJ/OzGgeTnydd2PQVgsH8ly2l95pbBGAX5z6n6ifSr2M6aBkoNU
pr59ngb6f4JaorEeSTAODNoRB9rmGDQvxZ+rZxLXNTyKLwIeIcfd1qc+8Fsp
v4o/8ZdrDPjLfR9MHyMaxi6wHHn36tej+k9i0ZgWagy6sdTRT0k+eG2jlxx5
zqnq9Vst9hHFhnJs5F8XgzINPoQBmS7779/482w6XIjxHo2dfeYz60IbRa9M
46ROZQzJNBiW9Rw5PGPPRjBsyKDMB2/mLVf1bzI0cpBCBqV+RNXjaqwaE4N+
9uvHUQZVHGU//ewmxXrxSctgL++bh79iMXg+9hQmk+6BPjnIuNKyxnjgMfGm
4jT1P0htFPaJcaLDoPnCduiq+PthWD5rOobeGuZL+bwp5h1Fzyn1YPK1Bdg+
x5r9YZywZkcsaMKk1Aqt+jrMu85i/nZy4aehL2doMQZNGWk+9x5G3vsbJ+da
r51aya3lqfdl/ivJW4/Fgcr0DAAXql+9dEsZuia+Zl2rqnkBf3Ldms42977N
x3v0QN8/ifmlxdErRxoqvISO6Z9D6Kek3kjqX4xOiQbq53v+7E7Wez6NF1i2
fYB32J7FoSbrEsMSZypfPPMX9ZcnRx4e7eVcw9OqF2DHYH34HErOEGwHD/Je
077/3f9hBk9y3DDeo0Myr/V8T44/+jW6KLGsvMKL2G/9w79vPApjMj8syWeW
F1P673QMWC/rKVqu6t9kaNRiChm06dk5vfbY6oGstT5P7j+baxc6vkf/TOvz
TK7/rpuJQXvlQesTOLfrU/e+eXzQfBfm4MNCsF8/veyHYYxTPdH5D4QzYTXG
iV4KvzF+jP/G0K8v1oNF0etUN0qxp/B3Xr7+MM6jabEJ65OTxr5wTsTMqguK
793HguKbx0df9bmIGflyMX97Xo78pPXlDE29dDyDpvGIneyNnolO9NLLL+7J
e/f6p+fPbj541sc8sfhRb9JR4QPli2Ncl/KDi6Vl7I/n65BZ0QHhUebx/nu4
kvVK35TBTYo/JBb0y+d/azqq4kU/zqlxod7zfO9zoeBc+eM1Jmmu6m9exKC9
5MZ7Y79hfnHosPVQOBK2gyHFldI00Tw1LTYde/NHL7T+8A++arGbWgcGP8Kw
5DUR88u+cTzYFtqp4jt5z/x85jrCr886WU6xJuFyVf8mQ8PvHjJoExM6vQaD
0vPy6eef5fYHpr4cz+pVj7UqQ2vC99yvJom/1/vmpS/qfwL+oWciXIYGWQf2
zDN0UlhO/muM/dtcu2g8abn2J2aS++j7xkfwnbjUapiOuPZnnpnWk+yL4gXg
YHoghbGg5CbBpeQqVT3mjnOR8CT93kPWxN8e68s5ij4Kgz5Hihnx15yuNcWQ
yHwdX19jHQY6G9SiMr/7X75gcaJ5ee9lY0AZJzGe+OmL2DP0w6tmj+9rpF6K
HRpoOw9HOUN5jMQ9XOugRr/3qyifKaxRKZ8//CpdMy/egP6hvtanN/4nwlhU
dFPrFZCM/fyxN6P82Wu/pNA4HuJQi49NWHxYLKqcIm/ko4fTsJdf+l7HNJiU
6w5mDH35ymuXXg8/wqbysWPy7TMfHCuN9fd+93dsnzmO4XJV/45De54Yv6sm
JrQxjP9hGPTZF09zGRTNqGxeEropetLy4iWrOYl++riP3sCTZvLNK9ZScZZF
NZ8mwaj3pFqsiknIm5f6AxyPqnqYU3sJv7b3w8OgcGkdnwtiNen5PE59OdVz
l+cY31+B9+wfvxGe0aS9S3dHW/e900OTloRPGQ2UfHE+cx5/du5a6/WZmSw+
1PvN83Lg88YPUxb53fPykahNJK6B2XjGlyZKHXa/L/ix4dW8/kh7eHIu5W38
5LBrWltvvu2HWTcmZNtZfOj6edMwfd3RovpV1LZnjGEdKcWcmp7brgsFWynX
SbX1F2ePDow9vVm9zvbzh3KVOKbsEzEL/fjpN68cbl1+/wcdOqi0S5ny+nuZ
7muEktMk3RQL4z1jn3lGIC5DurmM/RSH1pE/ZfxmmpjQxjD+AzbWViy2PY9B
7929USomFP48e+Z01l8J4z3TpjmnSca9Af2GOkvcp6vkrVEZ/3/sp/LS13Jq
JqsnE/OOoi9TzKhLH6tNT55S1ccxdrxirIkuWse+nDyDce2HNWw/Wls2xoQt
8+KFFavrY4+5Z3Etwak83yjPDc5Bc9O9LO2lPm98xGcYkJqf/hr0+etl+3Ca
D7uE3z0vFlQ1fWTKX4cflWfU0SNjY7VdGzTOTDCI6sB7NoRhYTLWe3n+aJan
hOHX53hZD82d7n2RyF9SbEOohbIO1ZOGheA/5g1jChQDMOhrjHwpGB0W9Tqy
4mN5LulFH71+8setX3z/z0baF7SXXp3Mx9hCE4fqOq1j78+wRmgTEzq9Zjkx
ye+ziEEVE/rRWn5MqMU+JveekFXRQLvVhJ9GE3NN8nHx+wh/oP1yrcViEpX7
VlVPLn4H+NzJPQpr069dOFT5sQwNX0OMNevYlxP9FT589sXnHVzFNQFjwpZc
J8ynGgzwKn531SxAL2U/WB/nK+QYvif2mvURi8g0mAReUr0G8t59rGMsf13x
oHm6zCef3m29ey3OmPjjYVOWhW15L8ZVzJvXQDN9Lblnoi16Lc9bNx88pn5E
oUYJg6KtWi6T6mluL1lNIO+HxwcvPS6PEdHfyIuHNRmz9FTWZz2F52fNJ4/f
XXFG2geeM/L+YwZpjH9jJc0x53ryY0DzLVtTFB0UBl2f/cnIGJRnk7J9qZgv
xqCeRevafz5Wn4nfTtXjamz0Ztpcm0GLapfgV8di38Go0jxjNSK1bB39mVVZ
L30wx9WUyyUNDAYhDyjmE0bPImepqmskVpt+a+4Nm3Z3/WzlxzI06kvFWDPW
l5PY3CrHCi+i/XPu0Sw9Y3LPgTHL9LDyprw+GFXaKuvmPoYWCksxn/wxvD+b
sCh1cfw65Ec/EHCkj9v0xvSiuE+27dfPK8wqHuVzGI9JDjVsF9ZiYn/gR9Wv
lw881nMc076GPnJYjFgrdMpQB1R9I7jM17r3PaZCw5/PWEKW1rjC/WC7ytGv
4vd9/+6yHQP1V4KFicMN87pi9jdvfGPEDJoexzL7xfiL+LPO/7c8o4UMipEz
X/XYGhutcZ2utWONihhUtepDn7r6eRb56tVrCYNF+byTPIPz31T1/ldlcBl+
+DrG6A3KVLueawTO4N6fVweU/KW8Z5xR2DjVpkcrvnDozztYEw20rn05lV/U
T78G1QrzxrXFteRrSvgcP/mUYSViJFkXuSA+Xx4mDPPg4UvPkd743yzyvbMs
vFlmvzy/MU60RB8H6nVPmMJqcZ46bvuDf5t7tWco9ehUjyVvXuv0rGM9fVxv
JOXEY0VaXCyvSeyE/ozPW7n4pjnu9N9vfpDGcwlj4jkF/3yvvT739pza1S19
vYG93/f+nd6X6YeSx5+cxzrzp8bP7yVk0KZ3/PQZ18Lq8kJHLmlo8qmHNZpY
tkysKN/jy4czfG3zRh+dXCO2k/8iO/8Jc5NfAjPEcuOlg1Y1VmI+5362tzb9
4tG/MG2x6uMYGscprMcEa05SX07FTlPT1dcaCmNF4VCuMbiUegzK4WEd+Imp
TW+5GtsfWQ0mrR/dMYz9LGJI8WqRiV8ZOxynfPywb6g3+Ulj9ehjHGQ1mObO
ZDn06u2Jz5lpqgUq434trRP+RnPVurRN9UYSf/K+KC9JPeJDbvJ96IkbHea1
0S2mVPPEpotDyekp65enlhXHnv9IfwzhWpjbaqSuLtg8qhsq5iX2I+87XolZ
Vo9P4iNOH5vJ6jkpr0hxD1zH5NdxXRHvwHLSQ3llnaxPOUksU9fa3jF/fFOj
afqsLINixPr4/CKu7X5jGmFaaavkcFZ9HBobrKFxh7EGV7P6hp3XGXlIVfWE
ZZvjUpseLZFxxWrSx+qEVpXftZ/rBt86TCWNk1fFiXo/Prn03ofPdLuPtWtQ
8V8Ng8J5+OGpAUo/JPhTMZqeQ2P8ybrzem7K5GeXfgrTwYfUxPTv4YEYF6Ed
+phF3nfLnYE30EK9n55thBqo6tozNuVlic+I3xfvej98Nwbl+KnXZ9gTiWnD
jD9k7J59QxbVvtk820vR/fBxD8ShFeV5edak95HVTmrXVIInqQdPjXjOBbWV
iPUQZ8KTfMcY+I5aSnCl1sd3/IdSTx6NnnOlWk/UCvW94am1xLqp6YTRZ141
oWBRq2/Q7iHK92JQ6jOpRkTd7JNPdxp/fGNmK4vzpRhUzKlcd73fDzew/JUr
l2zdTe785Jj6m/pYA7iBejqxmNB++wAMwvC1x2rTM21z8Vjlx9Ib/1MfHvz9
PaxJLdC8OqHj4mNAJ5ePndwZ369hfaWcr0QMql7x1Oym/ifvj567lNVZCmsp
HcjJf/esWrbmp11P7do7+gyHSrfk1fJO7q5k8QJlNdA8gz3UMzPPD891448h
91vrj0cNe3z+Ca+VZVCMsaOHUqsJzRNjGow/zOvEa5A+lkFjkh6rnH3lSoX5
/sQHqMdSGZ88zAjfiSNTxl3NasHD+erXrjHAfnzPsVRtUDROGBVNWt9RZ179
3vleNe5973deeWawPvXJuVMtJliVvk3sJ0wKy6o2PaY+9FX/vvPs54tNfnxj
5RkUQ7+EGVkGztivzr98dS5j2Vg+U2PjaarJ5KfJH08udFgvne+qyou/s3oi
zT2qeW16i2/M6X80rn050T2pm3tr88YeHZAcpl77NYQMCn+qd4zvgxTTMcN1
wZ9l6n7GlpXBKpY3nvCBNDvVgE9jORfsnutjDeCmMrkyXg9VbXjvh8dny3Zi
faMw/LWqyQTDKg/JGG97qZa51NI4xWjsO9wt5rd6V22WFn8S14pJO/X9R2FP
aaFFx5xl+R62gxfxq7N9tEm4j2nqmSmdE87k+5QPV40FYVJYknnQNNEyGTvL
oafyna9bL47EmIdzxRi4NsWg6hXP+eU79s1en963a62uvZJksdwkYlqe12Bs
jY3OqCdflkEHbTAt+UmwR6ODToapJlOMgcQJYa166jVV9RwSq02PDx4GrZOO
SL3/sP8RmigMGnIpuug49OWEP7P6l+ur9rnfng3eF8//NH54eJT/ed7H6tDz
fxee42793v168vKXMJhBfdrhCsYkniH+iFikUAOFJfLy3kP2VAyocpG0PYx9
Zho8H6u7t9Su16tYUK+dwnJ1uu4VXyumZz8x9A/1bPJ188XTqvkuTZTpqiWl
+ErVpi2qe6U+Rvji4Ua0SvEfnIkvHZ6FRcWQvOIThw/5TuzJMpw3+e15j7aK
nul70CsvCX5k3OoPqh7zLANfwrisVz1BmZ/vecZQ76U6M2heblLjj58uW273
sKmCQRubPJOmGcvHxh+PDhr648WtVcQvUoc+rE3PZ6ZXfSy9RWt/znw72pdz
HHofcP7RP798/tzqR+03DsProMpH4v9bcaExBg198N1qL/neSb6fpZjGr4tp
6h8EV8B7+FzT+vQLlg/ja6mTF6+8d2/onBj7hSknSTGg8JjfJj5b+f1Vmz6s
eRLWBfWGVlj1teHNOLKt63rG5vizn/A8r+w3x8PHEmQaKPVQd9L+ULC/uF06
cVFuElwIZ8KI9GbHYLv33z1onMkrPnB40OccwYiwoDhV+ifziUX5rPhPTMvz
CkNy7R45PGPsy3ro/ykd/dHNRXtlPtgUBsbQXJnGNll/nRnUrsVIblKTHz9d
1jBoY4M01WSK1qLfWclq6oT58WkfhNH+/xXVpqd/fNXHUgbPk/vuWZM6TOPU
lzN27PG5Y4MYr9dBxZ1wCoxAb6SQI9E6ffxit9pLef53eAemwWAOTWfbmGpE
YeQQyZ8s/rFa/QknKr/I8vwX5nfrvbfrfirPPu1TNJv53qUR+n6f8zfOG19f
UR5gWw9mXHCYauErH0nrKVsffWTXyONbGRuL53kvv7zVPGjroDq+sfgwxYSy
fzC2jhXMKv25KBYUnREdkvwf9FDpmuJMWI/pihPgMzzIGJkOExpftmNIFacJ
W8K0rJt1qU+A8pNgb1gSPdXGwDNMwtOqw8S+ookyv/z2rA9eZfv8DrxPv448
+uCXTX78tNvildmGQRsbiFEjQT038+ZRfjx1d/z0PP/9MC1Wm175SNfnjlps
wK3NJWNA9N2qfJTUYwprf1KPPtYrCaar+jooa+pfNIh1eQb1+UjwAPGgBwI/
uu+DxPsyvTbD+qEwpthQ+mNYiwlWkb4p33nYkxMNlGmprrdS2nwNe5a/cOPG
nv1SDVDFPXJs4Br1/qR+e5ZHXkMffJpfvrRr7T5C2Xey5Dvxfmxd0kOln8Ju
iqPVscnrKS9N0zTUhDfRHGFWxYhaDOh2mjevvKUsbrTNiMzL9uFf9E54UvlI
qt8EN7I8jIqxDeUjsS7FgvrfDRpp6G/nOlDO/O/97u/Y9jH01zoyKBbLTWr8
8dNjDYM2tl/jfrjUzi/L6wkv86zg54NbR82gRbXpTx4/sqeWrYwxjlJnhH1j
tT9jGii166vqd1q1+evK5yMdPvxeRx0mr2WW5U+W8fWb1JtSPm8+y88Lj0qr
kz7HZxhCvTN9P3MxalkGVW921Qg9d/W68bGPD5BxX1cOuDRXxuA1W+1PX9dn
ckzy+krtxzh2MSbkPiN/tLiReaVxwnNhzSbF2Poe98zna1etXYvHhErblLGc
/4y+yfr1GR7l1U/zuUbh+tLvFrJ1cw5D7TJPxyya1m3ZOtn17U4tlJ7yVY+r
sdFYw6CN7ddU37NMThF1HVVf3Oef+Jr2ozJ88PiuvR+eOqEwH75i4glSP96W
saB0XvUgHcUY6SFFjGdY+zPWK6nqvpxVmhgUfQs/PH5Ipr915FgHT966nzIT
r2X97yGjoU353kRwEfwg37B0TxjRsyGxmT4OFD85PZDEoHBsN+1TvudfLHy4
Z/xhnKrM/LvUXW33Rx1kvR747cCF3V6kgzTjUDjvwYeZed3XWHrxRNqH68Fq
FoOLofGyDq+ZegYVJ6KBUjOubL36YVqZHkmTaJ9/thPNTXr8uNFCp8HEoLHa
4Y011s1gMfgRViozf5qLsm65ScvuuYeeWaPOpYE/6YfkGZR+SfRNylsGHmWs
o2BQthWr/UmNJpizjn05qzIxKLF1MCi8wf95jEGl3ZXhz1gNUNYNB6GDhowo
DlWMaMh7itHEqIWq/HYxaNjryLOn4j15vX59OcrKsVqnwza05KIaAb2a9GId
QzHn7PwZi3U9dznt/w47iqmtLmi7NoDywHztUObZk/9P7aa7K9n5qAuD1rme
5zCNuqBNbtJ0WsOgjfVryoEnXrEsk1kfxnZOxJnTu7rdqHvGw8L43Nc+2JuP
hG8eH33VxxbD7x+r/TlJfTkHZWJQYuTwv8MxsAd++TAfHlYrk/+u3CVtg3Wi
U0rfDDVL5cuInz4O4iLQ5nxPJOZjjMrtFmMynXXBo3pP/ox87xgabjhWHws6
rgY/SkNGa1ZPKFiR/RavoyXfv3fH5pePe5cvVzMfPevkGOOnV70m9FI+o50S
dyk9umoGxepWl2BURvxnk5s0nbZ4+XzDoI31ZWkM3GJP/iNqj3/6ywcddULR
QEfJoHfXzxqDbs29kfHn7YsHbdqDm6MbR9GxjcV8oouGfTk33v5a6/0j71U+
5ipNuW7EgcIqTMN3S92ckEF7MXEd50N+YPz9eT5zuFE+9XCMqsvp64HqO7Gt
zGuAnk9Vj4hl1PcJ7RMbdp8ieI8xE+cwDJ+x9GN4m+Oh2qriR9iRz6otZblc
p4/Y+YBXeba1+qBW/2qXQbPY0na8Jq+eQYmRNf00Jy+pm3YpS6ct7Jm29/uF
3Hn8+qr+LVVlTW7SdFpRH+/GGhu0Lbv/YV8ndNQMujE/Y5pnrDY9saBVHydi
a2N57zHfPLVMj75fz77QozLVOlKeOtPwt774g+/3zZ8+xpE8IxjQ16kMje8U
Ixobo/fDk6+Oxue/R6+jLpOvNSTu5D3foa2K/2Kxn8MyWA//P/ojY4f14b5B
rZ/92uXP1cynrvqgOsY8V4hBiYVQ3VVxOp/FdTpOsGYYD8p7tFPVDiA3qahW
fR5/wrQcG1+fHr8+42a6jGlskxwm5vHfwcE+j4n5OL5Mp+cR+0BOkeqOYRZX
3M5fYn5N96Zlx8XQ9kMGhUurHldjw7WGQRsbpYlByUvi3o8uyvRRM+iVYy91
1KZXvfqqjxH1oKI16Q99q8M3vzPz+63543/devfdd6cynwEjbhYNDD6C09QL
dnN7pfWSq0/fi/k8JHLIu+ULwUmqGx87DxaDkjCbGJT3eQyJ3gdLwb2q8VPl
8VWNU6/h2j6srRorDeK6E0uqL5I4seM4b6WxsapvarlICbcV1QeN5cVjqtmU
ra/HmFC0VOp3ql6T6uHzmfPGKzVAMdVLgnlhXWqE6jvqL6leE+tTDyaW4T18
zNhZHzWWZKohSv1Q1vOHf/BVq8PE+zrXYioydP2QQ5VD2NhkWsOgjY3SpFc9
fLBjr8pLgj/L5jXt1/ifQwMlBz6sTU/vziqPD3lF8OTi2/+xI+Yz1pfz3rE/
s7FPK39i1FcgzhKdDgZVzyIY9I2Tc6VjP5kP9uR/ULFoaJOqHd+tVpLFKeZw
pfXpadfm9H3ti4x1ocXK146NUvv0Y+fYhgyq2lKqg9WrqaYSr6nOO5v53POO
Ndqx77Gp6YqT9esMc5LUb8n6dibvYUi4UTGhMG0vGqjqdsKKcCAap/p20gOe
Pkrou2wHTmY+pqs/Et+xjPrNMx2OZKyqpwSLUlPU996UwZnq0Yn53kjjyJ9Y
rIc8v8Vpvr9NujUM2tgojf5Iz7743GozKSaU+8s5q7Uymvqgn/6/pdza9HdW
T1R2bPC/w59ooGHeO0wa9uXc+ek/a90/979bj25fqPy8Vn5NPXtqWhgMKk6j
Zvtrp1YyXzz/ZTBmzN69tjdmVLnwrEv9iaK6XMIy0knz9ErWwbMX3BSLBY0Z
ufsxdmaauFTzeUblO2+DyFNi31XrPmawH5zXyzrTmkkLGdPBlrCuvosdawwf
tOI3fa971WqC93ZZcSFbX7htXo1LP15uzZ45ktWWLcug6gkP8xFzDP8xTb05
4UOmpzVDl7JeSHCr+sWr1ii9vNQDHg72eUnsL0wrvsS/zvWEr12185kP5mQ+
+QDG1Tg3MS2UvPmqx9bYcKxh0MZGafje+S9Wz070UKaRX48PutvyyoOiHhRx
m/08H8OZ8KavTQ+PMo3eSVUcF2rLiz/RNmMaaOibv/TOt6y2wKhr+9fNlBPv
85EwNNAfnVnvGg/Kf57/DI/6/B7pdMpZ935h9Uq6lBNHwrKHT7xpnAEni9tg
DRhROfoHghpQ8GQ33ZZts3y3+fZTrwlmkq86z6hv2uvvsKPXkcshwvfsj7Fq
yrO/WR77wqxpkXyn3gCWx9TOOYL7YDltR32KpI9KL1VeEnouzxP4ystooPjt
4UYYEi1SvnT6JVGbAR863/OKxgmvKk5UvOnngR2Zj/30saywNetGH1UPJeaD
Y+FT6Z28Mn0S9MJYzXpsEuo+NNZpDYM2NkrD1wx3YrCT/R9fOG0MWtTjh9wl
+snDnrH+RbJYn/rQ8Lfjdw/zkfDPV3kPp0c9uiYxnp410T9j+Un0cuIYst+T
8N/Tj6lHV5iPhFEnFAYVi4Us6nVC+E/aYczfzTTVR0Jr9XWYYNM8DRSN9NSF
91qnj83s4TbG6Rk43C6fi7gSTi4zn/a7Hx8+jMMxLeJP2M0f87IW64MU9jhV
npfYlGOsWB7zm2+n8Q3EAnNeYvGe6LN+G0wT40qHhTvx77Mvi7NHS2mgsCC9
MMWFMCXjVN93eFA9k9Av1WOeaXxnNUy3d/susayWUZ1Q+dvRU8WXTINxYVrv
b+c6Yxzj6oMPf9MxLZRnNfrLVz2+xgZrDYM2Nkp7dP9D00DRQtHwuPY21laM
o3wPTFgSJg25k9wldFBYFt8175lnY+2qvZZhMeUeeQblM9OrOi7sO/x57/S3
OmI+yYWP9eVk/zlGo+zbVDfTMw2+4ndm3s7iLPFRv/zS93LzjYr6S8ItMd+y
r/1pPXo28usw+WVgkFhdJo0FEw+rj2g3thQ7h3qpehZRMx7ulH++l2PKvqMp
58WAev6Eh/rhW+Wqe7+5NErMx4TyXnnzqq+KpihOVS0Bv4zYlWnGe21t1Meb
qlYT32ds2yUvifhNYj/xe7N9GYzINsk1Yl3woM+Vh03x+bN+/13o28eXLyaV
/55nAc+XvDLd+90Z07jmIcXsk0/j+UlwaFOvabKsYdDGRmmwFjWZiAnlmoNH
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

           "], {{0, 388}, {673, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> "Mercator", 
               "PlotRange" -> {{-72.41449755000002, -72.29894144999997}, {
                48.57215383781384, 48.638691570676194`}}, 
               "LonLatBox" -> {{-72.41449755000002, -72.29894144999997}, {
                43.62132686249999, 43.66947523750002}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {673, 388}, PlotRange -> {{0, 673}, {0, 388}}], 
        TraditionalForm]], 
      PolygonBox[{{-72.41449755000002, 
       48.57215383781384}, {-72.41449755000002, 
       48.638691570676194`}, {-72.29894144999997, 
       48.638691570676194`}, {-72.29894144999997, 
       48.57215383781384}, {-72.41449755000002, 48.57215383781384}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-72.32205266999998, 
         48.58546138438631}, {-72.29894144999997, 
         48.58546138438631}, {-72.29894144999997, 
         48.57215383781384}, {-72.32205266999998, 
         48.57215383781384}, {-72.32205266999998, 48.58546138438631}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     StyleBox[{InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-72.304194, 48.57876280030333}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0, 1, 0], PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-72.409245, 48.61713695214857}, {
        Center, Bottom}, Offset[24]]},
      GeoRangePadding -> None], 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["City", {"Hartford", "Vermont", "UnitedStates"}], 
        GeoRangePadding -> None, 
        GeoMarker[
         Entity["Airport", "KLEB"]], 
        GeoMarker[{43.653882, -72.409245}, "Color" -> RGBColor[0, 1, 0]]}]], 
    "BasicGeoRange" -> {{43.626111, 
     43.6646911}, {-72.40924500000001, -72.30419399999998}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> 
      GeoPosition[{43.645401050000004`, -72.3567195}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-72.41449755000002, -72.29894144999997}, {
       48.57215383781384, 48.638691570676194`}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{43.62132686249999, 
       43.669475237500016`}, {-72.41449755000002, -72.29894144999997}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 13, 
      MetaInformation -> {
       "LonLatBox" -> {{-72.41449755000002, -72.29894144999997}, {
         43.62132686249999, 43.66947523750002}}, 
        "PlotRange" -> {{-72.41449755000002, -72.29894144999997}, {
         48.57215383781384, 48.638691570676194`}}, "Projection" -> "Mercator",
         "Software" -> "Created with the Wolfram Language: www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-72.41449755000002, -72.29894144999997}, {48.57215383781384, 
   48.638691570676194`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.770585103795419*^9, 3.7705858706472206`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"651e2b9c-b99f-4562-a975-a707ba22d05b"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.770584946279687*^9, 3.770584951433871*^9}, 
   3.770585113394737*^9},ExpressionUUID->"2cf66dd9-fbe7-4911-8b4e-\
0cd0427bdae6"],

Cell["\<\
Based on a review of the manufacturer\[CloseCurlyQuote]s Owner\
\[CloseCurlyQuote]s Manuals the capacity of the hot tub is 1,500 Liters.  \
\>", "Text",
 CellChangeTimes->{{3.7705852751866856`*^9, 
  3.7705853108373785`*^9}},ExpressionUUID->"83758329-0e80-46d4-bf21-\
438e8630be49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hottubvolume", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1500", ",", "\"\<Liters\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770585327849886*^9, 3.770585373032051*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"a4a6260a-aae9-4dae-8e3e-7e34c2cff28b"],

Cell[BoxData[
 TemplateBox[{"1500","\"L\"","liters","\"Liters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.770585374235817*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"aa212434-7944-4fdd-8fc1-33b616012cfa"]
}, Open  ]],

Cell["\<\
In addition to the hot tub, our home has two additional very large loads that \
complicate the analysis.  One of those loads is a Nissan Leaf which we don\
\[CloseCurlyQuote]t charge daily.  On those days that it is charged it is \
common for it to consume between 10 to 20 kWh over the course of many hours.  \
The other very large load is a sauna, which is used infrequently, and only \
for an hour or two at a time.  \
\>", "Text",
 CellChangeTimes->{{3.7705859874518194`*^9, 3.770586044588022*^9}, {
  3.7705860827021203`*^9, 3.770586086989624*^9}, {3.7705864030166006`*^9, 
  3.7705866438764553`*^9}},ExpressionUUID->"913a1490-e68b-4512-8b67-\
638fcd7a022f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental Conditions", "Section",
 CellChangeTimes->{{3.7705422069728823`*^9, 
  3.770542211156494*^9}},ExpressionUUID->"d0e6a292-803f-4af8-a691-\
ab356f3ab3b9"],

Cell["\<\
The hot tub was filled and operating through the winter of 2018 to 2019.  The \
hot tub was drained, and its breaker opened to prevent electricity \
consumption on April 14, 2019.  It remained empty and unpowered until it was \
refilled on May 11, 2019.  \
\>", "Text",
 CellChangeTimes->{{3.770542593829939*^9, 3.7705427443119154`*^9}, {
  3.7705431219586*^9, 3.7705431332586937`*^9}, {3.7705490865016046`*^9, 
  3.7705490951398883`*^9}},ExpressionUUID->"aec81e7b-be19-4b72-9619-\
f480636b9a28"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1368, 829},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 398, 8, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
   CellTags->"Title"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 265982, 4853}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 398, 8, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
 CellTags->"Title"],
Cell[981, 32, 276, 6, 53, "Subtitle",ExpressionUUID->"01592b2e-a6ea-48f3-a6ee-4260a58d89e6"],
Cell[1260, 40, 407, 6, 31, "Author",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[CellGroupData[{
Cell[1692, 50, 210, 4, 67, "Section",ExpressionUUID->"4bdd3023-3314-4d31-8103-e3391eefafb0"],
Cell[1905, 56, 1128, 17, 78, "Text",ExpressionUUID->"66c1f441-94a7-4fdc-b8d2-e8204dbfde2d"],
Cell[CellGroupData[{
Cell[3058, 77, 324, 5, 28, "Input",ExpressionUUID->"c0dc7183-a5ea-4080-9cbb-ba49a1b65e11"],
Cell[3385, 84, 88536, 1826, 583, "Output",ExpressionUUID->"8acab437-41fd-4292-a2ad-59c5acb516ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91970, 1916, 257, 4, 67, "Section",ExpressionUUID->"7fc2d02f-399e-4fe4-85fa-23f9cc9f4fd1"],
Cell[92230, 1922, 907, 15, 34, "Text",ExpressionUUID->"3a1b5f95-c471-4650-95cc-6dfce006145f"],
Cell[CellGroupData[{
Cell[93162, 1941, 528, 11, 42, "Input",ExpressionUUID->"4c4185c5-246d-4f89-89cd-72c10e9b463e"],
Cell[93693, 1954, 228, 4, 41, "Output",ExpressionUUID->"52f34072-fefc-4a62-a82e-0c51b30deedb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93958, 1963, 1619, 34, 42, "Input",ExpressionUUID->"317c9f72-3423-4c07-98f6-41a616131f9c"],
Cell[95580, 1999, 167213, 2766, 259, "Output",ExpressionUUID->"651e2b9c-b99f-4562-a975-a707ba22d05b"]
}, Open  ]],
Cell[262808, 4768, 165, 3, 34, "Text",ExpressionUUID->"2cf66dd9-fbe7-4911-8b4e-0cd0427bdae6"],
Cell[262976, 4773, 292, 6, 34, "Text",ExpressionUUID->"83758329-0e80-46d4-bf21-438e8630be49"],
Cell[CellGroupData[{
Cell[263293, 4783, 280, 5, 28, "Input",ExpressionUUID->"a4a6260a-aae9-4dae-8e3e-7e34c2cff28b"],
Cell[263576, 4790, 213, 4, 40, "Output",ExpressionUUID->"aa212434-7944-4fdd-8fc1-33b616012cfa"]
}, Open  ]],
Cell[263804, 4797, 673, 11, 56, "Text",ExpressionUUID->"913a1490-e68b-4512-8b67-638fcd7a022f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264514, 4813, 170, 3, 67, "Section",ExpressionUUID->"d0e6a292-803f-4af8-a691-ab356f3ab3b9"],
Cell[264687, 4818, 506, 9, 56, "Text",ExpressionUUID->"aec81e7b-be19-4b72-9619-f480636b9a28"]
}, Open  ]]
}, Open  ]]
}
]
*)

