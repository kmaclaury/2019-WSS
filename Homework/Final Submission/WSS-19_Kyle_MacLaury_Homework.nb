(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    900499,      17218]
NotebookOptionsPosition[    889696,      17026]
NotebookOutlinePosition[    890664,      17059]
CellTagsIndexPosition[    890593,      17054]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "How much electricity does my hot tub use?",
 StyleBox[" ",
  FontSize->16]
}], "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.770373672636671*^9, 
  3.7703737875292807`*^9}, {3.770537045333147*^9, 3.7705370778202133`*^9}},
 CellTags->"Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],

Cell["\<\
Using Smart Meter data to estimate the energy consumption of a hot tub.\
\>", "Subtitle",
 CellChangeTimes->{{3.7705374234368105`*^9, 3.770537478131421*^9}, {
  3.770541554725836*^9, 
  3.770541555555993*^9}},ExpressionUUID->"01592b2e-a6ea-48f3-a6ee-\
4260a58d89e6"],

Cell["Kyle MacLaury", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7705370647683773`*^9, 
  3.7705370686182747`*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7705376555178785`*^9, 3.770537664962737*^9}, {
  3.770537705829153*^9, 
  3.7705377075750284`*^9}},ExpressionUUID->"4bdd3023-3314-4d31-8103-\
e3391eefafb0"],

Cell["\<\
When we purchased our home in 2015 it already had a hot tub installed on the \
exterior of the  home.  I have always been curious to know how much energy it \
uses, how much it costs, and what its environmental impact is.  My utility, \
Green Mountain Power (www.greenmountainpower.com)  allows \
it\[CloseCurlyQuote]s customers to download their energy consumption data as \
a CSV file with their kWh consumption in each 15 minute interval.  Below, I \
have imported my home\[CloseCurlyQuote]s energy consumption from February 1, \
2019 to June 1, 2019 as a Dataset.\
\>", "Text",
 CellChangeTimes->{{3.7705377421585503`*^9, 3.7705378344307585`*^9}, {
   3.770537865581972*^9, 3.770537894163731*^9}, {3.770538002398693*^9, 
   3.770538069779355*^9}, {3.7705414544549503`*^9, 3.7705417032013817`*^9}, {
   3.7705418213438416`*^9, 3.770541856143684*^9}, 3.7705418961608295`*^9, {
   3.7705419367282434`*^9, 3.7705419850072756`*^9}, {3.770542019978404*^9, 
   3.770542043100441*^9}, {3.770542102522296*^9, 3.7705421056538267`*^9}, {
   3.77066408167869*^9, 3.7706640860452447`*^9}, {3.7706641241417*^9, 
   3.770664137379064*^9}, 
   3.770766299949629*^9},ExpressionUUID->"66c1f441-94a7-4fdc-b8d2-\
e8204dbfde2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usage", "=", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<C:\\\\Users\\\\kylem\\\\Documents\\\\GitHub\\\\2019-WSS\\\\Homework\\\
\\Drafts\\\\Homework Data.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7705417652666435`*^9, 3.770541768665533*^9}, {
  3.770588014449852*^9, 3.770588019300869*^9}, {3.7706298305738583`*^9, 
  3.770629838279873*^9}, {3.7706299365578613`*^9, 3.7706299406177535`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c0dc7183-a5ea-4080-9cbb-ba49a1b65e11"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 11516, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ServiceAgreement", "IntervalStart", "IntervalEnd", "Quantity", 
            "UnitOfMeasure"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["kWh"]]}], 11516], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ServiceAgreement"} -> 1, {All, "IntervalStart"} -> 
           1, {All, "IntervalEnd"} -> 1, {All, "Quantity"} -> 
           1, {All, "UnitOfMeasure"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ServiceAgreement" -> TypeSystem`PackageScope`AtomShape[702.], 
              "IntervalStart" -> TypeSystem`PackageScope`AtomShape[75], 
              "IntervalEnd" -> TypeSystem`PackageScope`AtomShape[75], 
              "Quantity" -> TypeSystem`PackageScope`AtomShape[60], 
              "UnitOfMeasure" -> TypeSystem`PackageScope`AtomShape[27.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[590325701], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ServiceAgreement", "IntervalStart", "IntervalEnd", "Quantity", 
            "UnitOfMeasure"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["kWh"]]}], 11516], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[590325701]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ServiceAgreement\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ServiceAgreement\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][{
                    All, "ServiceAgreement"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[All, "ServiceAgreement"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalStart\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalStart\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][{
                    All, "IntervalStart"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[All, "IntervalStart"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalEnd\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IntervalEnd\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][{
                    All, "IntervalEnd"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[All, "IntervalEnd"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Quantity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Quantity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][{
                    All, "Quantity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[All, "Quantity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UnitOfMeasure\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UnitOfMeasure\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][{
                    All, "UnitOfMeasure"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[All, "UnitOfMeasure"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[1, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[1, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[1, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[1, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[1, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[2, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[2, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[2, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[2, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[2, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[3, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[3, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[3, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[3, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[3, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[4, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 00:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[4, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[4, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[4, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[4, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[5, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[5, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[5, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[5, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[5, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[6, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[6, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[6, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[6, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[6, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[7, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[7, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[7, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[7, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[7, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[8, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 01:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[8, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[8, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[8, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[8, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[9, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[9, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[9, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[9, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[9, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[10, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[10, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[10, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[10, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[10, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[11, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[11, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[11, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[11, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[11, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[12, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 02:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[12, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[12, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[12, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[12, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[13, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[13, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[13, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[13, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[13, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[14, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[14, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[14, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[14, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[14, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[15, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[15, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[15, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[15, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[15, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[16, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 03:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[16, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[16, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[16, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[16, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[17, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[17, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[17, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[17, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[17, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[18, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:15:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[18, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[18, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[18, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[18, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[19, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:30:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[19, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[19, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[19, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[19, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "MACLAURY, KYLE S / Residential Electric / E01 / 08-24-2015 \
12:00:00AM / Active", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[20, 
                   Key["ServiceAgreement"]]], "Mouse"], 
                ImageSize -> {{702., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 04:45:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[20, 
                   Key["IntervalStart"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 1 Feb 2019 05:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[20, 
                   Key["IntervalEnd"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[20, 
                   Key["Quantity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kWh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
                  GeneralUtilities`Slice[20, 
                   Key["UnitOfMeasure"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 (-20), {1, 11516 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 11516 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    11516, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 11516 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 20, {1, 11516 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 (-20), {1, 11516 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 11516 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    11516, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 11516 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    11516 20, {1, 11516 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 914614081]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[914614081][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1225., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.770541773259242*^9, 3.7705880243592997`*^9, 
  3.7706298687322125`*^9, 3.770629943931451*^9, 3.770643593278463*^9, 
  3.7707184861069975`*^9, 3.770723262776653*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a53ed422-a937-4350-a5c9-4b92f20b7bfe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Key Facts", "Section",
 CellChangeTimes->{{3.7705824732169685`*^9, 3.770582475446989*^9}, {
  3.7705849075063457`*^9, 3.7705849086453032`*^9}, {3.7705849581289625`*^9, 
  3.770584963058813*^9}},ExpressionUUID->"7fc2d02f-399e-4fe4-85fa-\
23f9cc9f4fd1"],

Cell["\<\
Our home is located in Quechee, Vermont a village within the City of \
Hartford.    The nearest weather station is at the Lebanon Municipal Airport \
which is 5.6 miles away.\
\>", "Text",
 CellChangeTimes->{{3.7705824977224445`*^9, 3.7705825278967276`*^9}, {
   3.7705826784703794`*^9, 3.7705826809806733`*^9}, {3.7705837334966955`*^9, 
   3.77058374774858*^9}, {3.770583844363197*^9, 3.770583844872825*^9}, {
   3.7705845047460113`*^9, 3.770584576828931*^9}, {3.7705848776362333`*^9, 
   3.770584883726945*^9}, 3.7705849407404633`*^9, {3.77058500352955*^9, 
   3.770585032796277*^9}, 3.770585116518379*^9, {3.7705855302402306`*^9, 
   3.770585568346359*^9}, {3.7705856234639606`*^9, 3.770585678074555*^9}, {
   3.7705857806858325`*^9, 3.7705857863835545`*^9}, 3.770585850041315*^9, {
   3.770585881156128*^9, 
   3.7705858836574116`*^9}},ExpressionUUID->"3a1b5f95-c471-4650-95cc-\
6dfce006145f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   TemplateBox[{"\"Lebanon Municipal Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"KLEB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"KLEB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   RowBox[{"{", 
    RowBox[{"43.6538820", ",", 
     RowBox[{"-", "72.4092450"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7705857209897547`*^9, 3.7705857216749115`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4c4185c5-246d-4f89-89cd-72c10e9b463e"],

Cell[BoxData[
 TemplateBox[{"5.605157509974291`","\"mi\"","miles","\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.7705851353500414`*^9, 3.7707185146618814`*^9, 
  3.7707232694754415`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d1f4ab61-0444-4586-8149-019985a34772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"Hartford\"",RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Hartford\"", ",", "\"Vermont\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"City\\\", {\\\"Hartford\\\", \\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
     "Entity"], ",", 
    RowBox[{"GeoRangePadding", "\[Rule]", "None"}], ",", 
    RowBox[{"GeoMarker", "[", 
     TemplateBox[{"\"Lebanon Municipal Airport\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Airport\"", ",", "\"KLEB\""}], "]"}],
       "\"Entity[\\\"Airport\\\", \\\"KLEB\\\"]\"","\"airport\""},
      "Entity"], "]"}], ",", 
    RowBox[{"GeoMarker", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"43.6538820", ",", 
         RowBox[{"-", "72.4092450"}]}], "}"}], "Code"], ",", 
      RowBox[{"\"\<Color\>\"", "\[Rule]", "Green"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7705831575982914`*^9, 3.7705831826846437`*^9}, 
   3.7705832252877073`*^9, 3.7705832712079296`*^9, {3.7705833752377214`*^9, 
   3.770583510057577*^9}, {3.7705836332790356`*^9, 3.7705836350991297`*^9}, {
   3.7705836653891673`*^9, 3.7705836731842856`*^9}, {3.7705846672716646`*^9, 
   3.7705846886052103`*^9}, {3.7705848007469196`*^9, 
   3.7705848073701425`*^9}, {3.770585064393812*^9, 3.7705851016501336`*^9}, 
   3.770585579381851*^9, {3.7705858577597094`*^9, 3.7705858653194838`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"317c9f72-3423-4c07-98f6-41a616131f9c"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvfmTHOd55+k9ftgf91/Yf2JjY2MjNhy+dsOx4Z2ZtUZrT0ysbVka22sr
VlpLVng0Y8smLXEkx5ikKBEgJRAAIZIAaOIkjm6KjYs4uqkG0IAaQJPG0aAF
mlKQXIIiCYRr8/NUfhNPv/2+eVRlHd1dPzxdXVVZeb6Z+cnvc/13v/v5f/nZ
//IXfuEXvvjfZH/+5e98+Re/8IXf+cq/+m+zN7/5J1/8g8/9ye9/5n/9k//3
9z/3+1/4H373v8o+/Ov/4hd+4Zls+v86+//+R7c7E5uYt/Pnpjsff3S389N3
7nTeXDxdOu3xmanO5e2f6ixv+e+jtrT11zpH9r/Q+fD9652lq/OdSxdmO5cX
5pLzmzsz0/nnf/7nztzpqcr1fOvGfGfx0mx3+ux3VdMvX3+9c/bkdOf99961
37y1fKNz5sThzo9mj3U2b9rU2bLle52lK+l1w96+c7uz/fStzs7ZW53vn+ra
llMP/i/7LDbNyxdvdX767vLIjvUH777ZubpwItvf0503lq507t+7Z/smZmz7
4qU529dMj52frWlzJ2w5S4uvdX5yY67z07evdj6+e2vkY70fe2PxrI2lWzeW
bHv4jNepqaM21ke9fjFjn7N+c2dPrNr/d9+/Yd/NnjtXa14czw8//KDz5tJC
572fLvW0Plrm9Td/XLmsux+8b8u6s7zQ+n5hnr1uw1o1rrF27Tx7rPjs9o2L
dp7rc8bzjTcv2+vRo0c7x49NFWN9FDZ1ZF9ndv+jnVvZvSW0n7z8R529e/fY
Nox6P3rjPDu751ud0y8+0vnJ/IuFXXn16c4rz/5F5yc35+y3zOPsyaOdm0uz
nffe/ZldV975yeVG67J71/Odwwf3rPjsvZ9e6yxcOGfz5/XO8sr9c/nWcnYv
utn5XsQ2bf9B53vHrkW/S9nzB6dsu944sXXF9p7Y9Q07dqMe9xMbf4MXxYKv
z57s3M04JTXtx3dvdo5N7zfWTHEojMo0TFu17LoM6tdx6eqlzs03ZmttG+tw
aX6mc2H+TOeTjz+231+5PG8suis7f2HRQy/vsfM2NY9rby1X8mVdDsW2n7nV
WVxeHjmTcW+BF9mvP3nrVpJFezX2NxzBsw3X10vZ9VA8C2OM8t7WixlLZ9vC
vhIXiUHHeVtuXl+wdWT/a8zxeubMCfscLqwzH7YZXmEfcN/sdX1YJs82qe95
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
wfU1ay0pDuD12fR9zmurYX17fP/rUZ/uxdgfigEty1FBe4aHqG2O9vnI175k
bMpv//yLn7P/OR/hUHipjXOSecKXd078bTInnu+YZuFCvR5fgzBpoGFeDvog
OiGcppwu8pgUZxTmOGFiUGJPpX0u1HjWMgbNOfyTj5aLnn4wZd3t4Hlj/9nL
pnFXaaD7X9oe1UDRgecOPTHycT2x9WPkJnGd4ToOg1Xpht7q1LBvwqFtmHrP
wZ918v1DW/6Hbt9P+eeJC2Abt29/prMpY9EXnn+2Ua4w03V7VfTGfdIRwxx4
r79WzbsqBiClZTaJZW0yrWoCsE2s//dzDoUhFKPr8yWUEzToscN9mNgA1mHc
akYN2hhPMKf2fx29so5JU8WvXjfnrMgpLqlNyrpyrDQ+JsyZ2E8uH6m0Dt/H
b1vsIhooLMqzOPGg8Kj0T1hpIa8jzPRmPa6XcpHIN4IzY/xJTjzfWQ+lBnpC
20atpVQtUJjM+9UVy4yGzDpzP2J/wtvEHVj+RV73qUr79PvKMyjc6XmRnpx8
zrnbzVHt3heYju/4nF4Fv/Irv9L50jeeqKzJhEZalndFzMGox/XE1pcZe1LP
4f337P+PGuih6IfT+7aNDYdSC4bzu5+6orDrwuuvFj3rqS0Kl3JP3LXzeWPR
7du2dmNJa+oBXAek+8X81V47lcFpdeZNrVGx3KitSdwA2q6PX2A/oD9KN/OG
XxgdbZAxSGKfQS9n3IwxzLarLmpbTGd9WrPnW/y8dTRV7t/+OQRtMzWtYsiZ
xnrO91gPYr2bYhNholTPKvEkcZ/ooOxL+AmWQgPl3sArfZf0PFHUbvIsqv9r
sCksa2z56tOl+UhiUJY3qn1Y1hM+rE2k51j2Udi/HVaFRZnG++irjGnhVmnB
XO/D+kmpvvCyg9N7jEE/9/98pVIDndr12Kq4V2m+CzPbRj6mJ7b+DF4Th0oP
jeUoUfuTz0OtlHNkXDiUbWkzXol9QQ0rcRD+DOLP9u/dXbAoOVp1dTqrC/Ju
t6Yor236mbl3V8Wl+lpOofn6UG358auYNPyM5XP8zAcf5EtwbR9UvhLMBc+0
lYezVszXFFQdqjb4k3qvyu8qy09n/FuPg2waxXUqJoMYUvU+UD8v6/ma90HQ
dIwTOzcvnJtoooHpuYpnAasTGhwH+eDJsyP3RzlI8BO8hC6658UfdJ7bsbU4
D/HlUnuIefJb2HQFf1ZwaKiBlsWCwnrWQ+nGaBgUzQ/WZD1iPeHD/RnGfLax
Dmw7DEo+vT6rYk5v1KPn2YLniP/zdz5bSwMNt1c1Ud97e/D+qIltTEP7M/bM
85Spb4JfWt/DduY/OD5j8ZbknXsWsJ6eGWPCmqPm0DYN3iZnSpqoOIh7LNwJ
f5IDQU1s1dkeBz1GnIuWqjr6TdfL18rHVP9Tpnl7hm2DXZmP2AQ9IdRE6T/Z
tlapXOzbVk9l41xnFYeLBtqW/93PF7Ypi6NW7UWxJ88BJ189sCLPqI5RY1b/
t7kda9l8z3MMVlTMLN9Llyt8DWiNGTvSy5N4UIxnbtiF+XD+w0GKFeUVfz05
61ZvKLs2wjp2fS9hUPVFgj+NQV/6rSSDqk9nk75kaAewYBvcyvLRBOvWJir6
TLeYQ4UmDYP6+2YdBoU96Rlvtv0HpoP+b7/xLyrr0cPXsbjXK2d2jXxMT2x9
G7yFD5pcec4jdM8rLjfj6uLrBYfyenlhZVyIOLSst7w4FJ/5sHvC9WPyE+JX
tJrqpx/kTcFL5E/QFwgWVX+gtcTabZniVMWmL/1oubZWGtNsqW1vNbocY0j7
4nOrd9ICb8CgzBP22Sg6GtupmgRnjh9ojduIpRVDVtWT4TyiN5L6vGrfczy8
9mnmNFHfJxZm5ZXequQoWd+NSW160zL1DAdfqg6Tcv3QPf05Zb5ep2PybMA1
jLx43vM7dFJ6FvGq3Hk4FJ0U7uLzwkcfWSfmZ7nwR58pGDTWH0n5SGLQJtdS
H4PcT04jjK6co1hP+Nj5UlaXs1dT7wC/HSkGhTupP49ZP86pheI7GBT73rFr
jerRa3t93OvEJjZIo28StTq75/EbRR8l1QaFP+mnF/stz6vUBg05lPfUcqLP
Ej0/f5iNdYxnTHor3bx4ZOx1fvkti17W2T3Ta2Z8z71T2iiGz57750bS1kJT
76hUff8Yi66orX/imu3TMF/J4tzoOZ4dBxik11oKGNyk2vMbxRev/HM4tJ99
583XdqrTy5Tpe+3Tqvo23Ro381YH3/fo3OhaqGqii4l4XvN1mMI6FPCTxTAG
PnW0TemiT3zjz8xXD78qPlS1RMWi6KLmD4r0VyIvx2ugVflIYtAmegX6p/Td
BzlrK3/P+zBeM7Sl+cPGZLG4yGuze6PjUbpzaf5XQ2P9YVC95zoV1lGi3pL0
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
r+4s9M8YMxJTUuQmZdw4/cK3VvVT8nWc+P8fD/9pZ/GVJ5P+fD5nvuPkn/f9
ZuS3rfoNPl3uFdYnJmck8/dmRo8Ab/pcPmOWpVqJRw/vXxFXKuOerVqlcFjT
HnGjNnzzKU20SZ1R1RqFa6/e/JHtB9uX7L+MT6hP2cSH7419y71t3GuK+pgR
9VgY9TqlTD501QxlDCsPrem81L+bZ8O2dF/1YxxXPzzG/lMcSRmDcs2Xzx3t
SvXlYr4uDPYRp67Io8w5lP2yymf/1S9aPOg3/+LzpoG+9NTXrIbTE1/rcuc7
M1819vzC536r89DnP22sqvwY5a+3tV90jfY5DqGpB1KsRmbqeKfqMrH+/dSr
51jAoOFyL109b59XMaiOGSy6/+xlY1BqNGk66jGV5f4zJlh/z9CWvzam+v/E
1q7hZ1dNUHLhYVH5u3mFg6SFcn2az55/jmXPqPBljD/xr6sG05vzL3fu5zlM
Vj/0padL+3qKQ9FE0T1TuqiPFV089cLI/fPqu11W38diP3NdzuLxemQfxSjK
Z2xx9tn2c9+wa0TGqqEv3xufy88sNh31GIwZ1zlYNFVXtCyPqQ6TMm+23Z4F
ci59ffZkxqULtY8Nvm2OpdW4uRHPsx2lEbNR9CFtkDs3TCNPSs9i6M3q08q1
iLF6++alnu55Vuv1/ic2z7aeE+RzRQMa1/uwYhPv3/skyt5ouTAT13J40Y8J
aXepXG5+62NFw/GEDiqtlGWzHFh079bufQLuoQfooe981jRPGJT/n/3GvzX/
PPGasCr+NXiW+dXpQV/HLF8tz9WK+TLY3phvWjVBUzwPI/JMQtxs0Ycqm2+3
lvZFWy7HpGleHOsHa4bj7NCp1zpP7ZmqxaDFccvWp6hT73KRwnpMioXV7zi+
FgtQow/rxCbW1OR7V+w4MaCcK2FPeLRQ9U1X/Ql0TSzFn6ZRRq5hjOkj+1+o
zaE3px9JsugK/3x27lDrPpWzPwzjPqccCGIRuYaonwu8x73QxyeGudphDxhv
vm/2pbx3nuZj8X05j3INDK9ZrBf3cU0T5uT73Hx0VbZhnOJNWQ+YsW6N+xiX
ljEp8/bLCzVq9of3xaeM48n+jdWMHYXBdqo3hd47Lusl41rA/iLeUz5SXhX7
IG7uhfWU69d2/v8geuG0beLkWM8oziW4Ez6iD2S4b+FHMWjKD85v0Mg0H69V
Sls1nTTjFRiS/Q9Xoi/uffZR41Bfn0k66Mk9j3Vunj/Q2bXlWzYd86fmfRn7
sH1sL9tSZ99IK2CcwegwoumV2TyIWY35pvmM7U1p6b4uk/Vcy5ZxJa9jyP/6
nhiOJtdUag/s3vX8qs/DHkixWFCes6nh5Jf3qU/9pjEov93/wubGuf8Tm1ib
5n3vyhtdvv56dFqYFDalfydxj2cOdvvohlzo+bOMBe1589Bu651Uh0OxxcPf
TNZ6Yj0UczrqWk6m6eQcGhp+IF9LvapmZcr4Db81Ps2W5XmUa51xLZrS4mul
+o/lMMKmLt6U+NIw3hQulWY6Sr9zFYuW8WZVL3vmSQxpzFgmsaX0DlXOE4xU
Vi9/1D7vrn7RHYcw3jj1r7QeDrPdPp1dve6eac96BuMcYqyh9TO2xc5wTZ3z
xfsk2Pa2atUPqhdOm8a1Fa5iHY15gh6LqleZ0sPli5fOWWd/hBwKg6q3D/+z
r+CbbY9+1ezq3i8VDIoGCofOPPV7po/i04JDj+/bbH58W4cEgyonRte9sjqw
rCvnAOOC38RyFemNxP0r5pvmnE7lFqFvqk6C9p3fJ9Klm9YoQD+m9pX/jLpM
1KSvkwsPi+KH12+Z1zceeyKZi1TWh3RiE2vTqCEf+t7r1NAlvko5SJbPvuIZ
6pla/CmjvhMxOU04FLs2/XjSP886FPnz06OLFTU9NOdD9W/R/bXtuufiUeZP
zITX6nhesFrtuc4Ka3Id5p7MevA7i4/0Omsebwp3wqTopfR48r58tAmx2OKl
uaHHmcpHH6tvX5c568SXplgWOzh7uXPi7Ku2rxRr6Q2uIt50FOynOqfS48el
7xPHjTHIOFVcno3PSF0z8+U6HVN9kagPV7YM+FZxf9bLtcXeq/K54ncYRN37
NkzsndJ/q2qmS+O0Opc1NTv578Vo+G5hT+ZF3gt+7BXX6jz/Hf2TGFDlJBE3
SjzoO4vTxl8w6eGDe2z+0lU9i3I8/LkXi/FkO2FAWNY/q7+V+6nI40cD5Xt0
2LBWO5zGZ2HdT2+eMRmnTMu+0DUxljNfZaw3fvhQe+V5uCwW1BvbG84XhmU/
ca+O6b2xPqQTm1hbJu1TnIKuyflT139NzCX+9zAGFCaE/dAgm/jCmRaWacqh
+OfJW6qKFbXen8e299yjog0bNpt1fVNd/oU/fD8h/ufY8znXbq5R3Kfrxj3i
V1OOCPGkPr7Ua6ZnT88MLQfqp++W9/6MaaRt8Kl/hUfVgzWmibZZF6jKOP6+
39O41GBSnLJiPRWrUtovMecpi/3J9q/y7Mx3H5nensVy9mZct53/D1upDvko
rykp41lDnJXS7WK1Tdow+ArfOfubZ1Tes4/C/pyY1WPKuRMf/NyOP+y+z67d
+OzhIF7hWHKbqDeKXxo2XpGTny2X3vUPYuTvFDESLNt89JfPF9dAtEqOIZ/H
9k0sH4n815kXHy2NvfAxwql90zR+Q/lI4XoSx1mHQdFAY/Pl+LCdsVwkuHQc
x/XE1ofhZ5/P60fgQ+Ra3TQ+jPwiNMYwZ53xDPP1ojteXXy9s2/Pbust34RD
5Z8P9dhUbtTVM7tGnrc0TONao7gAMSn+Tu7ncCh+Tl4xPvd59z72VHn65LVw
X0M3R+Pzvn+xacyXj6Glwqb0JW3ay73pNqsffT+xo3U/X+XPP3HNWAmdLMwf
G0YtJ3hTHMzrOOifXGNMx8yfe7Uv6uRvMU7ElPweBiVnLOQnxZVKE2OMchza
fv7pRc8alnGstf34mVO8wz6Rn73N/SO29blOZT3iVRNUWih58tQPhTmpTQ93
4jvmPZol/6v3p8Wxfnin4FB4jeVpnKDzyUfvY2PK6vryeSofqawuqI2LEsas
it8wzSD7fXiusj2xfCRq02NVDOp98N5i9U+Vi0RdqlGP44mtP8PnzdhXzXnO
Y86VWK+jMjPNMqKBwnk/7LOvLPcLOPTWi/9XYw6Vf15crLqkXqNFnx2XvKVR
Gn5KuJTrnqyOfxODn+AJpvecCleiu3GdV29m6a1iU3Kdtn7viRW5T9JPuTfI
n9/mtspf/9KPlvvSPJv67rHnpk4XOTVegx5kD3pif5VbyPEYh/hPmFhchI4O
Tzat78/+kq7rex35+D6/r5kWHY5x2qbWpzhLjuO49edkfbiu+3FWto/lj0dn
9D7jusa5GvudrzMqzoVBvQZKHyTfF14G+81Pb+28+8YJ88fzW14V26r+n1uf
fsL+X+Gfz4+Pj0Pw7Fmnhhb6Sdizsm6/oFhtUBnLNp/4vU8KDdb3Yy6ea9xv
2a/bt29dFQtqdUEzLkULrWJQfO6xdaXffar+6U9ujl9dj4mtXePaDXuiYSl3
gprz1GHqaX43zxlrhnlB8sH3s67w8N49eyxf/q19v5/kUOzK3i9HObSq1xKM
qrwlWBpNdyP7Hbh+y69el//IX2J61WuUrx1TjaOiJnxe5wg+kL+f+yNcyu/R
THkNa0ap1n6bWqliR6u0TNW2V90mXrHUb8t0UzhUGp43tq3tWELOdTheeeSD
4tymZtrvB+8XMdG96m7qdWS1cvPY5TD2WXGlPGNpXLNP2toW5Z3003+9bbNa
Q66niHpkpOIWvXXP/5kV+TN1rgPSO9VHXuuhmFDmqTqiaHkhg8Z6c8oPTy/P
926cNT88nAlvonfSDxSfPfNkO3nP+nI80ESLHj3ZdsN5C5aTGfe3pwz+CnPi
lSeeYjNd98p0Ttbvgzz+xD+Pql5AjF9Zbxg0vE6gbVpNpmPXeooFFWfHcpGw
UY/nia1ts+f0xde68dXZvY9YT8XBoI/UzTtKGXGVq2s5PGNM985S/7UcqHsP
h5JLVMWh9FZC+0xx6J3ZrUkWDfs2sTx6Lm0UbRS2g/cUW9dUK7K+BXnfGgxm
LNMxWV53XD6IUfXXY/iU6zHzOXRwj60T9y3ppfymLR61e8a7y+avhzE9Z/J/
ma+8rp8/9M0TN4sG6LdZNZza8IUqB0cc1lYOeFtjrY0a/pZX5OI/fByI9W+Y
nS6ehxhH2Jkz7fYOqIr5G7apL4b4htdexpQYyufCl90niMlkOvaDXlWjCSbV
M6n88cRxhn740JSjxPUZXzF1QfGnw1FwNTzKtpGnhBbKe9aTWFA+4zvrDxn0
bmqyH9A6QwYt64/EuGbbWa5y7GM6qM9XUu4Tv/Fx+myn91uw37Qv/byotVS3
R3yMQYkpSOUiUYtg1GN6YmvLuHZcsX4iU6Y3wZx33fPWRz+/23lz6bKx5/I/
xGsuNTG0w7AfJ+/5/P7P47p/U+O6gxYKS1Zx6NyOP+ocP7itq30mdNGyWFHV
FlUePecmPIqvHs13vTGp+aYzVhQ7vrl0vi8Gsnz85cumR2me8OPS1flkTSL5
T+EyxUzCpLCE5zQ+I37Ux5aim6ILjEPdkLK8/FAb5X/2jfzkxfn54d3cT9g7
M/r+XFaTa0zyj9o2tottlKaquOVYLVy0+kHE3Y5TXVD5ncUxHHvWq9/zGf1N
PJnq+c0zq/e3izX9s6y0Uj6HE+syKHb+5D5jUOv/mfEnr8aZx/fb/+itMChx
ouTR8/wKl5J7xDpjViu0IYfCZ6HGojyd2H4tai9kY1KvsfjrWAyx1U3Lc/XF
pv44pPqlkndZty5TyKD2fJZtX5hzpdpTbfajmtj6NGp0Wk3Ic9OFzqnanmJO
Yj7nFXMyP9Oar5n5WD+iV55cFa9NPbfYb24sne3MnppulPdEXCJaqDTOKg4l
n5440ul92zpzR7d0mbNh3pL89J5HxaQwNttHrOs49ATtx9CF5ENv+x5tbJkd
O2oRiUdZHnkxWpbVC6I+FNe6XNNSPXfyU9SfkbHteQ0elS6q3Hvy7selPyba
aIpF/fuXj50q4hq9oV2i4zXlB/En7I61WYd93Ey+eMbXKJ5BWCZck/K3DtOU
f+VrDLWpzXK+qk590Rs+2BdiT7hTGqqfRvGmGPlFPh8+xqDeV49uajzk9Ezy
3aV/4qeHa6kdCofCoDArPEodJ4slhekaMihxkuTA1/VRc0/k2Qg2LovRCJ9d
urmiD2Jpw/EMQ1t/qMAPj/8G/qyTjxRj0NtXjiVzkajFmupHMLGJocfBk+G9
mWdEOFTMiSbKORD2OGrDFAvq8+H5v8wPH4u1rrOtMCg8KYas4lD6LdH/U/Gk
MV3UajnVYFHpo/jrYVLl+4tLVevp1sLRsWGgumZ1ymvkHvVr3LPQQhWTh6GV
+jp+yhWI7UPl88t378c8+fv458WjaKXj0nuyrKeomBTfvLjRc+jd3I/aRBNl
/5D/XScHZa2b4mrZ5mEsT/XNdDx4fSvX60eZ6wXbKX7Qnl+uXhxYnVLfsxMm
ZNmY8o4UaynffNhTnM/IqfEMGuNPuFTfw4E8b644px2LwrwsR/531hE2hUfR
DcWorC/fNWHQWF0mPvN9K2NWVn/e+iVdPr8ihkN9CVPPMik/PHlIjz/+qNWX
r8OgYV482xbWPlWsAbX5w2M4sYlh3Wfe6RX9ky9dmDV9ES4dVmw8/mnLfXf1
OJUPn9IHH9w3mvmuiOWSP152/u//g+XFl+XMw4dwKLqo6bUR3zwcevrFvynt
Q5/iUraX89gzKe+XZveteY20bWNcWi2UxQuFv5BX9VWvy1q+/j7xJuJRzgPY
1vcXHYc4SK7hZXXzxaKvHIvXtUfTqaOJWvxjnocyjJpPo7ZhM2ihu57p1lmH
qUadj4SfQDniYh6fK8MYaHscMD8fKyrzuT7ogaHvnt+gq8GTc0efqe2HR9+M
+aA9h6K9oElTx4ll8z+si8GgXGfow8nxqhuf0FddppI4YfYTeqR/dinLoZcG
He4Dq0v/5OOlPeLL8uKVb+Vz/lX7lHuYjmGTHK6JrX+zGrv5tZde7bAoWuco
alzCWWEPM2In4bBU3GSvDEruPhzp2RFdFMYs41DlKsGhWFmsqHKSeC2rdZ+y
23M7OwtTm+z37JcJj3aNa6j6WHrN03rcnz/Wl3bs+5MyP9Uq9Xn1loM7Bixa
pYliL87M2nb43IQ6caJow9TYFH+Osh/osMwz4TCWxxhDq4YdOA7SQTlWxKyL
99AE2671HjNf+1PXVF9viO/hvkHq4eScSxtlu33uPbzp4x35n/pYvjaor8kU
Y1CmY/pUHGphOYvCcqpfz7UFH3z4XKc8rao6AcoX935q5epU1Rws8/cpjlk9
DWA8xlEydjTbbzCoP7b44MlDqhsHipG7tGK+kXpMYd0puHcSEzoxGVxHLpHi
fRZef3UgPva6djUSr634ydRvemXQxey5Fob0zAjv8tn07sc7N7b+YmWMqHzz
sCy/TdUUhWulafJMyDbhh2/CpPDo4itxHiXOsc49ATZjWmJ2+B3+fnqeMh+L
B8jW0xufw8BMx/TvXDs2UhZhG7t5oidW9WAcFBNa/f3ZB/GjnkXJrx+1j557
R6x3k48TxTePnltXE2WbxfepWIa1ZmxD1RhhbOELsn4KQ6i7zzJ4FoD1ee5R
7K24Rnkk8Jj5fAe4Lmiw4fhQDCjM4ntQhmw4CJPv3ddzUm9OTSMm9QxaFQuK
z57pazF0oIsqb159MsM6SN1z5Zo9N8Tmz3X3wFNfTtZlKtunYlCOgWotdftw
XFuVj6QxxH4L58n7mAYKTzbhz+2nb3U++Wi1Bhqrx8T9W/uDdYpq0BPbkAZz
cs1F5xl1DDxGXk7IoPMvP9bNiU/8pk0Ghcf4DM2B/CNiQMs4FL3Ua6L8JqaJ
8hnzntr9ZGf6hQcMabGf2fZynsKwYU3UJvoor7xnOTCjWTYN7/10PheKZcPE
fA9vwsYycSnf+7gA6boXj+8cKpPCD74PjuoODYsBfa1yuM2zKD76UcZJ1vHN
i0VjcaLqNwmneQ4ipmHUjN3WsVONeVhPzzGYZ2zTHPPryW3jrxMrjHhjqx2a
9/rqJcfLm/VWvf+J7ecHOXUXrbe4j0+2fh8D7JmE31+1J2Eplq9+oeEzi2my
NWqxtzWuQx+9GNT3YYIp8f/WiQUtcpHqrofjUMYNNUOtRuj7N1bUDJDx2b/7
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
oIveuHTM7OBz3y40U/iUZfO/3rMecCqGRmz1Ul0s6bA4lGOg/qReY1EOPb5a
5SxZz6UDLwyVRWN6aMrgUB+bhqFFr0cORV/v+oJW94rxx1B5WsqLU94yPKq8
LjTwXtah299m3nrKar6KM/bnPv5V1Xvst1+R+LOobXb14pquGa769KlYUPRR
vme6QdeTIo6zDQYl954Yz1bGeXa/hz81vshnR/v826d21ObPUANlPyreKvTB
cy9AD0nVr4Z7yI0f9bjZiGZ51uTxnT/bmT13xv5XPsowTLVAud5xX7x+dTC9
1/o1WC/MjVed+ti4lp+K/jZ1jgH8efLQ9lLuxCcv/3jM0FCJcfT95puwqHgU
vz6/RVfV8m+f+LbNWyyq3uuD9ueKZ7u5sN3+ldxj0Yr89ZGxYz5y4uqmXzBd
M6aT4r+nnil+/zsX9hiDwpW7t3yrs+/ZR41H+ew//eUXjSeP7N7U2fqdr3fe
XjprXIoeynTy1b9780fGoXyOnTm42fRaGBQm9WyKtsq2rOrnEsvN7+N8pq84
/neOUaw/qeqZMjbRupRDjz4KtwyLRakhGubMp/RQ+s2HOfMcbzToUV8b2jQx
KLWWyqYhJgReY7rus+50EVuq/UMdp144nedA9i3zFyNczf1UPiesG3N8sm+f
ufhTOUhowIPqwTkM4/xWbdCymkz4oHmmH+S6wPFff/gvW2FQtMKmsaAx49kF
/mQf6fijfTbpxRn25GQeqicV8qfvyZk6XpM+SaOzxbwuluzq4usD8cXDmuid
XuPEzwJ/4n//6Od3O7OnVsdpjIvhcw1jQslRSvnj6SXKNqETLF9/PTlf8Weq
13uYr3761LHO0pU5+x37D/vH5cumo8Id4lGmh2nh0V5Y1Bv+/bd2/R+dnxz8
d523Dn/JOA7djGsIRh1KeAafb79xTdI4lfsL54a1PojL5D7F/Vf5wfgPvYbK
dYX775njB4o4T3z/K2qgZu/hRTRQ+FHap/zz/I44UO6/sOh3/+5h+w7Te7RR
dFLezxzY9iC/6fZ5407mC9+yDJuX8+fzCjfwDMOr8XwLDIr+yX6r6mFjDDHb
3cdiUdUW7eaj9c+irA/HqqyPYp2+Sim//Hrj0DqxmGI2alUVfmt6ceU5Qpwv
BZtmnzftYcl45xmP5zrlr3EuMUZYps8Rku+8V398yJ+se6oW5VoxzjurDXro
oWQs6CBzkbw98vWHLDe+jC3hQeJGVT80NR3jkmn6ucbz253Pb7f4AOm/u16d
tTx9aoEqx6huLpLWhZ6isTpM8CjXfOpfpdZbOtxaiO9fj2b1dY/PWDzoh+9f
b3XeXJOIGeI6SF7L0tVLpreqrhu5R4xtGBQWHUcfvAx+ZizDX3X88UyvvCT6
28f2rfgTXqyKx4Q961zjWQ7H8my2zz2PMh9ykfph0RV66bZfMi49v+Mztg+m
9m4t9NGo1ldi0uUUr3g3vx/JyI9G0yGnBuZkWpbR67UQVoVbxILwIRrl3z38
p4Vuue3vvtrZ9M0/t8/QQOFNOFMMitb6nx/+s86OrZsK7dSzKWwHj8K+MCj/
b9/0iC0XVuU3vFreU2Z8P/P3j9n/+PBZJtuI9le6PS1op1bzJ1tfeI6+EG2x
KMeH9X9zacGMe3NqXPB52FcpljOf4tBR5fq3bRxzxvrdRD9Db6ZJfnS3ew3N
6/uzv/kdz3EwJJ83ySs3n0POsqHmqVwh4hdVX+dB34DzPfmUuQ+IP1nfWN/x
tWbwONfCslhQ8pXCepjtj6WLtfzwcCXHQFY2LbWcrB5+j+uELx/mFXsrB97z
J+OgiR8+lYMEf5IDj5XdO9WDtemz2sRaGKPZPaGrQV9qbZ5w5JuLp40pYU6v
X+l66Y0cKK5D48yfsqb+eOVZsQ9CjRftsoo/VZOpTmwE88P8Z+jZfIZGSV17
Y9IXd9SuK9qYS/O40tPZ/NEY8eviF2b9U8+YsAPPKLCPHxeXrB9gV+NEg2Ee
yq/xv+e6QS5dz9ePjN9Yt4e/+gW7V7MstFC48bO/89vGlHAhPAqXyq8OQ6Jx
PvaNf28sKQbl/8f+9q+NQ6dferr4HA2U7zD8/KaLZss88PyTxrEsi5gAi6HN
lqcYUzExMbV8t4K9W/ThY6q7DwN5FuV+Cos23cfMT/zpjetO7PkB33wqV2kj
caj86VX+bfbhyVcPFNdY4lDke+c7sWSdelY8Z+g5RP7w0I/Pe9VMgkO7fZ16
98WjT6huEK/j0BOvDWOf4GdP1WQiFtR00j7iD1X/s4zZ6eFZpYFK27Ta09k6
VTEoRr36XtYZJvb9OGFN+nCqBr36HHGdqaOBWs+CRA6S9CGr632z3E+i3qqj
Hjcb0dAkGXtt+N7R/biGkFv07s/eKcYrmhw6IN/BZNJFuzH1U2NTh76O3b46
E/XH81kqP95iXe93Y13xz/MZmnCZ/93zZ9n+EWMqjhfeK1t/NNJb1y8YGxBz
QR1QeLSq92c/trT1fzGtFC6FyWAZ7o2wJPc03Se5B3l/Yqy3Dz5muIjrL9cf
poVLY2xa2xK16JkfvWvU/4669miVih1FN0ULNTbNWFSsyHuYkmmJEy0YNGdc
mBMGhSfx4/NeOujxIzsLzRVmZTrmSw2pML6U9UFT5TcWO9cCh4rzMc+ivFfu
UjdnsFp/DjXQmDEOw3lxnoQcGtNGYxxKDf714JeHJdEv0f85D8r2t+Ipwjhe
xhp+8zr58UzLuVTkA125lNROTWPN88OY/7s/u2Pc0rSGJ+ykWrv8fq3WYIoZ
jIVfKBULWuQi9aG7cR8lJgmOTY0PWLGKJzmWYlD843VqOaGt9uK3Zr/Ae+pb
v+XFAyty4KVroo3WqUfPPFQfJYwBRRNN1WHyJj/8JBZ0+IbuyL7HX9zvvG6+
MWvsqbHLdY/3nCe99uoYR2vqj9dvpGsQxym2xDeeyj0q+DMSzwd3oltz3BTD
C9ehBTZ9ltC8YFf6KMGj6JiD0EhTWukrh3bb+qvHunx73IfDa7RqDcGhYiXu
nX37UFK9OsMeSdnx4N6i+vViVfnZYUf+Vz1RtE7TMg9vNmaFRWFM1X7ilbhR
OJLf8j+vzItp0VuJNeU3sBW5UDAuv4NBYVe+x9/P96vuRQ01UhiGHCbF1ar3
p/rhWC2VjEO3fu8Ji9nzy7O+9dlvxUEpDTSmiYbrAZuEfvlUntJt1/9F/LSW
81m0L3UeEJdp8ZI16kX433stNcUoWo60SPal6uSXzV+9GaWZwaFNrvOMnZA/
11PvK84T7gmpWFA00n50N+tn7eIlUtP1kg/Pb6q00+d2bO2cPd4sP55zkvkq
1pcYUPogKfbT99mERev05IQv4Ux6i8ZykIgRrVov9ehcT+NvrZj88FV5C1WG
tqneRsSTo/vBpGvBt96Lxfzx1C5K+eMx9FNqcCoPhpzsKv0zfM6EF9nP8Jq4
k3hapmtDx2YejAW0cWJ2qGEPkxJDOkidVFqpuBRuI8eJ2E+0HfnHdY2Ac9BD
0bwGGr9Tk0ulk6JXmWb14R2LOeFaC4eiifKKDgpTEl8qPZPP0UFhOl5hUNhU
eVEYMaforWit8KfynDB0VuZhta8CffReap172BdWCyjbNngIXon1//TMWaV/
1vHNx+JDY9pojEPRR8c9r4XtLbvvwfLGeXn9h5hfIGXKKeJYpXhc81d+Pcza
JJZBvmDlKVG3qc7v0CXWM3/Ch1bz87nPRBn06t4vdfvI93HfZR+qH2uZfleH
QeFC1sczaFgHLbSmNZo4vuif6KD8j4ZJDrw0UJiSOBxNz3lflQtv80z04qzK
QfLHymoCDbA+68TSpvot/fAL/Kk+sLDLuNZVatMKf/xr20vz4xnfxEqjgalW
e6ifeg71/Mmx8QzPMbKYztzfPoz8PZbJcqgVy7LhQfgQTsS3DjcOSi9lvsx/
7gd/ZLyP9giXonm+tXx5tLHjIcuVsKnVSSK3P+Mh8vPhU1gUnZM4UzGoxYdm
20g+PQzKOKI/LLVJmZ7fSkeVMQ9qRvF73nNs0EnFt3ApuU3wrS2b63EfLGrx
hdl2oE9z/4P71HPpheefNdbhvtqEPb1xPw2XyXH2tZtSPeZjdZvCOkIjt2yf
W+/UbD/ZuDgzY+vMuMZSfcg47+QXiI45pvuwu63Mh2PAtGUaqPiTaYi1KHTW
bH4cY4s/rzFGfJ5S1b4ONdf1yJ8YTAjTpWJB1Rep1/mT91VHA8XqMCjHA/+7
6sXX+Q0++ya9koi7gHXZN8R7EgOqPpzwJ59pWurNl+XFw6dMR50ltM7QB6/e
elX5u/LBw8ZrtQ/CWjbt/37qgBLbKP7kerqefO5lBhuqH2Xoj0fjXDixs4iF
Vl1KtFP1mr9z/qVVHIqOqtpL5Gj5PlGeP9FBe13vNmoecL/o6l3n7T7nudR8
+Nt+aag+fHhc9/Sxu5dFmBTNSVyBPirdlBwmcpuID8WXLx++8vXJY4JFpY+i
l6J1yp+vuqWwK98znWpOMQ36KdOwzKL+U4+aKFzoc1d8L3r0UbiqFxZNPVdI
N6lTP1TrJCNeTjEe4zAefvmXfzm7x3+pqHfAOn760//ajOersP5Al/FOrNRB
s/nAml//m4eK48j/zJv5UL8XroAtYzGa3s9vMdg+3jSb16//+q/bOtYdH6a5
5vnUqfyYsP7SeuVPDD7c/9L2ZCwofvh+dLe6GihWJx5Ux4P7C/lCdf31dc8p
r4HyHoaEQcWUaOJ+es71sjwkpk9poPLB8+xdtk7sN/HnJBd+NEZfJOoxNdVA
4Rj8Nfjb5U/ZSPwpQ2MK/fH047G+lOoZ6bgzxp4y6s7Dnt3arAurckPJX1Lc
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
H/XYG1e7kd1XYA4/lqhtLtZk/BL3iR+lTA9TXkzsO7hUTBP2ilyv9vMPbnbe
WTpuXOljQPmffHnqQ6zIi6dOztWZ2poj9VVVYxrr9uxulxNVDzTWp8BiNPqs
G+vN35O4L9bVvpSDjw5PHvyw4kqllfqapdyniW9lfcYm3wmL+Oy5T7G/iPlU
7VDpouTR0+dJ8aNop3AoufbUeVK8KByrmqNoo6rds8pK1o1rNLoJY5nnj1ht
UbFoU84POTRZx/7iLYslhdU4fuqrHuqi6g3bZnz7g17q8/bsJb5jWVyXufcX
fvOMB/ie86OrOX1pBYPiJ7f43Q/vdP7F//4b9j3nB/tUOqh8DFoO/I+/AWbl
e3Ew8+rGax8r3qsvmHRSxSyUjfVYjVOfN2O58huEPzFYBr0zxqA81/Y6X8vn
yeuwpnRI65dFPF3GUdzbVVOZ+wbjjGMBb5JPBI+ijf7gyb8xnzZ8Sb3O3/3t
T1se08mZA6Z5Mh3fPfTVL9pxbbLO6gsvvz0+eF8PVNNV9USCT/0YI+cozIfn
M/zwddbLet5l+1NaJ68y9l3TOE/iRCf1ReNG7ST0za4v5A3rV4622Us9UPJh
sNT3cKhyZoaV9zJq49yGMcmH9zlIlhu/6xHztb9z81xjXzfT+/jQD+9275nE
RAyiHzb8CeP6zziGbWjb6iN429XwguXUb7Pp/Lh+cE+VVjrMHHzvw2eZYd/R
scmVDBgR/oJd8L1TUxT/L+tOjlLR3z77Ds0TPkX/hD/RSq1O6aUux3o/feHD
bpA7rdqi8J6v50RtUeKtxDxwoNX7qaH9+xylsvhQ6SiqKwX/pfoRwsOMU6br
h0fZ54x7cqOYF8wnNixiAl1OEnUF5KtXnjvv2Ve8kkdkNedzbuUzpmO+nkEx
9qvmpXwlficdlHnhE2N+Yl2th3RYxQRxXGIxC6rv5/M/lAOv9VjP+e8xg0di
/PnG1l/rqy+S9inzSO1PuNP3ekf3R/eDJznOxOmKI3085Z3ze+z1oa/8YefQ
s490Ti0eNW4Ul/V6nYY/VccezoQ/1Rde+e1YVT16HzfKeqF3hrGgpvPMbBvJ
MTfmn/SaX2WwpnoXcb1FV+tnfhZDWNHT09exJNZw1PtgGMbYx9e+6nzI7tm9
zA+fO/yp3iX8z7OtfPPoKf0ey9CUew9TcwypfcD7smeOOqbaPYr/4L7Ofcv6
XU4dtXHZxv2J5aBNDjsHP+bDP3rgBfPhj7xmaVCPB4PtqFcPh2LSOK2naMby
9FzCJ688evRQ4nTRR+FU4kbPHNxc+Pkth6mhv5Z7EzzDWID1VM8JY0zouYsx
Y0yasVuZDsf8UrGhoXl/HnzLvFlGTBcVf1mtIcfFTY4p0zNvxbwy7tE6lZ+l
Y0MuEBzOMvmeWFDGMWPIasiePWG8zu/QNZkOtlXPVPYB8yCm03p1ZfuW3Hj0
VDRnqwWU+yBYH96HfXDY90zLdDwfkk/m9wv6W8iT/M86wp7yYcJg4iD4ZyPl
CbCtaHExBp3b8YdWF6iX+fIcZH6C7J5QVlNAvnrLUWLfBznFMCjHkPuJ9bF8
9ekV9y3TTvZt7py5cdjWtZ8eiqwLDArzUn8e9vQ1QWFSpqNWU1VfeM+r71w7
vqouPf/zGf1gRnHcJwwat7Mnp3O/zGzfviX1lSfevWpaGIZlbhQGpbYSfve6
vePLTLGgqj1gLKp43MXTxoZ8t3T1Umf5env7Fw1bzw2nT3XvJcQG95qrJP+r
ckG4l6FzeZZAu1Gv97aPiXLwmbevVwonDrK3U5kPH44Zac1Sp4vCLOie9ADF
58r/6KLonuigxB3CpYof1bTk2fM59e4x9WKiN2gv28UxYr9wX8QHLBaFhcRI
PIfJR55aRllsqF7RUjB007B2pZi4KmeDccwxtPWxWKZp41hM/WTxU7BdyhGX
b1znBNtjflGn8bIOOrctTjrk+vw906lnKs+iMDK/kU/d+0jkf/AxsLAsZuzN
Nue8appvnp+FwZXMk96bVssqZ5mquvKc49qHLLfX/O+1amV+eNi0Vz+JegDA
hSm/FJ8zrqzn6ump4vlANdP8OGYMpThudmaX6aCKl+xlfVk2eUjkI9kz4ulb
xqPyw+NbpxcS01b1hfe8isViQdFEWfdRPe+sNwZFB0N/ggVgvl5yUeATnnnw
4fp+O72afC4bJdazicVq1RMPymdN5gMHij/JQyJuIoyZ4LiqDwyM6OuIlhnn
JnEZlquaGf+jpXY1nS5nql5XP8++GP5c5aHIr4l+g4X3Lq6RcOgwuEz1SmO9
nYaR7xT2HZUPv436nLUtyKm3WMK8ZxL6re9jTy17OJO8JbhTsaPUwif3Rb1E
icMiHgXjeayIG+3xGLFfFCuKricWvX//Exv7KRZN1a9P5cvDrffc75XfYTUt
89pXTfKF2af8BvZCo2Tc695faKl5fLf0XZYHq/IKu/HburE27AP2BXqn973a
Zxk7mn6cbwNcgk6qZ0K+q3tMQpYVh/rYQLu+wK7uuaFO/fT1ZLBWKh/e+nM2
6K0eGtdJMWiKs9j/7PeQU5kenZrvWAdY6ez0ziTHkTfUb/8g1hfm5NX4c/sP
ir6c8Kfvy8n3VQzq1yMVC8pnozr264lBFYMnP+iD2lTNeJTnIHFKG3V9vK92
1Pto3Ix7cXg+UzOUe3JdHRHWNObMrhPcN8r68JJjphgL7mlVx+SK6ZGzdo/0
PkY4lxhhviPOlLqhGBwKp/I7mLcqVw0zHSebnvuc4j7v5vcq7qlcE/GTh+zA
exjU+r8M+bj53k74zr1WOkwf/ki00jCnnv6hH94xvy56J7onnIk2yv/on55B
YVO9Z7xTj3RhapPFIngexTfWC4+KRVXPCRalTpln0ZiPPuRQWBPtM1XLnu9C
FtV4loZEvAhjOhU72o9165EsFX2NeJW/v8m+UnyrYl7Ewp5Necbgle960SdD
TZX1Vj4xjOPjEK3/TM36kevFyjRQPu8nZ4WcdzQlnlN4XolNo3t+yEIWx5ud
355N4bVUTs8HeYxwk17woVGTHh10x8krxp7kOtEXKeTPqlyk0A/PNZt77TjF
gtq+XwcMCicqjhJfibiRV+LcmvAoPDOf12XrZxx5kw5Kbrw+g31g01Hvu1Hb
zYtHVuTGq2fnD+v6BjIG4FmBeE+uFdRsrcoZgw91P0A71Xxi06leNLzJuIA5
YVg+D2vCrvA73u3mMHtONd+d8z/KlwcTSPeEEVI5DDEblD++F+N+Tu0q1n3Y
Wql8+GF/p6HUhorkuuOPh4dh0BeefNj0UXLs0EQVL0o/plU1cE8/W/gBOAe4
Z8Cn5Oc35VHVffMsKt1PPnrGoZ8vTAl74nNP1bKP1bOHX4lNC9dBcR2KCTWf
dbZcGIwx3zabwpHSTWFg5TZX7SvlfHE++nWSf1bvi16gPYwT5q9895ixnPv3
PtlQefDd68Y1u1akNFC+60e/4XhduXzerq2xeFBpnfZ9sO9DNi3L6cH/wX1I
/cR6WVd4GQ0UHdXnIKnPu5+2KhcpzIdP1QXls5sLR0Z2/KnpxPaOehz2atIY
q/LJYzzK//zG61T4ZxlH1sto8XRr60msoNXwCWpLbsQeSd7C+kyqCWoMmqgB
Krv7/u3O5k2bOl/5ylfM/uprX+vG0dbI8+DawjWf4yxft/8dGqb0Up5vzG+f
fc/8lRPB+IB5rZ5HHhcmTqUPltUYvxvP1wiNabl2cR1scv2ST3rUxxGTpmT1
IuFo4v7Odn331FE0rXSIdfR9f6ehaKUBh6KZcXyIGUUL/dZffN4YlHqj1lcp
wqBlPKpcvab9mDyLwuWwqHrUexYVW6FrwqIp/bOs1yfsym/LOI37onzoluuv
57HT06tiLMWssDNsqbr9dZkUzr2U9730PMr6kcdE/jrG/3yvWB2MfcZ6sk5c
t7s+9P56YXXnN2UsJB2U/7vxNytzrzeKse0pDbTffHjZ+RJdSfGijC+f+2F9
JjN2tWePnE15FkzFgi7NH7ZjxzjqVcdWP0vqMIk/w5hODD20iQaKwZnhuqs/
Z1ld0EEb/M82rzXtH3bjuiCW/P/erf9sKh71LEjOOtdqYv24LpO30qbvHG1O
/IvPFr7Z6PyJUXsp7BsvBuW75G+ze/xzP9hm3AnvMRYef+zv7D1+Ub5nTChe
r5tLctu+Y7/zOT2VONbUFN6589mufgo7/OyGsRPXnjeXLhfzQE978tGHV0yr
GqH+PcthGdzPONZLV+ZsWeRNoKtwP+U71ln1dPC5KweDaere68aBQS3mLdsG
f/+Wphv6TpmOdbbeTiOoox9qpeSBtK6VykefjTXy1pn/mePdvkrkx8ORJ/Z0
+y7AmPjiK3uEZefH/MHHipq5+P7g2CbrzJiyPl8ZhxIzCosq5tLqHwV9j25l
9zmvhcZq2ac4dYvj0X72K+vMMyDnjHKZiFnhecJ6xuZ+hFj9/NCs1vtcN6eI
fHnVasL4n32iaS2XaMAxHb42KIxj8V8lfWXWo6H7pWrSKxepjd4tynmPMWjK
D+/ZVM8FsT7rbeX0sC8uXrhg/PnEpk3R+vKyKg30exHdNLXuXFNGOeZ4Hlxr
deq5X6i3UJ1c8zJjfKt+vHreMB7nS2o49Grorb3UFl3P9k/XX+uJQbm/o31y
zEzLyZ4dYEfMckSO7C300U1Pftum//rXH+589zuPGafy+b49u8003aGX96z4
HUyLL53p4VR9rml5bvmLv/iP9p5XYgK4X/I/6wCr8p2ebdBbqGVN32leeY8+
KP2Ve544rq4WCk9wLoyqtqZ66Ch/A31N8QZe4+LeH8bDea3UzudsXxB3N9Ta
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
088U99mEPT2D4gem3ibXT2md0kb1XgyqvKSr1s9uqVvX+3i3V2jZ9SylHfKs
xX6NHWt+I7YmBrSqB2fdHpv9WpkfPnbOTWzw1u0DcKnIW/bf4fOFCXtlQfJa
fMwP+dtVflueQVUjqi2+WkvG/aOsPr3vC9DG9VnWNBZDzNprHQV0V6urn9eW
VU7CuGvfyo3HDzrqdZlYucFIMc2T3CV4I8xRMj49vN988coB4pmMcVnm8141
RrJ7GfqmYkBT/nmfR0/+ku7pYlLVvVffUP2v70NjGln4Hb9jGXAqXFqHEVXb
k7wl1RrFr0od0qKOaPZ9mKMkDm36nMY1JYx5hUv7yVWy+Jldj1Vqnyxj0M+V
3biGbuwmNTthz317d/XEn8SLwqDEqMKZcOjFN86uquPk+dPXW5fWLA1VcaKx
9U7l8DDOUnnk3EdgUI5nnTr0TeM4erFB+OEn1r/BndJAw7gXq6f0wfur2LSJ
3bg2a/NRT4bUdLAp0yhfsq3+n2vNrEfSrpW9eKkVikaiY9K2Zq08sPv37tXm
2ib9lFLGMwbzgX8V46aaiE3u+cM2Ygc3Sr/OtW7Uoo/VEIU7Yjopn8OujEGe
M3z9oLIeRjFDo5TfnftcFYt6jRQNlWdPuJFX5sOrPlt8ZZPND35N5UJhTMO0
xreOX/mfOL4y7YfzWrwJj1uPsNw/r8+pJYAG99KPlou4UB8jStxok+MFE8FV
beQqwXz0eF/e8aul/LkwhJ4TyitTTCZszf7thT+xqRMHzNctfkT7hEFhUcyz
KMa0/AZ2hT0tFynXQMsYlH1IzlFYS7NMO1QuPM8rh069VhoHOkwGJeYl5Ydf
mu+dcdar4Q8lLm+Q/mhi8dCfuL7E9C/PO4Psc8O2wrmqjezrSa7VOj69WrJH
0uHNti+Uu9tWTVAMDuRZA+6ve5zVo4nf9Vu/QDnN9CpUHqb6Bo7jcwjrxrpO
YoDG3zhG5NmE9UGVoxTWc+JzfPXdejcPanVqXHZ7LTTzz1u/z5z/rNdExpCp
eNEqu3NhT0+/82wKl8Kk0ku55nB/Dscz74mLtd6euZETpf6g1BglthutmN5L
aJ8xDuXzn75bn0XhIfU2X5GrlN2jmlwP8DuX9T0i72hYdUlZDmMIPx8aqPKP
euFPaaCwcywfiX13Khun8sXzzMz0/A4OVS4S61TVeymmgSoXKdUfnmWigfJs
opz4KgYdhi9+4odvZkeP7LUcYmrvDOI+fMViQt4oeObDSK0cntO4vnTrN1T7
0Xuxbr/aadPg0NXgTq41sA1x6rzfSHGh3KtW9UjCj3Zsu/Vh55mhbt5QXeul
P4HvVd9WLQXqZFP7xfd+QWdpGpc3sYl5s/gJfO+RHCWr1xT45OFSxqD/ve83
2YtvmOnRRdXzU9oo79Ey++HKfniU5a/g4+w6U9XfiW15ffZYUcsJbdTqmGb3
i7CvfJg3X9ffrf6Zvo+PxWjV7KvEupTVYKLW57D629i65P5v+I9tYNm9aqAz
s4eL2kwxBg37nIs/+S01l5SLpLiAWN8lHeeYBqqaoKlcJGJAYU+2+7tPPFqr
B9KgGTTlh6/T42mjmnKH7bzrI1cdViDGDubkFY6EGeTzhiPKGBetFOaBD9vM
mcdYH/QkxQOSw8T6KX+aZfLd4qVZW+eNwKKxHkncG4gTVY5XV4Nr73mgV5Zs
u6asTPd8H0uMFgWfTnKBJtaLoWnGfO9WlymIGYVVqWkfjjXGHzEjPBv30+uc
8U3NetUWFf9ZTtJU18depZPyPezKtPjt5bP3/no+r8u3zGf+4GNFPCp+l/du
l/ekZTu8JoreDLdIDw01UfX3xD9fNx6V/axekzLiAK5W+F7wPadq0PM5emTZ
OnDs33nvx1aXUzU6YTg+a368uz2ZqCGpbbFaq9l1V/7xXnRQGfMJ4z75jH2g
afh/hR8+rwkq1rfensE9Fv90TANVndDUMYM/2d49R44m/fDUYvL9OgedF5/y
w1f1eNrIRl33ok5FD75OdE34ET6AN9FUeY5Hc7ybnwd8V+V7hWH5TdusgY53
dXGhiP0Me+2IldVvXDEBsOkg4wJGabEeSRifkUsgTbrNGq7KcWJ8NB1ng+hX
H66bj8vj3i8WneiiE2tq+AZTdZlCXz1a6KUgTlBMpDw6ngW9ZtjNd15qpJEy
PfdHe8Z0TOpzkmBTNFN85spPapKTxHt+D5vWiUk1bTRn0Zm/f8zYUjXJ2Cc8
G1pt0reuFPXtqScKiyqOAc0z1EH9e/KY6rCoxem4PAFfb5/PY7+32lIlefBo
3+H1Cp3Ms2ZVfc6mtcxZHhxote4zDhSL8oom2YRFLy4dN65kLPLbUPPEYHTW
k3lKN8VYHhwgLVn5+b4mFvcX6z2fPxc10UA5x1S39PmDU52nphaS/ZAu31oe
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
2IH6PIqJlA665gnzqVb44VWrx+Mg8mbAa2HsjY+h1DX0MeR69oDjuEbkt7fx
qYGB2AeW0kOXmR/f1XQHB1MHSnhY40TPa+Yn1fdOjT9h0TPFu0DY78rZIadc
WLzq2Q/PKj88vw1/Bn74KgzaZRwobYnlIYnXXVva3tcPPJPgnP0+UhhUcaLz
fD9unPud8n6UKV4jZeI+8zH3VjSn7+b6L8vxRy5Pmzaxv19lz/5YnKW07q2G
aAeaxwPjJpuPpDEVi2/tGwfZvRPT2ad94FDwqfzxxiGcOmi1UMu6p9n8N8v6
Xklt0CPPtNoP7zi8h4hXps/G7XuPmeKcGb8+zhvsKf+8TJrVsquFL2ncbfQc
aNOaNT7uX3rgu17Y0Xvkka/1fvzjJ3vHjhww/DXrWKsLAyehoeTPVTWVqNsp
zU/V/Sy1mGag7VXXt4leKO+Gfj4JudA2z6u83k8eZ4UGaVU9xHkxcJDHSxYn
5d7zOGd8P6pRD96MYVHi+BSbiL8XzAkOxTcKNqjzw6dy6sGm4CthrdAsVjTI
UxcW/fyzjfpX8IVN+gOsynWFSwPD8sxuMi5oA1iUvvy4qAHi+VT6hHU1J4Xx
raGBg1NaoMZ/Zs8c8DHzGrEIVe9T3g+f0mSK1RjQZ9N7xPKneJ+pwMNgzBiu
Fq/r3xVSGDSWp8S6jLkwh36eTTrxpg9GvPLK0kD9TJn+h/usinkHc+j/LrFG
mF/SdV80wbicD3lKfj47dnS/YUzVl9KzAB+waVvd7893pn9mGX9yjtw/8J7h
nLB+dlejfXDucI+eJ7544bzFVUzrvMSFKkfeY09iP7gmzA3SNOc3eFBYFH/3
uN49wUpNONDBa/VOyVexnWoJ0Xa4see2b9vgRGccb41k2bmprqc/T+ogoSuv
86cmEv2kz6m3u4FxfcPaSbG68tSa1jZ5jN6GH70qjyMcT/j/4eSY43yOM2OU
3+i5739xh/XfMHXgp2HKq1J9KCymncoy5jjFIMZqlbNMOJT5AowE5wAWhetM
+eH3HT1Wi4eoKwm+8bk/qVhR2iusx38Wa9QAg4LRwDbMC2yHteHKrVZEhh1p
B9th8u2Bo9DBB9tW5UPIhMlSnDPHieU7xQz8v/uF5+w73PJTmzc34j75pA5B
0/NXe1L6nClcrTwkeF2/PvdqzLcey1OSPr2PvXkQbSUR52Hju4i9g0/tUutR
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
aIqb+eAz3Ca8ib13+gdmfD/8ky/1/vxP/73xm/jbPd7EH//sD7+Z/14/0buz
etA40Ecf+Y+9i0t7bJvtm75p/B9+6TAvHlwGfvR5SuIY2+BVsB7biXckR6qJ
ltOG3SlrpAvLKi6ySTvC2IFYLEGMH4VTZY5TO8Gg4E9wqNrGfA+egps6e36p
Mie+qT59isOU7qs/Z9WJhyP1+yg5zQB/VeX9x2rIt8lfamKKcyWGV+8iwqXD
8K34pMGcYM9Q71Z+lhRvOS2d+VGtTu8R7Mw1HGdekHAY7cCXOElu2Goevf6a
HZfjc1+CM88c2GL4U/znqUPbzTf/UjbfWF90+GynDRPPu2p5XRjbc43LGphw
xPrVS6Y9Pu32jGLgT2JDiU+cdlvm0arqJg344/dvKzUK9aywWPaHOHTAePZT
Ewm8iS/+0f/9D0oMCv4ET+JzhwcFU4oPRQcUnzz/Y3CefLIOGktwYcRPLR16
3r5jxEVyXcCn4Fn4QHzUHvuFefHCqGGN+hTnKH14ticmtapOD/5ljh/DnU3i
V2XKmwJT1+FW7Zfz0XFpA/1Kbg9+eM8JSquK93B0TKswaFN9+hR+pD9S+vQh
H5PKO/L6pz73yGNp75eI7Yd1VVur7XiO4Wv2p9qr8JnUe2q7X/ZBbB5Y0vzz
TscxtQ08IvgTDm0W+ay68QHXFeP2TIf/n++PlSc1jJv13aTrV4Kv4faIj9Bz
A/4TvvPCq7t7P/7e/1liULhPfn/9z77Ql+O2qCb8yXUhhmSW8tbGYWBO5ZW0
9Z/MpGXjk/hFcCjz86KP13FYLDfp1d2PR/lRnoWKAUOr3ueBTPs8ZsXAPIbr
ifssOFDw6PXDjxoGBVP6vCJiLon5FCaV9icxk6pzCMYQBgFDYGAPPu0+/uxT
i4/gu9cd4brAW+HzBaOCY8nngT/1GFHxmFX4DgwlrpH9+LqY8HmXDj9V7lM1
TPw+6/An69IOjkGeFtuzT8WnKmepyb7CPCv2h7a/ODxfV4nY1R9s2ZnMnWqC
QeG9y3jNoKY5PLb53V37lGPl4xv6Yj6DfZh+6OefGubz95qv3+n9/7H8JeFI
w6AujokxxbtM1T3sMahf7usj2H8jxkY1qeWutqx0FGcwKSNnH+xHrF/IP4JD
wGXkCI0LG3JMYhekT1WnN4CF61j9hHtXGmN/+DyO9W7xrCBvDCx689Jhm+fe
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
A3uAQVI+wEU25obvfPvRyuercOgk+FDVnfe/DZsVvGCdCdMxl9HunINK+9rB
rMyFFg/VMgaDsRJrF+2tq5GkdaVNSvvgQbln7tnzcra1aU3/8/gxw5/EeabO
F2zKs48+wd++dnxz7/03jlkOErGgfFJ7jk/pNaK1A1ZTPxkXmGEnsATr6D/V
tBROi2FQn08ODtO+ZeCwMkepqH3nj92FhfpL8KpomVf55aUdyrj0sadWXyl7
JtNP4jXzOL5jpf4neIztwFw6H3CaaZRn+2S+Y32wpvC1+o1thEFTmlgx37zp
iJ58MxoLGmLRMD9eWvoDOV6Kjbt1wfCm6mcxbsCiGHk/an8stoJzlZ++CktN
DYN2fLz7Vm/jRDkulFss33vduLY4xHPHS07TxlGDXCXpaTKXcXye+/Lty3jX
Ef7U2OYTvpbtWD+mmcV/YBNw2qz4V88uHWjkN7U2Z3MXmD7EFqpHyfuCjzU1
vvriy4Y9wZxWt+3uqmFQ/BPyh4Dtp90PndwL+G0ybMh1HpYDlZVxuhdO25iR
NgnLGGeMUa7ZrHE8MW3wB8KIPSl4t7p1eUYrdrTrWpuhhbyr8q29DztmMbyp
d03OM5bHLAzYlntkPrEcqohfGP3PuhpJWtfr1FuuS8JvaPUB8Jetnixq+6xZ
G9peC9avwrf0ATGb9DcYEwM/qk69lpNHAv5EZz7lgzcNADTGL1zo/d7v/Z7l
wr+9esj4zz/60hd7v/M7v2Pa9Pjm31o50vvjL/2H3r/5N//aOLHf/d3fLfXi
Necyvxw/vNf+E3aUnrfFLAS+eJaB93w+rvYdGsflWPp/WL97aHCU0szn+QFX
B77jGMRQ0tZYfpO435QWJP8zFthecyz75nzJqUb7nPtb/QVWYz2Msc5+wX30
HeOJPuY/8pYUn1kVqxDzzaNrX6XflIoJ5VgcU3Wr/PzEvSLNLoyYUEy/H/3m
V0uswnmF7a2rJa++TOkpjMvGcTzmA8t5+eyzoubBid6v7l6r5JW8j9I4yyIu
SRwSY1a5O+ADuE0Zv5XTw3ZwoB5v8rw3PpOcn9dfy/X/37pY1llibsYnzzKO
7/ep/a44PSrOifObJk8EPqSOu7Sa6OOq9VO5WKYLk+FSrlU4Bj58f83ykZSL
9P6tZYsLPXP4OcOk9Osk40bGaTb2irqcTbX+q4wxlNdEy/UHGGMWY5LhdXzw
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
ScUmE+f52/fyOIFLh/P6XzeWer+6cc5ylPDDn106kMeCzjkGZc4hHpbvbcb+
/cJfqDgH/x/YnfcH9iOfGjzpPOqOpvI6Hlp3Bj4U3quzsNZSGIuZ8ruH+Uoy
+erle/c+eK3De3oVBiU3vg6Dgu9Mv74iL+nV3Y+XtdTxs1fxnm3wqHQ5S370
+GY7DrwnPKkf31UYVHGh4FD40NR5mP/98r4o/8l/8J8co1+rfcXuNcUHgK+I
ETA9+iJXWPwicYp1sXxNLKa9I0wIRoFvUy36ppxZ25ykOs6L/lDdWy2Tjqmw
qDAzfTLMHKU2KOcH66sXlRn9AeZTP3iNgTZ8Itiyrl5nEwyKwYPSJtWDB28a
/iy4UDDo/m2Pb+iEFlqLZY4tMbaFrqnqAXBe4I26fmzDAXMcMHPTd5lh+OV5
s3/49d0+XSZsnNpMdr3v5HVF+azTqqLmpY8Hwgdhtaey+QFMiYFx+G3cGzGI
q8vlHMV7PVi06nzArMJQ4N6+/4v67/CeGJwnuFNxocdfejafFxYAg3pbuXCq
1djX/Uxfpd4TlHtWt96smtdOnHZbFtW8rmeViZ/0z/QQk6b87iltfLaVvid4
lPEZ7gOdqufOj8aDaixVxVDCHxLTFtMwun1uRx+W9DlJ+Oqb4FLwKNgWHBzm
Nplly8HBdvwEBsXWD3/X2pnyw1fxnxyH3Cz5oKz2fOFzp24A/ePrOfn+u2G6
fqulj9tyqkbQUGJ/YF0wrXzM3lcrrSLw2DjeP5V/nuIS83zIM4bVwSUhxhQW
VQxrG+36/nG5wekx9mN9Kn1OsCi/fT5SG44PbIkWfVifM/wOX1q3L45LfhLv
Q1y/Uy8/Y5hT+FP5Sd/46h/ZufFOEdMz9aY8f9PGcrlq9ClYln71NY3CHLBc
c7g/hoPf7Atsvxaph9ZmTCyKKSdJteJtjL13zWoldXUM4zSz46TqldbpVoFd
iE8UDhW25N0PTEquO+bHD/MS3CaYso7TlTYo9T4HfP7Sqjm/p6wJb9hz79O9
LT/8T4ZLjx7YtTC6TDLiN9uMfavBVuD4Ktya8xgnTONoEhq0XZrXTpx2WxbV
mmp5xrBqDJemYky9xpKWpTRKw+Xrd+NcKMtpe5N3K+JX0JpN5ZKDTdHSDPEk
vCXcoWI8l0/ssrpF4EBhUulvNsWjiiFlfXApvnvFz/HbuMwLW0uz3PbCiIdP
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
oaEW7WXic2FdPL/q911H96E8PEznngOp6bxydk/wOcrL0z8E66F3pnHo1d1f
NF7F79NnURgU/mRdad95Y8BoGfjT/KMmft64O/zV5JrUAIPy2p0yKN8xeneU
V7W6yRYLwY7d9Ca5zACzlF0DmidUO+jm3ovovNJw+SzVN7+BQdUXn6FBuzUA
fF7on8rT6lzMutE+VecJn8lnSv5MSXH9g+bM833DI7l8mfw8KYzp91jxurt3
bbfZXO0+SOnz1bNy8vhZrSzPGfe5+m+ar6v7+rp+4Jhy6zzk8RX3fnk1umw3
75FjO/RaT+fdpl9PXBrd1bg2c7hxd3k8rqvkeIc1xVKqByXy1I+WHSEdlIA5
6UeiJjRtuW7D19iTfn9Uc9fv/dMWLV1bfvX3rp6yXDx6KP3xe7f92P7erLl4
t+a26m3ZTOH2JoVyjPwuPfflf9848taLT9kxuv3BX/154f46uHX7P3yjZtAt
EsrDU/+p8x91oZaHv34u8Xn4vXPOoIeVnvnpPd9I5VDqR4cP7G72ErVmOGpd
q4uTqcehtFeee/HEduPPLAadPL/xt9rVr5o+Q6O5+g3gZL5fbo8NQb2mnbs/
f2J82klu3mUGtKWqvBvhPnkqWd1gwdo6+E+5exiJ/QDfsE71zsfaXAaDmt/7
2KnY4wgN1HLfEUf5vU4E65fHlDQ/36fJDZi1SE+8Xwvq6rR6PxdnmhoojxX1
7MrKycOhqpOF6dOun9gvLMN+d/dzUp0Hy7j+AvGxHb3eHZuZfT+og6fl6t2g
VxpPSbhEPDo+NtrGnJrZRXTTW1QonJpF2DKkZ3K/fT9bDIouWiZ78pp5+JN9
EvtvDUKvNj5Nn6xbDxKf64E3f278yd+qC+W28u3sIPzZznXkj7TeJM6hL/79
Vxs//Zv/GOtQnNdhUFjS9CFpog6j8j/3N+uM1y2ow8N/h7+5n8dtnTWTbrqw
fvhAHp7+eHTQLF2P2krOG+t3F+3vLC97HuO1YEnqSeHXNB96jj/Wy/LDh9+L
9c8sBqVvH800tE7zUGxpWLAj3rpZ9arqmYJf/fo39RHJn0f+O3k/A9UV9qLH
qUi4c6KL6LmaBy89DYZV/l4Mg6YmJuV9JvmdunF2rDlzCP3TvHvoqRkfNr5i
vWL1Ng/32adePkleTYR52d+8ZT3xRWtB/XrV5rbMmmcU3lFu738RPZseJHRP
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
9TPiWecJnk/sE81+x98In/csb1KxYNMDfqHZc88coeUrbSyqWlHVq/5m5uoG
PyafO93Av0mvCU+7fVF8jsyqd/2PeA+moaTMRUoLd74S7+38ufeCPUpurzyM
mOZDn/qdbC0rzdTtpaK+lv0H/4Q4Nq/Xq1s3CG9xfkXnpIYQDr13Y9ZqQzV7
HI8f8vbk5ntV30XOjrw5WidBL5FY9Etf/opxo7TNHW+2jsdo+2FDGBK+hE/1
N78Z/A2HcstMTesDW7hs60Ib5b2g48CjrJdb/ufYhHnwXfLr0pvH2fqm+a3g
s0QLpR+pvYbk13Y/cwqq3sa0qHoOAF65ffXILSGYzWm/N0tX6tmmdeSKpLlI
kweet9x83t999E2+L1n95wrr78zhZa+eeTEomqivafLbbfclMCjPv3b6tbjX
Hs+oPNsYuqbjPviZ+8g1LHXoX2h9P452tNXrp/V+lbMNzXV0Z0/ueXe3aZR5
alJhJ7jJ1+DkFeWyqHLR8KTVgR48mSsHTz+8q8W6s5tUC+r2psm/k2WoabTa
ggI+/7xvbTe3Wrd6lJJ65c2zaf1KYm9S2j6knoTtpdeLfDz7VDyb5Buq73Ju
BlU4LPruzpeNN1ULSm0o/k3oofTQq0+pVz7n+CL4Hkq/HJ5u/Nt/+79YsF2a
NcmcTn1XVS9Ivvbjx4+MD8mx+9zIMjAqrGk1oW6dWsCbifWTS2Rf4vMNk+JP
BQsNVB9SjkjqT+L8Qo/SIP/uVe0/gA7OObXq/ZA30ObVOzHotSJ1DE6Qa/f9
mG5MvmNcSo1Z3vXAdXxfiuqMMOvk3udSvZvcnnkxqJ/vx7czqc5UDOvm8Omd
ytpWza6HNd3cF/1V4kc8jDrJoaN3cL53z/NbMTRP051Hrlvui+cYRYylHnf8
l+DPvL08rEOzl0KPw342vz1iVJaFJd+aWArOhk/Kw/uzkaQZiqepF3AfF2vr
vWpuad56Dc0rkr+/+5h64v1eeXEoOVCen+RD74f0eC0bmj+lfnm/V4ng+sLm
sH76SXFGavEXdY7k5+lZOrDrJasJJZi5Q00o+XiiFzlovD997/gvfe1bxp/0
q7d97u+fietzdLz6AYeSQ2eZhYu/s21W3afV9m3CmZWdxsOU2bOD3p8kf/qq
dGd8Ibh+rXo/5A3lCBNnxNdRhxfSQC3X7daXkZvPMRdJIW/6pFlEaQHPwYRT
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
5nU2/a1OxVpov3LGvA497GX1YLM+n0Fhyslz48aM/M+5RDl7//lsB76Y7px6
f1+wHuo6tT99/09f/yzqwwQPwYX0y1AjQW4c33j4sOzvG+tlPusnHz/uq++v
9SPNnO3b64ViM81lqKP6wPeTeUFp/Imu/nff/nbufPzzP/2x6XsXrZauOXMe
fYhrZritas1PPqDUfhbJxcOgPC+P5xBBTQ6z5/EKTeNQ/EhNnx0ADlXuXTNp
zI/nxHCsfebx+iTIu+O19MqrL7Zpn0U0z0FiT4V8ivBq8nuR/Dy6eTnN5K/3
hfupoUIPpder6vdadqxcavYphbQt5bsHoVcJFlIN6OJvt8fbSG5e+Xl3No/8
gsSj8Ct8xOfJurilP55jBAbKe03C70enOVWeB+txLeyuE06Ekwm2jSCXTd4b
TZE5pctTQxaL5/bZLe+F+wmWgdPRM23GfPS7zjrzaotsF/0yrr8T6xRX+vs8
dIywXJF5quYVFDGhetPdoFfo/r27xsecr+DFtcXOrhXc+YKqXeL6o1/HsvqR
qM2t6rvj+jJt9hroOvoTeXriOa5h0B/+8AemgWqWfBqzyu/ezeU/+MO6PcZv
ARzHdx7dvt/nG31X4WR/lvzc6Z3mLR/ixTOHXjYfgSKvxfLk7f158n4s7/+K
9epUyaHyJNdcbv5W7p3bPDV75J3hRnRPGDTkrZTVayT27Ge9p3qust6jZiGh
f7qeoKF+IvZfEQZFW8XrX9+hymokexjql588ENYZ3V6lKj0CrBempckl5YP9
gEfnj79qy0sj5dYY9cgrxqIw4ZWpdD8M8eep6NoPjS6NGY11W7xI7zh9/Gy3
mA4eVk2lGDkrWFYMnvZcPFSpXWAb2BbViebxBIZjtX+1neieSftZdRBEkfpP
tgnuf/zHh/a9wp8TNiLs/MO8rg/X285V6JcsJw0F7SSJsXkvPE7dL+tC92Qd
eM+itfa6D96NQehHatae3Leo+5HqyArqI+HKPAz61u5ddlzRu0TfUdZzNDPJ
ri2jczXfT+pD4FC3ppT/+Y0oynbdBn1A+O/Dhz6HJvEiy3byWui++PYzwzON
Q28P/bmxHnnvKrjcaj//9ROra2QbNOsoyw9Ssby6YJon4fYc5Z1nVAV7Nj+f
pg8TvUXyYPJ96An1r6Od4NXe5gkaqAsuwqDwq/hTPU5brT9JQd2neCJcd9ns
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
f/qJeUGhg4ZqFsmXh/gzr8887NnPmk/8kagn6JWvJnwk/yTVpmT1jbE8tQta
jmNb9YxFjmvOxdTtkrvv59yVKoL9orlKSX5I8GlV2+fn4QmbjZRTg7r5++Ys
JX2Pbf7QneZ9sOz1O/P2mHm/P67OZ2dQQjMvLc8+ccq+5zDp50+eWJ6enqCq
t7HqqLofSXn4vPNb6qjDDXR0eo2yvOezgl6lsuZ0cp3L9hD90vb5/tCbFOI/
GDTUK0X9DTkQsSfaZlH2VPx+/OeNuwf/Mpd30421yx29R2rx5LOORvfe0P5g
z4vpn/vesRx81iyj0H1V1HySjxodPdU4ceKEcV7Zv4Xwo3oe8mig2o8wqJuP
73S7pMHm9Wvd7IGfvXxCQ/WGVWwTMzjlO6Z5nPAi/FhkPXqOtNMnUfz+/qL9
D4OS1+dxgr+f5fM6jE7OXfWhBL1psGm/8mSDHFX3I5kfQauGrvZkqqPTWI2u
JeHQ4cMHY/bDi4i8OqFeeHTO5778783bnvu07Ms//2nj+999rrR+OI5rXf/y
e9MPrwfy6MMHdgfZj1w5Naru8vJ1ytI9ybszF5QZ9QTLEvCqm6OHQY1Dj37N
+pHy9CoVOTfhPaSaHTiGWkU8mPx1kP81/ozYqaj+Sc8RdZ9lfB5sByzL+gh0
pyyu5Tloj3Aos6zLrAHQnE4CHdnvNUoK+r3Yl93WUVjf6Z/+ZL5QW3GGUihc
P3vri6+YQTkGQ3l4uLHoutA4xZhpeiePp+X5n4VAY+b7BmdZnVYfZ2AOelTd
j0T93P31O/VspDq6Dr7T5NHpU/r+977beP3l5xvDb3yncXtmn3EojLr9H77R
+O3b37NjjcfhTgK/+7K3B56V5y3s1Os6E3qiJqJzXbge84ttDEpvu/zt747/
IsiecCd8mtWXhPZK3agYNA+HqleJGtE8PMIyYigYRjM4/Vzy5bUV0z7pfy9a
9wl/4rnEbTfnB2pUYU7WE8rv51n3B9HvMZoo/FdG/SS9QK5XNfyfl295ffY1
fqHdbAPXEGjY8C96di+/C50Gn415Uk2esoCb8bnq5nigVylUI1rF+4M9YVBq
QnWf5eE71ONsf0UMqzx86FiFQbdyDXCRoCYF3098FWreaUbV/Uj1bKQ6ehUr
l0aMN/Wbj5cQ+h339etYgzuvLc7HvZG99B1j1lnSHCPmbMKdLMd3LTRfScE+
EntSI8ryXKOyzwhmRvE+eG+sE3/SJosO2bnW5VBy75k1ood2pOZh1INk9fv3
n+pybi4Zn/i3Jpas7z1U/5nV+w57Evo7bVt4LfiNW+pFCfQluPPgP2ezbl6d
Fe6mTgoW7dbvXzOSiuTh3eCzRXfuZhss5+X45A+SFsq2oVOxffJOMv+kz5+Y
PmJzqLr4DNwaUc2aL/J8zs983/ge4oExPZW/flNBvpzrIhj0owet9ba0zG73
n/XSt1hUOXr7rcCz7v26xs7dT8uLCzaP/Vntgfej6n6kejZSHb2K1YuH2xjU
egFaDNrP7SAPj9bPcU5+vle/x/QcJfkkzb3zlYjzLpnnUhJ/kluP2TO6LoVp
824rTIr/EnOH4BX0HrFoFocqNw9bhriE8z/aGcHf5N/3vPs0B4/nPLpnyHcp
KRe/M4E/Q4yonDrLJK0jb5+TtNC8nynvcWb6rOXmO62XYp+qhoGgN0jzO3Mf
w63epE7reBXqJ9Nsez5PzsVl+CV0Guiz8jtt9o7ct/oweJRtlK8q86Ty1i8k
xb3Vs3FuPt/36lpzfvf8jPW0LCxcbnoBTxXXLm/db+bh3WssWBF2LHN/yufJ
5dGqPttBi5pBN0aV/Uj4J+Jj8+m/flzPRqqj9FieHjJvDZdB8Xnjvm7XXZQj
6UtS7Wmvrreof03iPBgUzfLY0WHjTLeOU9on7Mnj1Il2ysmcf2BJWJS5mWJR
NNE0Dm3TRJ08LXlQ9SDBCTAALKRlxmemG7985WfBeUehme8hdvRz5tynnmF4
1F8Hy2d5iWb53BfZvyxL7rzTXiXVYXaqgWob8GhiFlW33xteX5+palM1w95y
lX3UR9dvzsVeAfLSPzYxFddlcH3DtZVmIUgTLSM3n7Uc/dJoRNpP6mkJeU3m
ienVJoNyq/vqPHl/A+bBM/Tj6JivGbT6fiR6h/GvWVt5v56NVEfpAYNSH+kz
6ERODSIU1Fzi+0l+uki/u3qUlNsr+5qL/Dj9t2m1l3zX3ZmePn/i7VSWRou2
xMwil0Xz1IjyuOpEOTeqBhSO0twedFZeA23ylVdfNP8ltEUirxYZYs8QK/r/
o+tM3ThucW5xpHEyYuGjl5fadNQ82mgnnk/8TsOh6KJ5Oc2Yz+tF6vTcpxqI
MhhxXTOso23zeZR6X82372UO1903vCbsmfSZ/Wbmatvcp25nbaa9L/mb4xvJ
68Es/HZcmDhqWujjPz40D/mir3non5t5ePRQvU6dJ+9vcA3N9eDaytVn2g9U
UVU/kr5j8i22c/MA7I86tlYsjL+1gUEvHXvJ7uP4I+BIgt8GeuupE6fuCtYM
eSirfplAwy9y7aS5bM283pLlxct6r6wrqRaUmN7zDeNMv/+dviPup6azF+ci
crf4+sCieIPeGf1xZm7ezc/DXDAKuifrkgZqve8Re/r6J/WYWWypfDgaF/yY
lUeHL2FNsWdSsD5poFn6a6e999Qkyr+JHBYaXpqOhY5MDW0nvUh+8Dp8jtMZ
sw6KxvrNZk4e30TqBKTZygefuUS9+H2AgfGq4jx0dnos8zgwTbTFoZav74Hn
Glxinj2tugA0T/Wu8P3ET9KuyQq+tmYjuRq8Oxupjv5EPQ+yParqR0IDUt03
mlKtgdbRizAGHXq+jUEvDL9o4XuDoseTJ+fcQv8wM99Xlq6Y3okeg2bPcUq+
W8/h8aLHLrkY1iltr6xjf+ZCci2oGNTXQPmb+/gN6LXeBDfCLwRzCvPk5lVD
MPzebmMnd2YPDBfKv/vsmMQSLjtO3xi3++BS9cXDI/Cpq3vmCeOU6DlopDw/
iUFh5U73JwwJi8Js4lF+y0PLFp2LlBVoofjo9yp/+9GdK/F8e50jpIGX+Tpu
jSzvKU89L8eG5o/Kc63b+lA3uPYVY8KgIf9IPV60nifJk6mu1exf8Fkutuo+
tvqchrxRVT/SzPmn1wK1R2sdvQq8LCcPtDPo1KEXjEs59i628n0wIecjdE00
NzgUHmUOj3v+Zjm3ZxYu7WS70DVgXK2T9aDBdsOBpw6/1e4F7+W8z+39+w0a
KH1JaKD9ugZUXaNY9Oqxf2jTRNE+Q7l66kT5zPCjhxdY186hQ4nzj/x+IzdH
DxcWYcpuAx5N0mXL8P60nFLEhHDoB14+C/3w+trT+WFojNRIdPN65pEVvZ4+
h14eK3w33VrgMtcvnwBy8OTZ89RuSLt2fcLYvjLq+vhNEBOTe4dR/N8DNNLV
aHvRiYuyb6InU0V+OM9iUN+LLxPXLndvVlP/OGgBf85f7O+cKPUhoTuF5rbU
UUdZMTvymjGnz6Cwqbuc7zeEZy1MiF5Pnh5G1Ax4BX09PKfTbXPPr6oxg0fR
NzgfFfJuj9hjcu9zbdx2461/0/b/1Hs/2qCBWm5+vv+5OHqg0fCUn2eWvBg0
TRNlOTRRfre2/erl3LWfLosW1TVL4dAb4/baLovubG1T0bpQuBVNS/WvcBHr
wM8eTdTVC30/prI4jmOX+aj98Pg03fbzJ8bS3fJz/H2J1rO6shzvE12j6NqF
fSr/LWqOdT+fn64b4Hv5TMH23ewLfnPoe2ddMGbS7EZYl74k5owX9RqWJxM5
ef7vZDZSHd0F1xU2j+9id3rDVomq+pGsjyP6Tekkj1lHHUWCnLvPoOhp6IFF
10W9Jfo9tSP42ZfxG2I1nBFzci6Td5PrDZOXR03H3f0f2njNz8svHvtJUAPt
hqO7DbeHns8lb50ovjZooviBJmlWoftgjX7zpx8+i/73nCwK+/DcpPcGN8Hm
BHqo5Zqd2fDUhFIbWsbnxvFIzxiv1esedjdnXgZDU3uqXDr7h/XL+0DXBf5z
YH6XQ/V9hGXFoTByJ3oo3wHl1+lTSfMtd/OHhd7zHzZ6MpGHL9uTqY70qGtB
26OKfiS+u7UfaB39CvgTDm1j0IhfqBOtetvc4HvBuUc8ql49Y4eITeFeeqSS
nn96ZOOM+LVd7Tx3d/RHA6GBhgJmos8FrkHrzNJDrdagNXd+3/BILg/6QeBP
N6gJ8D2ekvqUOD5U28rysDfPV0++7kePU68Smku3fkxpAX9ZTj76zHqt6ei9
dOJr6u5D1qPaBL5jymez332d0w8to2sGvWe2R75NcL75jOaosYB93Xm+5N+T
9E+C3C36J/uhaC0h+XcYdGLp6eeEBlp7MvU3avZpjyr6kdB9qIWg1q72A62j
14G2hheTz6CL54rNKOlnuDwKIz74w7qdL1cTzk+h+ZxooH496KBpoAqbNxSd
CwnymadOHje2VH4+T+88+Xl65LN6mqvmzjQeTasRdRmJXif/+dKDyRuTjyfE
Rd34MbEtMBUR4kx0RHLyva4Nhdf0fjrRQjVnS7XcrMutA1MuPm12AOtw64rd
6wXr64/4Aj4kqDOBb5PYnFoUeaHif4/XUhZXilUXLk0X7qFQLag8b8uajVRH
sZDXa92P9HR/9LsfyZ3LOQjnvzq2duBF7zMo9+EbWvW25QnOYapLTTqf8V1i
DqfvBer3Jw2SBmrzLiPmhGHQ7RToavw+wDXk5+HLPJqoepbQREP5+UHmT4Xy
83Ckv6/0WFItqxgWLpqaOmO/62298FOd+W6Ru4eR0B+T/JFgKfyyes2hrhaa
NjMTXpXvqDxG8VMVH7K9vv4njTlPba6uB3Z61wviSvlgwf28NtuCVsr+t9x9
a9uUk9Vt2ufDNSleoczWKcov7nxO1YL2YjZSHemhfjK8wGpv+mb0ux/JciHR
69VadB39CI43ZnJaL7jDoNzHHPmqt6+swCvK1zx9XfTOni/EDDp9/M3KNVAY
QNyJJsX//C6j98IJZ8eGbTny82icRXqWlJ93WXQzMKhy8j6D8r800KTniqHQ
udCS3V43GLLTc575sEYsRf46re5T3vXdzrRPCxjP1UJ9ZpNnErWjbg2CG0l1
AztTNOhQ6JogpJvC7ca5Tj0N3Mx28bl8/uSzuBYAv/lHDx+kfj6wi+pFuS2q
gYZqQevZSP0PainIAfOZ37sxW/n2VB1V9CNxLae8YlrddR11lBH8VsOby2M7
Yv68PbPP7rt1pTNPpUELevpCeXh8mNoYdOiLbX6gzJWvcrv5/YFX3Bnh6hNB
O3JZQL6i9CHl0URdT1HVim4mBr14/akWx34Q76R5SmkZerl9P1B+b7kPNiqq
hcJG8Nzy4lzmPPde8qdCWqi863lN2JPtdGsPYGbzvI9ienzY9gF5+BDrsY/F
+Hm3Q71hvhbqHt8ct2JizaFnG2wGVLRdPG7+btNnEz+Xh8bVp2Iv0rR60aTw
a0Hr2UjVBJ/dx63ruXo+0tN+pH5eC81feJqHr4//Onodj+4vJDLo7aXxyrev
jMDv2M/D40UPg7X1Iw1/tU0DHTQ/CljC6sSj32jf9/DizJjl6M2P/dCOXHWi
fq3oqXOHKmPLlfWpxu0P5hvXP5htXL4znsmR3JLvJXQfmm7aa2g5cryufy1/
k/uL55xPNXuV4FH1xKR9LtJBee4g5A9V1ymmMy5bWYj/F3t+5Hg4wc7Kv4Vq
Scm/Z9WChp6ja4as5/H67Dt3v3M/7Ep+PYkrXf5EO+u0htCvBa1nI1UT8mXC
g6vmn2r6kcSgc332I63j2YwPb10w3lw9sytm0BuT79h966vVn0/LCDxK/Tz8
yQPbNvgy3R35ZqyBTpU8Z7GMkI9laI4kM+cJ/kbPxJOJfDs1oHlYlOXQUJkx
H+rn6SV7hrTDphftWuPDh+/HAZsmedkn9SH5DEpPlpuDV+2j1SSiLbc4TTwK
r6HRWX9O9JussDrKlk7HZ6HaxU5rSssO9bdTS2yM/ekn9r7Z5iQtVtrwbMAT
BzYryqCEO4ML/TnPc1iOawueC8Mm1aSRq1X+vRv+VC2xWwtaz0aqJtQLM1tx
DmpQoop+pJhBa1/6OvoQYtDr53fHDAqPch+PVb193QYeE2iefh7++LHDwZ54
fPnRQNM8nqoKcU5Ip9q9e5fN6ORvcuvbdr9jvAVT5u1ZcmtF0USX7pztGXvC
ky57wgF4T2XxGyyKXorGBqfIeynpNVif1TREz0En9fuQyPFqO1gOLQ5Ogzml
Oas2MRTUkfK5UJtLnw166iD18/Le0BV5X/T6hPavdFPVGYe2n9qHNF+spJB+
Kq+mJ5+GOdTnTo5d4ujB3W3bLD8M+t/xaeIzwIupm30eqgW12UiP69lI/Y6Y
QeteGIsq5iPpM6gZtI5+BFonvIn26TMoefqqt6/bmBg7tcEDlDrQ0aGX2+5j
XhIMigY60ePe5U6C3ORKwvxBdDh6XaRfwaDujHixKD4AeVkUX1FmM5ELIj9e
NoP6Oi79KOSLb6xdzt3zojw5fBnK36OxusvD6L7OmcQubANeQiuL521/s5wb
cCq/0TCo+rtVa4lu2mtP+rJCfeqwM6zN3yFdWn5Lfi9YnvA9Q9FUCe7XLAJx
J8cu10BcN0nDv2ia86jdkqNF89RniE7USf2nG34tKDXytSdT8WAmFd8NPifq
IzrpZ5GuXTNodfORagato59B35HVfs7sixmU2lDuG7R6yKJhvUhDz2/wXyI3
72uj9CPhDYAGinZa9bZv+JxWLhgzobX5uVT+h0HhN/4PeYByjtf5vWitKH3S
vEZanWaRQMt0t5/aO/jTDdXgKwfuMx2MKGbVY8rX6zUIaWjaf24OXrULnYbb
U6N1q9dc+2wQ8vJJYXMo0dQ/fxL3LyX1VLmeAp281tq92xtqKNClXe7kGik0
A8zXnmFQ2JNzZRl9K34t6M3fL9SeTDlDNR9wJ3q0+zlRx4tendejgHVpFusg
5RKqiir6kYh6TlUd/YwQg8Ji3FfU32TQIuQJSh8S32t/Zif9SLApj1W93aHQ
rEM0Np8T0D9hUN3vaqD+XE7O+zrnZ9WKSjOVryg1WtduXeg6B+9uO/zo86cC
/pQ3lfzkxXTwnbusOJTHfR2Vx1THEHuBzkxb3WwZn41Y1O91IpfPNqt2NI6W
H6fVlrbqUAktR95cXpm9Op7YfzqmrA8ret201xM/5vEGTQo+F/b5sYmp2MOB
72OWNs85UQGb5JnLmzdCvqC1J1P+WLj4O+tj5zjilt8nZqVebM0i+PzJE/sb
jTRrXexz6ivw4epW294Kgf7J+ajf17E1g9bRz1i9eNh40/UGFYMOsoaTFWz7
qcNvbTif0Yt07ODuDfczJx4NdG2lv3mPvKF+pFB+hDz7/r274//h0bRZSMrP
iwNCLBriAvRT8vMrCfWXeYK8ubZTWmYo6KWBO+EyNExuYVE8NvFAoi5Byyb1
2LB+1Tq6/Akn8v6TPIO6OebgR/NDunktztMXDc7d9A8Zl0afOzUBZR5LbCP7
T56cWTk3ajiLeoO6+0Tz4k9G13jo6nnnzCp6+b26db+9FrT2ZCoW4hXqqjmu
pFtwiwaKFsrjy4sLmbl5Hjdf0Lu3cjHrVo+rC7N974l3P9OaQevoRzALCe9M
l0GZmcR9VW9bNwFL+nOQ6EXiOz2597n2PPyeLzQ10OO9n+ndSbBNcd+1N8+c
x/z5O9t+9XIie7pz16nto/co1LeUxAhxfj56vblrE4UZ1O3/8bVMBYzJ+gn4
c31t2oK/NWOTWn00RvMcanERtzCV+pB4jHW4NaBwIVpanrmT3YR6gVQ7Ku1T
WqfeHwGzSiNlGfjQ3WaXRznPM4upk+NUM0U1o4j9xzZmPY9+IR03eV6XZaiR
YHYC1yzizrzM6R9vvfxuUQMKg06v1p5MnYR4hb6Z0LHB8Xot+j7nmXMln13m
JNXeoHeMPTlfMXe2is+0rsmtox+xMP7WBga9dOwly71WvW3dRNJcJLRO35Np
9eBfD4QGCiOQf9EcSVhLuejVleVgnZRqQdEmdR8MmjQX3mVQ6t/EhkePH459
RYvM/Zy4cCq3l5Obh1cPUih4/7x3lz8JaaHwGOzG3+wnai+lPcIQ3MqT3fdh
YnlqClZuLgT97rv9/Kxe94PbxvfyL4VzCfV8hz4X+Z3Ce9Z/tnh+g3c7Qe+Q
tEuYNK+nPscJ64tntVt+NJ/3kHyZ0vzpm5r2fPNzadV25vUFCx1bPJ/19Hq2
KZ8JDEpvPP/X/UjFgpz5owcfWS1oknbJ95BluP5Ly7GPjx6J+8yqfl+DEnhb
w6H9ZPKLsd5RM2gdvQ9j0IglXAa9MPyiRdXb1mms313cMAOJvnd0Tr8f3nqU
Dr9VSd0NIT3QvOVbzAmDoVERsCW3sA0s4rImAYvAoG7PDjl2vJmKMCgBS8KU
RXxFlZ/Pw6HqRbL3nMCgqgGlF93lT85j4k/3PnktqadGuh46nDsTiLh8eb6t
vpSaUM3xKeo5ZJprizXV251V/+B+BrAPEXoe96vuUt7t0kjxK/V7+92aU/ab
sXvEl82+/umYz915UFnznNxI0ozhfWom4MTfvv39XLWdSVonxxF6KccS76Uf
/Vx+Hl5hvkybvBa+X6H57iG/DgWfY1a/O3l4eW31W/cb5GDfjY+NWq1Dv14z
7otP0LbrqKPMwA9z6tALbQzK/5uZQSfPj23QOumDZ/bm1b3ts5HW9nyx0l54
vuPKLZODDnn6uHN4fO1q5Nhh8wZ170P7S2JQl0PhrlCvOzxpeeKEWtGk/Dze
Rzw3iUf99+X3w/P+VQPq8qdy8GyTez+aMLVjYlDrxb3f9Fr3a0DRkcWeFnj6
w/ynT8eaMSzCPoH/9Nsr1oTXxZuu77q/X3e2+r4IlvvNzFXrw1mIztPNOtY5
4zZdY/A7z+3Excv2nJ0ei/K6rqem9F3eH89ze/2l9aI3cQzI31T3s3zeOU68
f15b/Gn9SBHHhnLs3XAnx9joyJBtG/6w/fzukX938/Dx9+3mJeuNr/p3bLNE
Ht0syXsehqWvCb1fxzB1pFW/p0GKG2vNWUnrffp+rC5ONh7/8VF0TbBa1+XW
0fOANX0GnTzwvPUlVb1tnUSaH1MwPx8tW3UvfJYmpfl1cJS/7O5d22NvegX8
8Pr+3ySyp27R4OgRSuwfurFgeW7ViqaxBo/hq8Oy6LDk9l0WxWM09N5gPLgm
qQaU4D4/Nw9L6byFRqDecjwulW92+9NhNjhfHCpdUNogr+HWL+w8l5w39/el
PIZYL9uCVslrurUUboiD3ZpQ93HWRe8469XnBP/6mgT/uzWnvH/2CfwJh2rO
k7FutEyaZ2nTZ3WjZ6feG9c65o1QYo6da6sqfVSVh0cPde+va0KLhfgSrTNp
Gb6v1JGgdd69OWc5eViT41Xf1Q/v361zwIHgu8lvF9EPXZJz6NrK+43PPkvW
tuuoo6zgvEL9p8ug1E2So6962zoJ/Jiu7v5i27mPHCH3875C+fl+XV92GnE/
0sx0G4NyriQPD2P4z4EbdpxaSGVQ9SVl1XBeXpky3StvXwksynEFixL0PeHp
lNRTze9qVg2oe//tpTOxzkn/jvri2Tcws6sLMqPyzMi7TX/QO1faenLEZ66G
ij7KvhP/ubwuXRM+VC8Rz4dneR2/r51t4dzLays+vHkp7plif6h+Vf39rA+O
FZfyWu42wIhpvensA7RyvR7rD523WId84lWn6jKn6xXfqdYp7rQc+6Edpp/m
mUGgOa3w6R/uzKcu22mEZiMp4M96Tmf+0DUyfdxJjERtg7w//TkDfA/hzsnx
43U/dkJwjkIrQRPty2fa8m2rrwfq6GXwe/G7d75vffAug3If/fJVb18n72f0
4I4N50H8mMjD+56g5OcH0Y/eDRiC32jzVI8YzdWNuEblvpCXITVtSR5Nfr6X
Os1cfe0zY43JA/+Yn0eG/rxx4eirMYvCIKFtpZclrQZUNbC8d9NFW5wJMyq3
DNfQL+7XgCpPj95idYYt/ZO/bX5ltL7p8WH7zUWnkXeTaizjnvWpZh8+n4Xv
ucT60ajVJxTXm3o1BcT96+jBt4K1sG5tAn+rNpZ1+SxadF4RvU5+7WovmNOv
7bT63YQZof53l8+X/aNYX5uxfdaL75Xy8JqN5H7f+O48GYDv/maJNcvdPrTv
xsPW7DJu0Tv5jtFrBFeqbkZzBtBN4dcP71219ZCTx0+UPvq6L35jTE+dsdrQ
fmihdV9SHf0INHd8QJmLJP7Eq5778K6vevuKxuryrGme7jkR7oQ/Q16h3DfI
NdfytmSODb/v8IirIaGVkZ8JPZfltu98oy0nn5Rbhk3yzuOUl9Psge8FZ9rk
YVHeB3wFm8Bs8BuMaHWc8GB0XuLcBXuhj7qfEcvDfIR8qqxms9X37bKhai79
mknVRfo1p2JRf3mfN9E43T4g1gUzodlR66m+Mr9+VYHGF/KlchmU2khppOjf
8gBwe5jc3iX/uAn1S/WCOcWdfO+o7aQuxPZ5AY939ofPnW704ruVlIev/enD
v0MwIfuF+kDYkh4ijnu48cLEUWNKAnahp2htZdGY82Onf+6Tjx9H919tnPvd
0eCcAVv37evWQ1971G8MzU1aXrzY89eqPULr6Ed8eOuC8Sbz4cWgzI3nPubI
V719ReP0yHvBek/8LXyvUPL15Oer3uakQBOCqWAeNFDlZqmb1DLmS5TiXUPe
+JVXX0zsnXF9gdAUma+el0NhSVj02sGv5eIXWyZi0avH/sFy4+JRgvdBzzrs
x3tFh2R7XG2RcPPo/O16CsCtbr845z97bovf2E+T58Zjzys/5x+qP4UjeT7r
QcPVZwB7NnmpXd+0PqnZJjvTe8SyofXDqjCmz6Dq+dEMUv6X1720Yu53+4T0
+XHfwX9+WsfZS+Ysq7aTz+8pe4Y/i14waFI/vDTQqr/7gxIwISyCXknvu9Vy
RoyI7zycCFMmXavxmLhULON62CcdD/iM1vpbcuBb1Q/f+ppB6+hHhOZ0wqPc
B59WvX1Fgpy6PwN+bdefNSai8+PEiaGgV+hH64OpdxhXTbV7DnEfTCSPDs6X
8FFazTgzuumP93ttkvwp0c7QpPxeef537+dWvfMwJBonfJmXa9BP7x79Wsyj
zM+BZ10uZd1wKRwqNtX5jf1hc3dODNuyPP/Whb2Nh1cPm2bMsiwDr7Gf4EH2
H6wjfdXmLXlaqEKP+x6tLpt+ZN5HzVpUXoeg1lM979zv17G6vBqaUSrudLVQ
93FeX7W/1HIm8aZmYOGXVBZzhrgTLu50zpS0zzT27BWDaj683w8Pfz7rGqhm
fcEg8kqSLy0zNDXHiMfgUq7v4SLmIKnWk+eyDquFjpbjuXn9GJjzKc/72h9r
Y8i3vtceqjWD1tGPCM1I2qxzOmFNmNM9ZzIPCa0zxKZnx45Wvs2hgFnU723z
cS601//ob9gTBk07Z7IsXBKaH59UJ0qPCs/zc/NopKHXQP+SJgpTwqJF87g8
ByZdOPm6RRKX+sFyLP/78Z/HwTHMfoEfra+/1Xf+cP1KzDSwnnrkfRaVD5Rm
MCmka/LcJB1TvTSwlcugLE+tKp8VzyOS5pRqvejd8kvl/cC9rA/GZb/r+dSJ
uhonOfFO+9aTuNPtKerWt9Ot+8zDn71gUH8+PEEP0rPeC09+fPrsKdM4xZ2a
/853hPw4y5CLp4ZTtZ96LnyK/qnrYnEMfJq3vvPejVnTWm2OQq2FBkNz5Ht5
vRR7hGbM8a2jjm4Cb1B8mHx/eryaqt62IoGe6fe8o3vixRTyY4JNB7EXifpI
9dTQ7+370buRVgvqBkwJg/56bCmzP0lBThedjVlCaEMw6OK9c4mvAVNIE4UL
74z+uJAu6vKoaaQH/9KYVFzpsqn+drnTD7fuVHWUrgYpzRHOE4tyy++tdFKf
QcWUPI91+N6mmhmqXm4eZ3m0QuXX/WXFtpznXdYMeTpJm6WeAD6XT1JZGqf7
GbT5xc+cLcUv3moKI87Lk3vvJYOyHfAnx33bb0j0eT2ruhtMiU8S7MdvD3on
+hcsWaQ3CH6VR5P5fl6a7sjvk+XVL1/7U24M+dbTo9Sr15i/UDNoHb0PuG0r
+DLNXDi7wZOe8zO/of5seLFp1dvsB+yi/Dv556w53lm1oAr6odFC/R75NO9L
f7mZG/O5GASNTpoonNgpi/p5e+mkLpeGNFCFq5/CULC9dFD+hz2V84YP4UCx
qIL34s9vggNhR9YTyqXDMcqzi0F9lhVvUlPh5/qV52/y6Nkmb54YbqvjLFPj
dPcx+ilci+dA0Z6iPJHUb9RvBv348R1j0LS5o89KiD2Vc0d7hB/53ezkmgMt
lFpRtFB64bmFa3mdIuuBX/F5Er9utpxcP+Lm9QXTQu/c7I2HWMygF+vesDp6
E4/uL2zoiZcv0+rFw5VvX95Au/DnbxL0vMOafn5+EP2Y1P/u+w0lRZ5aUDfo
j4ZBdxw8mXuepBtF5liybXhsShOFCctgUWl0BBwmrY6aR2oAfA6VbioeZZvE
kS7rwZ8+a8KGfp2mnstnBUuJQdEICTjXakRbPUfu/Cue6+ub2gZYV/NYyXX3
UuMM5djjnqLl8IyuMkL6Zyf82S8d9FkLt97T5mzOz1jdT7dasLRQNEybH3G+
s3w626K+pry1pM9a9NK3Xgw6yH27dWzuuL00bgxKH/xm7kfiO7Lw9l+0nV/5
n1ySPzMeDZT+pKq3mXB/N8h3+H5DaQF7wpRFtCp65H/5ys9i7/U8OflOGFT+
6zCV+oVcvRItE92t0/mOqY85einc6/Io2yFt1LRFR/Pkdxzd0TybFueCvknK
xUvrTNL1Hjk1curJ12uIeWFOPnM0x17VcYb2Ty9y7FnRLX/2oh6UYx0OfZb1
NX4f//Tpx6Wxp0J1ofIA7dRjic9GHpVos73uA9+MIa8m6n3KXjfnGPY9PWfP
8vekjt4F/UhonqF+pM1SF8V3I+T7iS4a6lFCW1pbKZYXKjOaM9DmjE1U3weX
qAdJfkNZ64Gh/BnxWUEOmd4V+uTd2tCdOTiU+9Fn09bP76Hy2eh7/C6iDTLj
0c3Pu1olrFiGPlqES+nhd3kUfTSUE+c+8uV8VsrX8xjchs7p97nDWv5nB4/y
PD5j8uqwHx6amnfZq/cdX3P1IceeFuynbvmzXz1Jz1rIP74Xv/XqbacetBt+
UW4fnRZOrnqfDWJwLdkLr6al6NhgVue1xflNwwN1bK6g92iz9yMZz3m+n9SF
njkzFuxRYmZ8ldd0aLb8XkgTo9aGv5/W3+er7dm/d7fxU9HXV20ovvWvHRiz
XiVXF03TQtPq5+BbcRsanz+XHW8lMR8sGqrlFCf2QiP1uUxceuXgt02HZLvg
TftMzFN0Y61m/H4iBoUtYU5pnpq5qZy9eYmOllfHWWR/+Dl2rgXc+a69DvW9
l8WfvfRmunzz2WXQXgT9Q9Rv4k+vvvpu8+jqT8IHSvOUehny4+e9yIcf/iXw
4x+0+U1sD+cU6mfLXO/K4vnG4z8+ij7LJdNOqn6fdWyt0HwkdM/N3I8U6nnn
PaCBhnqUmKNU5fZyPfnxwxvx/7CL+uBtHlLC81gOJsK3h99I8vBwTifbwLrI
rZOb3zU01Nj2q5fb+pXSODSJ31UriZ4rn3X0P+7DXwq+W785Z9sPy2XxqMuk
8GLueUxdMJ5qTNENYTgCzZJ6U3gObyJ0TAv+joL7jfWi5VheNZzdbK+2JS93
+jl29nU/cuyhcGdtlsGevWJQPB+SZsXXUTxgQ1hRNaCaEaF60G6ORa7tlCdi
nnzZOj4MB2vCmNTIasYTvVTymtJ7avoOnxq43DT8CYeWycfsE2aF3LqxOrA+
2nVs3gh502s+0maZ0bke8Yxf70nuHS49vf+FjRroAM7l5BqbGlB+r2/fSOZj
1SJyjudvmDHNt6lIoI2+s+8dy9FnaaKh/ScNtJl/b6+htN790eHYpx02kc+l
y6JZPOpyqXRFcZ76lHrJqL0MsW8RdhV3wr6jI0N2DQDfV3Uct7NnZ73v/WRQ
juOkWZ11FAu4h3pNGI35EPAiLGdzy/74sKuaUIXWxWto/dQrGicV4C4+d2oQ
zFs5Wgf5DvRV5pCFZjzBoTxOzSy1qfimsiyvW/V+d0O+9bOz5fnWN+t675uG
UPtj1VF24Aua5E2/WWo/QvWe9LyTh2cOp3s/2tYg9vfRf2Rz6TJmUSg3zN/k
imHQsnuY0UXJzafpoP5z1HskDdTlT3p74Ex+712euP7+ZHPe5cy0aaVWG9vq
o8/Do9Rzqt99+tALTb304F92nMPvZ4gdFUXy85rJXlVtZyja57yXy529ZFCC
GUkwKHn5qn8HNnNwvkAb1HwkMaHbU9StFspz4VB40NUkmzNsr9rr8Lifq2db
4F+2y/xOo23ket+ducbfsKa2XzOeYDDYSz78hFh7EL3zy/atxzvm/vodi0Hz
kaljc4c8mfw8PLWhsyOvVb59eYJaAs7FG7TOo/saJw9s23D+5j43Bz4I0exX
udL4/MlnqfX28vjRfJxO+pHyBHM60xjUrwdlu2Bj8WRQA42uE3yesN6c1jx1
3xNJ6/N5NM2PPiuHXxWXKqcunbOTHiQxq7iTY6BX/klFwvWb7yV79pJB8QlF
C60ZtIR9SY1RoCeG68+PHz+yvqIytEOYEN6FBa9F17iapySWxGsK1tSMe2oD
pJ8q0DdhWS1n18h38tWuDPL8Sraf31x+X8tYH/sEDdS00OsXK39/dWydWDy3
1/rh3Tw8f8OlK5dGKt++PIGmGdI60UC5de9nuUGc9UAunXqbZq4juRfJ9QTi
/077kbLiyafN2fJJGqhfO5fkwS6e5DF/Hjv/JzFr7OEecZZ5xN85azPp6auX
z2inMShcWoQ7ybMPEncqelXz2W8GVcCgdT6+3OC3getqatZVF1q2dgj3wknK
q8OV9ED5OXW4lNnzqg8omr93Y67lmQnfVr2PQ4FffVm+9U0Pl/etN36p9met
o6TgexuajTR//FXj0s3Q/2a64MEdG87d3EfNp9+jRG3oIL6vudgD+ELqNTiP
ax6S+pHyeIh2EvQnJdWD+jqo+os01zyPBsq1gDzi6Z3xtVD6mWAuHr98Z7xx
dmzY6mU//fSTxq0Le40nXV8lXh+dVMFj8CpBzl5zPYmlsTcq63nKCjRS+pnK
0DvFiK5PaRnRr7x7vxmU3niO7ZpDuwuOtZXFc5Z3V1+8m+/udf4arhSPSuPk
mpf8fFnfA/1mk7cftN4CBfM78/jW58kL8ns9qLUHdWzOYP6R34vE3/DnZumH
X168GNQ6qQ8N+TRNddg/3uvIUwuqPDwcyv9l9yO5gXbhMmhWXzx/q78IHnVn
UcqTHZbyeYL+JN6zvI5UF8pzWY9mWE7MHIk1FAV5JvaBXz+KpwDMC79Rq+A+
FgqfV8WpzFvqtV7q9rHTc882U4OAl0C3HkriT/qCxIsh39K8IZ+lqtizHwyK
R6hmd9Yc2sH+i44P2AxtkJ4dMSe6JDPN6dmeOXdiS3jMw7T4+vPeBrVvQr71
1CqkfWYsA6+m9bwPcu1BHZsvOJ+gs+D/GepFok606m3ME6dH3tvoxxS9r+D9
e380sL4ST68xw5pms95yui0Pr/lIvcjNTs2M2brTepLogXefozoBMSj1rdJA
CR6DKdUX77MoTOmzqJ6Pvuryp/aFdFSYjTAv/AC33Ls9b/6r8vhkOfOM0oyi
6DWyeBVWxYPJ915Snad68t0Zom4NqOvzhIeTMW/LG5b6izK1lKf82b4fXBZl
GThXrKteC4L7xJwsK3/PXvW6DwqDEkcu/f/tnf1vHPed3/+ttkDbO6Ao0PbQ
uxQ9NEDRA4oc0DsUKA6H4tqghwJN0qJIkyI5O47P9qU6R7Ejmw5sRVb06J4e
KFEUJZEUaZE0JYiUqEqynFiKLSsnA9t5fWbfww+/+53Z2eXuzuzu/PDB7s7O
w3cedvY178/TnYxDH/yy4dCyppx4xWQSa6n8IJ+bVPU4B2XkN8HZ+Perzgcs
suXFS8aYv/40zv2cE2prE7smFn0Qqauhfp3oCnXLp2hs/Ey9OenHGdYEJU++
6vGVMfLzyH33nElu/MnjR6LTz50Zjs96v8b9y+LlP3sSreHsNUY4T9PRzIaR
j4S9cXLOcpLK6qDYpbbfBx96LA4UZhYDlmFRcev168t7+JP1Mh9cqvWhsYqt
YtwCU8Gcmr8o5lbsxXnheItVVbOeuDZNZ7uaxrjVs5n3TFPPzzROdtmWY73D
/C/O4888Hi1jVTLnqBlUOfLiUD5/8mn194m6G9c1sZb43vHBE2s5ScwZGnWd
Hj28Z/4Z3lc9njzLajUl96Ki+ThXW7eWMxblvf9e9Zma3PjGBmH0QEIv9Py5
cea1seoPT+3PrR//9h7WpEbokcPvROs01fV3A09RVySWjyT+VE8e/500wkGP
h23SO6mof3wYDyoNlFcYVBomFjKmjwPlfYxFYTst7/mTdaOrwEWPHnxoHCg+
51jAijFuYZ9YVtsUg6HvSQ+chP/LsvwZt2r1zbowKNqnGNQb+ij17Ks+x3U2
9M669Q4a2nWys2K5+HWsERoaPAlXotl2m1c+N+Yn31f3ReIN6NX55fPntczr
bWx8DMaENdc+6KzHNC69OWM16fG9o4HG+nLCq1WPOc/QCfFfoev5GEB83apd
FNYc5zvuE91qifZj/M+KQcvUZvJ1QPI00Jje6VkUjTRk0c3FE8bl4k/qBsyf
PWKcDutmGl3yGT8724sx6KPtRfufgFeZRwyapw3WKe+8F9sff46HsX+jOJbk
Jp1bT2s1yTfvWbTx0TcGa6selGmGv3lY+ZjyjHs092dicsvE4jL/2upCmlfv
tJsmL6mxQRj5RsZpY9wXKVaT3nKJc/pyEu9S9ZjzLJYTj19LPcpjPW9gLRg0
1EYHYYeT+043BvW+eDRPaaBpHGjqI+ee140p4E788ortxH8Nt2q610DJi6fH
p/Kd2H/ppSyLDhrTVPHPw8bduHjUnDNIU5561Yw4KQwaGvlJnkUPFPSqbWw6
zPosJQzKvemb3/xGa+adQ2mfdlh0QDxq15jW1zby5tAzqcdvuqb7ju3TXxR+
tJhO9x3P4Yr3LLt9q294dbevlfoMNAzaWL+m3vDUX/IaqPnmEy4dh/sqeUUx
rZOa9NFa9TXsy+ktZFCxEmyVF+uexhrOD3y/0FfJRSIetMgXr5wktg/7wYtp
TtCKxT120xvzWFTxmrz6/iXkNxk7JgzKdnSM2La0VPLjtSz++XT7C8ZnYla+
j3FqaHW+XmJGTMG4+NL7ZU/07P3WCtivwaLi0CZGtDGYj/sT+uLM2z9pffc7
/yu9Z7e5b/v2immkv3q01cGSto5wWtvgSHgRrn33Z4ey6eRAwbtf//rX7fWH
L7245zs+MwYs/O7UiSP2n8J6udeWyeXnnjl3cdfXptz4hkEb69c25meiNemZ
xndVj6+MLVyeba0f/Moe1rS+hQmPjEtfTm+eQblHKMemiIMUKznosVzfvtP6
4Yvf6eDNkEEvfpTqQNJA4U5f11P7wWs33dGb8pZubm5k/Ek9UI6RfM0wZMad
bWb1OfLeiG+w3KL2mML41DyrmnXKmu9RNIk6qParLvER9FMSgza1m6bbTC9I
WJF7FPen50wPWBIO9MwIC+o7mPAnB1+3eTwv/ubpA/v8+l//VevIz2dMb/Dr
/OxJXB8tMpaBkVkv90Ce79dWu8ew8t+JFqrPTX2mxvZjqkmP5hnWpEcbrWPt
9o59eLzVOj3zQkedRbTOWK36OvblDE0MCncVaZ8yxYxTB3PQY3nryLE9/ZHy
fPFeA0VzjPU4gv/Eor1oovjcO2paX0pZFjZU3XqxJ74i5SWxPY6N8rjExooP
MAbd3q01lKeJ1oV5isxiatv5WVWz4jC4cxi19fdrnkGb/KTpNvKQ8G9Tgyqa
k+QYEB3U66NiUAzG5D4V5ccBjdUzK/VMua8uX+3OkWigaD76rPpMTU7SeBnn
H/9x1YyXp4HCpUsfHKj8OJUxnstWfvKv93Amn9FAx6UvZ2hLru5amf9b4i6t
fuaAa9PDla+9e7IwBtTnI8nnHvY38obfXD5weNX6MRfwB5y52b5HYtSroh6I
3qvGp9dA/Wuoi4b9QlVfAF3UXrfSWvif7KxmtZ0GVccdzoWZVWNzP9oq50bj
Zn3U5Xr4cMdytrh+qubGwdhCxqCP75br2T1qaxi0MdnK1b+x+xL++P3cL0Y9
bmq4Mu5L548Xzod2g99+c2Mxm7ac+ezq7VtsbNf4z0XzvrN1s7W5vlpZDYc8
DVQ16cehHlNuX86ZF6J9OYkNrZr7y5jy4mGvUH8L68BjaIKw1KD9xRdu3Gi9
dmqlaxwoveKlgapXUR6DegaUJmo153P887CV10DReq3XdPJKXrxYlM/8tpSP
JL6EUVWP0/euh4OVt1TEy9qXfnVQzok4Cr1VdUSJZdxPv03rJzV3yvabZxXF
yrKPt1fLxRfU3cTtdWTP7Pw2DNpY26QdLLucnXEwi+V8/jy5lp8k99uf5/7e
yOOFQf1/KPdc6xlPnfqa9oZqbNfS/JI0XuSzXz+xV2r3VjEWcuHzNNBxqUkf
68tJXOi49eUMDU6hzjGM5bVN9Dm4KfTN07Pn7UMHBzoG6z3vfPBFplhQsZ9n
vf2wKO+p1S/+ROdDx4ZNqNOEBigG1fdi0VD/xBfPtvDbo9PCtpoeG5f51JLj
zDGPcX+3Y8eyik+w/dlesppRprEm38GRZRjU6pgm10Pa6/qU1ZXm2YTxeTZH
/2SfOC5Vs+Mg2BMbhxhc9fJsGLQxxUaiK1Y9ll6M/k7EDzD2p59/ZnpojEPR
P2FQ/53q1GN1r4na2E5r5/ZV6ynA+UKn4/nh1ub6yPtFqh4omuc4a6Dkvce0
TmqCjlNfzti+qe6aYjylM8JrIRORtw5/DHIM1GMqw6C/uL4bCwozqC4nY4X5
4KVeWZRXtEJqf4YaqPRJ3kv3Q3/geJGrpLr1fO9rPHkm9ca6YMFQ/9R9Vr0q
ezl3+JCt5lO7JzOaJceD9XZbHj7dXLuY8ualtG8nzyO+JgDvYU6+Yz85Tr3k
edXTFmqXb1TGfP36hkGn28Y1P2d+9tRuz83keR4OjeW5U9sJBvX/o15Xa3Lj
628+doKeCvji0cCZPqoxWJ+d975rTOb5c9w00FhfTrROas/PHfr6nun0Tqpr
X848g6tgDXhK9Yd8b3gZ2hoMul4ip7H0sb1/s/XiD77fUY8p5o9He5QGmmp0
S6b1if9CFoUvVLe+G4sq7lNciRbIPLyij3755XNjsIx/k2PG8uI15uF7pqnf
pzfGLJ7nVfnyWT7/1m5efy/Hj/lVG0D1+mP6NWNWHhHMCUerR6tnb44Dxw8m
hTcx9M4yNaXGxRR7W2e/e8x8baaGQafbxpFBH91Pa4rCncSzooFa7buETcK4
NbuXnT9j5n+n+HKVl9T44+ttqucq/zvnG5/8KJ8fqDkf6wu/ePQvzDf/5OHg
a5wPw/L6cjJ9nPpy5hmsBjtJ/1Pv9XA+eAwG7ZY7X9ZgsYOvv5rbmzOMB4VB
1ZdTeiNsZH3aEz72WiT7AKPKT53HovA08ZphT07y4/kOrtVz+93185Y/pHsi
xw2m4ztfSxTGU7932JBx5PnYWZeYtFc/PMZyuzX6l3d7liZmsawJQ1pcQDJG
z9mKK7D+o/Scb2ucLMN+Vs2Jw2LPusd8FpnvJd8w6HTbONZrhzt5Zic3nj5P
aGP45fHRLlzo7E+DBooW6us4yR/PMnl+/MaqN87d7Vsb5i+EG5jGM8P6yuie
Hbg28FWjg3r+hEeNS68ervw4lT2WsZr0eX05Pzj2TuVj7sdgD5iEuFDVFQrn
OXniSOvgwdcHsj14i1pMrx69VCoOlHx4rik4U/GVvFdOuRhDNeSlb3omVXym
6tmrh7tnM68LohMqDtT6dN5Ke0OJG8WMsCjciT9cy8J8TIONh3neVCNVOVLK
iwp5UzGsHAPx5uLs0Qnwq3ezhbGK+Syy967daeqDNmY2jgwaarf3t660njz+
tN2HLt7PGj9u6JOHPZ998fnINbXGypvyx+DQqnKzH9w8H9VAxaXj8vxCblGs
/+Y49uXMM1hKdYxUKzQWJwd/wqH73d7dj+8ae+bxZywfXrGgvh6S6jIp90Ys
Sh44n5XnA3d5/zisxrJwaaiBqpa8r1MPl6KHrl07betT7k7oO2d7iiP1mip+
batROgAeVZ66fOrra6vGlqFPnc/ED3h9lmUmyadelj3HKeYzz3w+UtMnqbGr
C2fHikFNA2v7i5ba8YDK7bdpybNzjAnkk/c9Pi3Gr+3H51mbYzAuPDEtVodY
EXKOwjhQaaB3189WfozKGPz+wdvfjfbfzJs+Lr8FxknMgOoGKZ6S3zRaKKzi
50dDwg9/dWF/1xS9kMg/ystByqsPSj68/M6y0K8Oe4pBdnt37ta1VJ1LX1PJ
sxu5N55xmc/n6MB6xpPUxNxeyup7hvv46MGHGcdq/Yq3hUUVj8kxZt6wFrpi
TkPeZBnl0Ye8iWabrTuZH33T4gQS/s7qm05MLc9iE3uOY8xnnl27fbfpF99Y
ZqqzuTTC/I79GPnw9GnifnpvO9VppOXyf1OU605NmjBHnv/m+Quns7o/MGnd
+8FMi/G8odyxUeYfhWMg3jPsC2/5STPfHpv7J8cx1n9zXPty0jtY/c/4TWOm
Ca7NG9/BO3AWjBMyKPPAoHBXv9s/m/Au+UfwZ7da9OH3sCvrgPmUexTm9MAf
cJhy3WPxn+LRWBwo6+VZXX58WBSfAtqm50njOWIo8c9vd+reHEtprVbnKLnX
wrehVslxZjxolL6uqMVvrq0aV4Y+deJrlKfOemFOnb/YMbf/qOd/uyeeYNJt
EvzuoVEXVwzK+6rH01i1trx4aawY1NeSUj057m88m6OBFmm6aCX8V4VxhHCo
+eWTe6LiQ8ehJvekW9rD64HVZaoqNwadE71za+6NPbnw4xQHmleTnv6b49qX
E38G/Gl9jjYWO+pe+BpEYX4M38Gg/T4/wFovJcvn5b93Y1D897aedk4SjCxt
U3539XJXX3byT/B/h3Xs1TvTMyEcSL111XNnferB6XXi69eXMy7k/gmzKuZa
ppwuHSvVWs3qbibsyHKwJBrAsy+edsRusm7Gh27geRN98/7d8nk17Lv28/yx
Nyvnw1HwJ/pn1b+1QZrPh8dOrjYMOs3Gb3+t7d8I7z11NMYr3Vacybh/8+xz
41D51dFHYvc1tBNj0Mj/q/zy6iGCNlr3/+FJNz1v5MVXjMLWLhzq8MOvfZDW
Ax2XXPhYTXq0TzTQsF/nuPTlLLoeTEtL2Eo+2/D7I4dnWu/MvN33tmHPH51Z
L8WfMfvk05RB1a/dmINa7LfmM24kj8r70Zk362fertsOk8F0sGRYD5QYQvW6
FMvIbw9/qj+9+sLDh7sxSaeyY8x22Yb89KxTfAQXq2Y844GbuR8zZvnR5Uvn
nDDu/fyOWR5tm3v0NPjiOcbj4mcpa+fW7+xh0OvbTT7SNBs55eSW8+zKfaLq
8XQz8t+5V+KLxyfPNB8vqFx37lE31zr7PsV88d6Yjs+3yZev3ny98SpjlfG5
h/nwmlb1MSp7HPNq0o9zX86i/b2iPMtLZzp+v9bHiNr0fdY9VQ5SWd4MNVAf
/yYGhDV8j0vxqPU1StjN+9PZJ6aZLnproUMDVRxo5uPfSmuLojcq9pTflfoy
SdNknVbX/8vnxnnh/4HG7ONUZeTzq96+4lzL1JXv1RiT4kUnpa9mkXGOq/49
DdrQPT2DNjnx023yY5NTfivCbHUz5R6pxyb3vNXlhSyWgM+KDUXHDP9/8N/N
XeyehwB7wqD2vD0GmtAkGs8bFnf26yfW/6SKMcBisb5I6KKrsz+t/BiVsaKa
9OPclzPP7m5dyXKrY8/V6HVwV7+16eeT4xPWAC2bi6Qe8VqX1R9q55h3xHoa
i64ah8Ci4kbYUjzK8qEGanGgyb7hOxC7Wo3Nj5db5y6ny7AP0ldZT5YXn7yK
31k+FoeInir+FSv5vHr56hkv8w4ylnEp61Ux+fnwkxgHiv18cS+D0je+6jE1
Vp3xP3/v7m2rrTkOPSvDOlKp7vlgz/h5podbiCNcX9mbA48GihbabTs+X56a
QONwbCbNloPnjSrGEIsF5f045cPDmqHWSU36qDY6Rn0588xzSsyHYXGMC/l5
L91s4+ZK65W/fKGQP/Pq0qsuk9aV+sFnO2I8fe9L+b7Vb5R9wudNfSameQ2U
XCPmUc0iXqVJ2j1t63hrc3vFpnN8WB5WZF3UJ2WbcDvPfhZfH4lj8D04le+O
wZtoobyyPbTclFXjcVH9GP793ViD6jlx2Axa9W9pGOYZlDq5VY+nsWqNvPKH
9+/tyTGvqz22GKkP7d6o2FX54VcWd+9zlo9wYZdf4Gymx3p2FhnzKSfbnunH
2D85jlaHurVonWEsqHrDj0NvLa55eDNWkz7URumRNG59OWMmTrmSU8tLLNfv
+uGsl1/6XuvH5+LxoEX8ib17bS+Div1iBifDcYqxRGNUjSNMmqXyfnydJvz8
0k7F25sPLmU59551lL+OHss05XPpGLK8mFX+fN6nY1/ek/PF+sTUjDdW76nv
cysf18TnxC9MXC6SzDMo76seT2PVWpp3/ND6XtL/surxFBmxAp/9+vGesYY9
HGVw50dryxnDkFtEve28fKSi43Nn66atp4kNHZ3B+7c2b1g8RFU1mbBxjwXN
q0kPg8b6dep5bZwtiwWdi/M0nNZvLKiMnKa8mqDdzPvi8Xejg+YxKLxJnKb5
ttt5eeqfBId5DdRiP9fPWywCzOp99jAkmiUMyntpoWKeLK+o/Zl1w7TooWJa
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
SZkG2uYvvldvJF7FoKrBJG2UWE94lPx4uFZxoL6GKOZ7I4mHeN1Pzx7Gzz1T
Mak84zIW4662RkpefdnfvMbI83ZVvZLQb9k2eVY6fpqGXu2NY8l8+sxzEbEh
fjnmYVneY8zPNfH8Nw9tn3llWtZb6+l9W8/pYzN75mO9RcvVxUIGnb/ZMOg0
m3quE18UMijXLjrolQnIW5DfXba2mh/DSfyBZzxy6vHX58UowmriULivl/ym
bsb9W3zJemP+dqZx7uBMjZn7msULPE/jBXj12i6vGCyieAT0Yr9+1WYqo5fB
7ayjr3OTHFdiM2HsYWrJXOvd7sd8jwa6fPwHHbGgK2d/XPl1nGc3N660Ft/8
o46cI3KRYn05J7XfLMzFvczqfLi6wfyOYNBecmGOnrtk/PmjM+vRPvD404vy
6/GtM09RXSa4wdeJ8gzKd7CJ6slh+LI3F08YH8Kgfn4xqPWHdxypHvK8soz1
X9o6nhksig8fdhfjpkyb1i2N+YbZbzRaetIrdgCTdssyNs/jGxanqnwkLOvL
5Hz1ZTn0gWm76ThhuioYFIb+2r/9N62T77+VsSTT/vRP/r1N/y//+U8zO/LO
wdaf/Ic/av3xv/uafeb1q//qX2YcznH+p//kH9t0pmHMxzyeJf/e3/079soz
1L/4yj+3eX744ndsWbbBd0XLVf279HZydS+D8rnqMTVWnYlB6Rkfy60hLhQO
qXqcgzD4ili/Xn2Q+KI5BkX3SLgVRpR+yn/AfnOV4GDFqcK4vXItbCcuRQ/1
2i68x2f+q6ndD0NmsaUJn7Cv0o/LxJnCn2gc/eynar2ibQwrR4b9gnO75ak/
unPZfO43z7/edyxoFfbBsXei/nYsjA9l3qrHOyzz/Rz975U4UOJBy6wDPfLg
669msZ8HcvTPbsyUl48Uaqewp/L31UcTnvR922WzZ45kuUvmo78xZ1wpu7qw
W4fT5zd5HmU+z6DYxQvv2LMuxjHU+mJ52nwOl1c/+nA6pnyk8Pio1r2sbGyo
YgawKnzycCJsJw1a0+BB6zHVZkmM/WK61aFNPvNcwWeW5fN/+6//KWNJ1U6C
MWFSzr24E7ZE/2Q+jifTMa5VpvHclbdc3RiUmqCeQYty+hqbfOMaLmJQ4om6
8dekm2JHy2hoxnBt3QLm4XOvx07rgQ/Fs/uN3YPtlNOETgp3En9JjdSw1w/b
hUnJse6mg7JexTbA973uJ89AirUdZj3N5cvlOPfm1cOmg8KdYtCNM6/VOhbU
YimCmvRon9SkD3PkyU1SrMUkWl6PpLL5SPAfTHBg5r2OPvAHchgyz8r06UQv
FNuYL/fMbk93WMvH2CiWkn2EafidognCHLAYeTrKh5f2mdYLTXlUTMqrNEt0
TN6fuvBexu4sK76KxSZK94Q51WuKMePrjzGo8pGe/eqWcaZ6yof3xbIMynJi
c3ThztjY4caBcp7gvk/aca1ie7jUzkXbxPJ+OnHFaKWqg8V6yNH67d/6BzYN
7Zhp3PPhSfjx7UMHW9/+n9803RVN1TMl75mP6yZvuboxKL53z6DY48eNP35a
7XFy3RPvTl78rYRRwu8VE/r5k9uVj7Uqg63K6oF2zBKWV65SL7557q1wInnh
0izhxWHUKWI8rFe9fmA0tgWjqdeP9FJYWv3QeSWuFt3Txzawv6oXhal+FPwK
I2n9igEwu5rWRyJOYNj1mFg32yCXixruFqeV/JdwvDkGGOMkH4m4T++Hxy+P
nljX5zDiKUJ/OzGgeTnydd2PQVgsH8ly2l95pbBGAX5z6n6ifSr2M6aBkoNU
pr59ngb6f4JaorEeSTAODNoRB9rmGDQvxZ+rZxLXNTyKLwIeIcfd1qc+8Fsp
v4o/8ZdrDPjLfR9MHyMaxi6wHHn36tej+k9i0ZgWagy6sdTRT0k+eG2jlxx5
zqnq9Vst9hHFhnJs5F8XgzINPoQBmS7779/482w6XIjxHo2dfeYz60IbRa9M
46ROZQzJNBiW9Rw5PGPPRjBsyKDMB2/mLVf1bzI0cpBCBqV+RNXjaqwaE4N+
9uvHUQZVHGU//ewmxXrxSctgL++bh79iMXg+9hQmk+6BPjnIuNKyxnjgMfGm
4jT1P0htFPaJcaLDoPnCduiq+PthWD5rOobeGuZL+bwp5h1Fzyn1YPK1Bdg+
x5r9YZywZkcsaMKk1Aqt+jrMu85i/nZy4aehL2doMQZNGWk+9x5G3vsbJ+da
r51aya3lqfdl/ivJW4/Fgcr0DAAXql+9dEsZuia+Zl2rqnkBf3Ldms42977N
x3v0QN8/ifmlxdErRxoqvISO6Z9D6Kek3kjqX4xOiQbq53v+7E7Wez6NF1i2
fYB32J7FoSbrEsMSZypfPPMX9ZcnRx4e7eVcw9OqF2DHYH34HErOEGwHD/Je
077/3f9hBk9y3DDeo0Myr/V8T44/+jW6KLGsvMKL2G/9w79vPApjMj8syWeW
F1P673QMWC/rKVqu6t9kaNRiChm06dk5vfbY6oGstT5P7j+baxc6vkf/TOvz
TK7/rpuJQXvlQesTOLfrU/e+eXzQfBfm4MNCsF8/veyHYYxTPdH5D4QzYTXG
iV4KvzF+jP/G0K8v1oNF0etUN0qxp/B3Xr7+MM6jabEJ65OTxr5wTsTMqguK
793HguKbx0df9bmIGflyMX97Xo78pPXlDE29dDyDpvGIneyNnolO9NLLL+7J
e/f6p+fPbj541sc8sfhRb9JR4QPli2Ncl/KDi6Vl7I/n65BZ0QHhUebx/nu4
kvVK35TBTYo/JBb0y+d/azqq4kU/zqlxod7zfO9zoeBc+eM1Jmmu6m9exKC9
5MZ7Y79hfnHosPVQOBK2gyHFldI00Tw1LTYde/NHL7T+8A++arGbWgcGP8Kw
5DUR88u+cTzYFtqp4jt5z/x85jrCr886WU6xJuFyVf8mQ8PvHjJoExM6vQaD
0vPy6eef5fYHpr4cz+pVj7UqQ2vC99yvJom/1/vmpS/qfwL+oWciXIYGWQf2
zDN0UlhO/muM/dtcu2g8abn2J2aS++j7xkfwnbjUapiOuPZnnpnWk+yL4gXg
YHoghbGg5CbBpeQqVT3mjnOR8CT93kPWxN8e68s5ij4Kgz5Hihnx15yuNcWQ
yHwdX19jHQY6G9SiMr/7X75gcaJ5ee9lY0AZJzGe+OmL2DP0w6tmj+9rpF6K
HRpoOw9HOUN5jMQ9XOugRr/3qyifKaxRKZ8//CpdMy/egP6hvtanN/4nwlhU
dFPrFZCM/fyxN6P82Wu/pNA4HuJQi49NWHxYLKqcIm/ko4fTsJdf+l7HNJiU
6w5mDH35ymuXXg8/wqbysWPy7TMfHCuN9fd+93dsnzmO4XJV/45De54Yv6sm
JrQxjP9hGPTZF09zGRTNqGxeEropetLy4iWrOYl++riP3sCTZvLNK9ZScZZF
NZ8mwaj3pFqsiknIm5f6AxyPqnqYU3sJv7b3w8OgcGkdnwtiNen5PE59OdVz
l+cY31+B9+wfvxGe0aS9S3dHW/e900OTloRPGQ2UfHE+cx5/du5a6/WZmSw+
1PvN83Lg88YPUxb53fPykahNJK6B2XjGlyZKHXa/L/ix4dW8/kh7eHIu5W38
5LBrWltvvu2HWTcmZNtZfOj6edMwfd3RovpV1LZnjGEdKcWcmp7brgsFWynX
SbX1F2ePDow9vVm9zvbzh3KVOKbsEzEL/fjpN68cbl1+/wcdOqi0S5ny+nuZ
7muEktMk3RQL4z1jn3lGIC5DurmM/RSH1pE/ZfxmmpjQxjD+AzbWViy2PY9B
7929USomFP48e+Z01l8J4z3TpjmnSca9Af2GOkvcp6vkrVEZ/3/sp/LS13Jq
JqsnE/OOoi9TzKhLH6tNT55S1ccxdrxirIkuWse+nDyDce2HNWw/Wls2xoQt
8+KFFavrY4+5Z3Etwak83yjPDc5Bc9O9LO2lPm98xGcYkJqf/hr0+etl+3Ca
D7uE3z0vFlQ1fWTKX4cflWfU0SNjY7VdGzTOTDCI6sB7NoRhYTLWe3n+aJan
hOHX53hZD82d7n2RyF9SbEOohbIO1ZOGheA/5g1jChQDMOhrjHwpGB0W9Tqy
4mN5LulFH71+8setX3z/z0baF7SXXp3Mx9hCE4fqOq1j78+wRmgTEzq9Zjkx
ye+ziEEVE/rRWn5MqMU+JveekFXRQLvVhJ9GE3NN8nHx+wh/oP1yrcViEpX7
VlVPLn4H+NzJPQpr069dOFT5sQwNX0OMNevYlxP9FT589sXnHVzFNQFjwpZc
J8ynGgzwKn531SxAL2U/WB/nK+QYvif2mvURi8g0mAReUr0G8t59rGMsf13x
oHm6zCef3m29ey3OmPjjYVOWhW15L8ZVzJvXQDN9Lblnoi16Lc9bNx88pn5E
oUYJg6KtWi6T6mluL1lNIO+HxwcvPS6PEdHfyIuHNRmz9FTWZz2F52fNJ4/f
XXFG2geeM/L+YwZpjH9jJc0x53ryY0DzLVtTFB0UBl2f/cnIGJRnk7J9qZgv
xqCeRevafz5Wn4nfTtXjamz0Ztpcm0GLapfgV8di38Go0jxjNSK1bB39mVVZ
L30wx9WUyyUNDAYhDyjmE0bPImepqmskVpt+a+4Nm3Z3/WzlxzI06kvFWDPW
l5PY3CrHCi+i/XPu0Sw9Y3LPgTHL9LDyprw+GFXaKuvmPoYWCksxn/wxvD+b
sCh1cfw65Ec/EHCkj9v0xvSiuE+27dfPK8wqHuVzGI9JDjVsF9ZiYn/gR9Wv
lw881nMc076GPnJYjFgrdMpQB1R9I7jM17r3PaZCw5/PWEKW1rjC/WC7ytGv
4vd9/+6yHQP1V4KFicMN87pi9jdvfGPEDJoexzL7xfiL+LPO/7c8o4UMipEz
X/XYGhutcZ2utWONihhUtepDn7r6eRb56tVrCYNF+byTPIPz31T1/ldlcBl+
+DrG6A3KVLueawTO4N6fVweU/KW8Z5xR2DjVpkcrvnDozztYEw20rn05lV/U
T78G1QrzxrXFteRrSvgcP/mUYSViJFkXuSA+Xx4mDPPg4UvPkd743yzyvbMs
vFlmvzy/MU60RB8H6nVPmMJqcZ46bvuDf5t7tWco9ehUjyVvXuv0rGM9fVxv
JOXEY0VaXCyvSeyE/ozPW7n4pjnu9N9vfpDGcwlj4jkF/3yvvT739pza1S19
vYG93/f+nd6X6YeSx5+cxzrzp8bP7yVk0KZ3/PQZ18Lq8kJHLmlo8qmHNZpY
tkysKN/jy4czfG3zRh+dXCO2k/8iO/8Jc5NfAjPEcuOlg1Y1VmI+5362tzb9
4tG/MG2x6uMYGscprMcEa05SX07FTlPT1dcaCmNF4VCuMbiUegzK4WEd+Imp
TW+5GtsfWQ0mrR/dMYz9LGJI8WqRiV8ZOxynfPywb6g3+Ulj9ehjHGQ1mObO
ZDn06u2Jz5lpqgUq434trRP+RnPVurRN9UYSf/K+KC9JPeJDbvJ96IkbHea1
0S2mVPPEpotDyekp65enlhXHnv9IfwzhWpjbaqSuLtg8qhsq5iX2I+87XolZ
Vo9P4iNOH5vJ6jkpr0hxD1zH5NdxXRHvwHLSQ3llnaxPOUksU9fa3jF/fFOj
afqsLINixPr4/CKu7X5jGmFaaavkcFZ9HBobrKFxh7EGV7P6hp3XGXlIVfWE
ZZvjUpseLZFxxWrSx+qEVpXftZ/rBt86TCWNk1fFiXo/Prn03ofPdLuPtWtQ
8V8Ng8J5+OGpAUo/JPhTMZqeQ2P8ybrzem7K5GeXfgrTwYfUxPTv4YEYF6Ed
+phF3nfLnYE30EK9n55thBqo6tozNuVlic+I3xfvej98Nwbl+KnXZ9gTiWnD
jD9k7J59QxbVvtk820vR/fBxD8ShFeV5edak95HVTmrXVIInqQdPjXjOBbWV
iPUQZ8KTfMcY+I5aSnCl1sd3/IdSTx6NnnOlWk/UCvW94am1xLqp6YTRZ141
oWBRq2/Q7iHK92JQ6jOpRkTd7JNPdxp/fGNmK4vzpRhUzKlcd73fDzew/JUr
l2zdTe785Jj6m/pYA7iBejqxmNB++wAMwvC1x2rTM21z8Vjlx9Ib/1MfHvz9
PaxJLdC8OqHj4mNAJ5ePndwZ369hfaWcr0QMql7x1Oym/ifvj567lNVZCmsp
HcjJf/esWrbmp11P7do7+gyHSrfk1fJO7q5k8QJlNdA8gz3UMzPPD891448h
91vrj0cNe3z+Ca+VZVCMsaOHUqsJzRNjGow/zOvEa5A+lkFjkh6rnH3lSoX5
/sQHqMdSGZ88zAjfiSNTxl3NasHD+erXrjHAfnzPsVRtUDROGBVNWt9RZ179
3vleNe5973deeWawPvXJuVMtJliVvk3sJ0wKy6o2PaY+9FX/vvPs54tNfnxj
5RkUQ7+EGVkGztivzr98dS5j2Vg+U2PjaarJ5KfJH08udFgvne+qyou/s3oi
zT2qeW16i2/M6X80rn050T2pm3tr88YeHZAcpl77NYQMCn+qd4zvgxTTMcN1
wZ9l6n7GlpXBKpY3nvCBNDvVgE9jORfsnutjDeCmMrkyXg9VbXjvh8dny3Zi
faMw/LWqyQTDKg/JGG97qZa51NI4xWjsO9wt5rd6V22WFn8S14pJO/X9R2FP
aaFFx5xl+R62gxfxq7N9tEm4j2nqmSmdE87k+5QPV40FYVJYknnQNNEyGTvL
oafyna9bL47EmIdzxRi4NsWg6hXP+eU79s1en963a62uvZJksdwkYlqe12Bs
jY3OqCdflkEHbTAt+UmwR6ODToapJlOMgcQJYa166jVV9RwSq02PDx4GrZOO
SL3/sP8RmigMGnIpuug49OWEP7P6l+ur9rnfng3eF8//NH54eJT/ed7H6tDz
fxee42793v168vKXMJhBfdrhCsYkniH+iFikUAOFJfLy3kP2VAyocpG0PYx9
Zho8H6u7t9Su16tYUK+dwnJ1uu4VXyumZz8x9A/1bPJ188XTqvkuTZTpqiWl
+ErVpi2qe6U+Rvji4Ua0SvEfnIkvHZ6FRcWQvOIThw/5TuzJMpw3+e15j7aK
nul70CsvCX5k3OoPqh7zLANfwrisVz1BmZ/vecZQ76U6M2heblLjj58uW273
sKmCQRubPJOmGcvHxh+PDhr648WtVcQvUoc+rE3PZ6ZXfSy9RWt/znw72pdz
HHofcP7RP798/tzqR+03DsProMpH4v9bcaExBg198N1qL/neSb6fpZjGr4tp
6h8EV8B7+FzT+vQLlg/ja6mTF6+8d2/onBj7hSknSTGg8JjfJj5b+f1Vmz6s
eRLWBfWGVlj1teHNOLKt63rG5vizn/A8r+w3x8PHEmQaKPVQd9L+ULC/uF06
cVFuElwIZ8KI9GbHYLv33z1onMkrPnB40OccwYiwoDhV+ifziUX5rPhPTMvz
CkNy7R45PGPsy3ro/ykd/dHNRXtlPtgUBsbQXJnGNll/nRnUrsVIblKTHz9d
1jBoY4M01WSK1qLfWclq6oT58WkfhNH+/xXVpqd/fNXHUgbPk/vuWZM6TOPU
lzN27PG5Y4MYr9dBxZ1wCoxAb6SQI9E6ffxit9pLef53eAemwWAOTWfbmGpE
YeQQyZ8s/rFa/QknKr/I8vwX5nfrvbfrfirPPu1TNJv53qUR+n6f8zfOG19f
UR5gWw9mXHCYauErH0nrKVsffWTXyONbGRuL53kvv7zVPGjroDq+sfgwxYSy
fzC2jhXMKv25KBYUnREdkvwf9FDpmuJMWI/pihPgMzzIGJkOExpftmNIFacJ
W8K0rJt1qU+A8pNgb1gSPdXGwDNMwtOqw8S+ookyv/z2rA9eZfv8DrxPv448
+uCXTX78tNvildmGQRsbiFEjQT038+ZRfjx1d/z0PP/9MC1Wm175SNfnjlps
wK3NJWNA9N2qfJTUYwprf1KPPtYrCaar+jooa+pfNIh1eQb1+UjwAPGgBwI/
uu+DxPsyvTbD+qEwpthQ+mNYiwlWkb4p33nYkxMNlGmprrdS2nwNe5a/cOPG
nv1SDVDFPXJs4Br1/qR+e5ZHXkMffJpfvrRr7T5C2Xey5Dvxfmxd0kOln8Ju
iqPVscnrKS9N0zTUhDfRHGFWxYhaDOh2mjevvKUsbrTNiMzL9uFf9E54UvlI
qt8EN7I8jIqxDeUjsS7FgvrfDRpp6G/nOlDO/O/97u/Y9jH01zoyKBbLTWr8
8dNjDYM2tl/jfrjUzi/L6wkv86zg54NbR82gRbXpTx4/sqeWrYwxjlJnhH1j
tT9jGii166vqd1q1+evK5yMdPvxeRx0mr2WW5U+W8fWb1JtSPm8+y88Lj0qr
kz7HZxhCvTN9P3MxalkGVW921Qg9d/W68bGPD5BxX1cOuDRXxuA1W+1PX9dn
ckzy+krtxzh2MSbkPiN/tLiReaVxwnNhzSbF2Poe98zna1etXYvHhErblLGc
/4y+yfr1GR7l1U/zuUbh+tLvFrJ1cw5D7TJPxyya1m3ZOtn17U4tlJ7yVY+r
sdFYw6CN7ddU37NMThF1HVVf3Oef+Jr2ozJ88PiuvR+eOqEwH75i4glSP96W
saB0XvUgHcUY6SFFjGdY+zPWK6nqvpxVmhgUfQs/PH5Ipr915FgHT966nzIT
r2X97yGjoU353kRwEfwg37B0TxjRsyGxmT4OFD85PZDEoHBsN+1TvudfLHy4
Z/xhnKrM/LvUXW33Rx1kvR747cCF3V6kgzTjUDjvwYeZed3XWHrxRNqH68Fq
FoOLofGyDq+ZegYVJ6KBUjOubL36YVqZHkmTaJ9/thPNTXr8uNFCp8HEoLHa
4Y011s1gMfgRViozf5qLsm65ScvuuYeeWaPOpYE/6YfkGZR+SfRNylsGHmWs
o2BQthWr/UmNJpizjn05qzIxKLF1MCi8wf95jEGl3ZXhz1gNUNYNB6GDhowo
DlWMaMh7itHEqIWq/HYxaNjryLOn4j15vX59OcrKsVqnwza05KIaAb2a9GId
QzHn7PwZi3U9dznt/w47iqmtLmi7NoDywHztUObZk/9P7aa7K9n5qAuD1rme
5zCNuqBNbtJ0WsOgjfVryoEnXrEsk1kfxnZOxJnTu7rdqHvGw8L43Nc+2JuP
hG8eH33VxxbD7x+r/TlJfTkHZWJQYuTwv8MxsAd++TAfHlYrk/+u3CVtg3Wi
U0rfDDVL5cuInz4O4iLQ5nxPJOZjjMrtFmMynXXBo3pP/ox87xgabjhWHws6
rgY/SkNGa1ZPKFiR/RavoyXfv3fH5pePe5cvVzMfPevkGOOnV70m9FI+o50S
dyk9umoGxepWl2BURvxnk5s0nbZ4+XzDoI31ZWkM3GJP/iNqj3/6ywcddULR
QEfJoHfXzxqDbs29kfHn7YsHbdqDm6MbR9GxjcV8oouGfTk33v5a6/0j71U+
5ipNuW7EgcIqTMN3S92ckEF7MXEd50N+YPz9eT5zuFE+9XCMqsvp64HqO7Gt
zGuAnk9Vj4hl1PcJ7RMbdp8ieI8xE+cwDJ+x9GN4m+Oh2qriR9iRz6otZblc
p4/Y+YBXeba1+qBW/2qXQbPY0na8Jq+eQYmRNf00Jy+pm3YpS6ct7Jm29/uF
3Hn8+qr+LVVlTW7SdFpRH+/GGhu0Lbv/YV8ndNQMujE/Y5pnrDY9saBVHydi
a2N57zHfPLVMj75fz77QozLVOlKeOtPwt774g+/3zZ8+xpE8IxjQ16kMje8U
Ixobo/fDk6+Oxue/R6+jLpOvNSTu5D3foa2K/2Kxn8MyWA//P/ojY4f14b5B
rZ/92uXP1cynrvqgOsY8V4hBiYVQ3VVxOp/FdTpOsGYYD8p7tFPVDiA3qahW
fR5/wrQcG1+fHr8+42a6jGlskxwm5vHfwcE+j4n5OL5Mp+cR+0BOkeqOYRZX
3M5fYn5N96Zlx8XQ9kMGhUurHldjw7WGQRsbpYlByUvi3o8uyvRRM+iVYy91
1KZXvfqqjxH1oKI16Q99q8M3vzPz+63543/devfdd6cynwEjbhYNDD6C09QL
dnN7pfWSq0/fi/k8JHLIu+ULwUmqGx87DxaDkjCbGJT3eQyJ3gdLwb2q8VPl
8VWNU6/h2j6srRorDeK6E0uqL5I4seM4b6WxsapvarlICbcV1QeN5cVjqtmU
ra/HmFC0VOp3ql6T6uHzmfPGKzVAMdVLgnlhXWqE6jvqL6leE+tTDyaW4T18
zNhZHzWWZKohSv1Q1vOHf/BVq8PE+zrXYioydP2QQ5VD2NhkWsOgjY3SpFc9
fLBjr8pLgj/L5jXt1/ifQwMlBz6sTU/vziqPD3lF8OTi2/+xI+Yz1pfz3rE/
s7FPK39i1FcgzhKdDgZVzyIY9I2Tc6VjP5kP9uR/ULFoaJOqHd+tVpLFKeZw
pfXpadfm9H3ti4x1ocXK146NUvv0Y+fYhgyq2lKqg9WrqaYSr6nOO5v53POO
Ndqx77Gp6YqT9esMc5LUb8n6dibvYUi4UTGhMG0vGqjqdsKKcCAap/p20gOe
Pkrou2wHTmY+pqs/Et+xjPrNMx2OZKyqpwSLUlPU996UwZnq0Yn53kjjyJ9Y
rIc8v8Vpvr9NujUM2tgojf5Iz7743GozKSaU+8s5q7Uymvqgn/6/pdza9HdW
T1R2bPC/w59ooGHeO0wa9uXc+ek/a90/979bj25fqPy8Vn5NPXtqWhgMKk6j
Zvtrp1YyXzz/ZTBmzN69tjdmVLnwrEv9iaK6XMIy0knz9ErWwbMX3BSLBY0Z
ufsxdmaauFTzeUblO2+DyFNi31XrPmawH5zXyzrTmkkLGdPBlrCuvosdawwf
tOI3fa971WqC93ZZcSFbX7htXo1LP15uzZ45ktWWLcug6gkP8xFzDP8xTb05
4UOmpzVDl7JeSHCr+sWr1ii9vNQDHg72eUnsL0wrvsS/zvWEr12185kP5mQ+
+QDG1Tg3MS2UvPmqx9bYcKxh0MZGafje+S9Wz070UKaRX48PutvyyoOiHhRx
m/08H8OZ8KavTQ+PMo3eSVUcF2rLiz/RNmMaaOibv/TOt6y2wKhr+9fNlBPv
85EwNNAfnVnvGg/Kf57/DI/6/B7pdMpZ935h9Uq6lBNHwrKHT7xpnAEni9tg
DRhROfoHghpQ8GQ33ZZts3y3+fZTrwlmkq86z6hv2uvvsKPXkcshwvfsj7Fq
yrO/WR77wqxpkXyn3gCWx9TOOYL7YDltR32KpI9KL1VeEnouzxP4ystooPjt
4UYYEi1SvnT6JVGbAR863/OKxgmvKk5UvOnngR2Zj/30saywNetGH1UPJeaD
Y+FT6Z28Mn0S9MJYzXpsEuo+NNZpDYM2NkrD1wx3YrCT/R9fOG0MWtTjh9wl
+snDnrH+RbJYn/rQ8Lfjdw/zkfDPV3kPp0c9uiYxnp410T9j+Un0cuIYst+T
8N/Tj6lHV5iPhFEnFAYVi4Us6nVC+E/aYczfzTTVR0Jr9XWYYNM8DRSN9NSF
91qnj83s4TbG6Rk43C6fi7gSTi4zn/a7Hx8+jMMxLeJP2M0f87IW64MU9jhV
npfYlGOsWB7zm2+n8Q3EAnNeYvGe6LN+G0wT40qHhTvx77Mvi7NHS2mgsCC9
MMWFMCXjVN93eFA9k9Av1WOeaXxnNUy3d/susayWUZ1Q+dvRU8WXTINxYVrv
b+c6Yxzj6oMPf9MxLZRnNfrLVz2+xgZrDYM2Nkp7dP9D00DRQtHwuPY21laM
o3wPTFgSJg25k9wldFBYFt8175lnY+2qvZZhMeUeeQblM9OrOi7sO/x57/S3
OmI+yYWP9eVk/zlGo+zbVDfTMw2+4ndm3s7iLPFRv/zS93LzjYr6S8ItMd+y
r/1pPXo28usw+WVgkFhdJo0FEw+rj2g3thQ7h3qpehZRMx7ulH++l2PKvqMp
58WAev6Eh/rhW+Wqe7+5NErMx4TyXnnzqq+KpihOVS0Bv4zYlWnGe21t1Meb
qlYT32ds2yUvifhNYj/xe7N9GYzINsk1Yl3woM+Vh03x+bN+/13o28eXLyaV
/55nAc+XvDLd+90Z07jmIcXsk0/j+UlwaFOvabKsYdDGRmmwFjWZiAnlmoNH
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

           "], {{0, 388}, {673, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> "Mercator", 
               "PlotRange" -> {{-72.41449755000002, -72.29894144999997}, {
                48.57215383781384, 48.638691570676194`}}, 
               "LonLatBox" -> {{-72.41449755000002, -72.29894144999997}, {
                43.62132686249999, 43.66947523750002}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {673, 388}, PlotRange -> {{0, 673}, {0, 388}}], 
        TraditionalForm]], 
      PolygonBox[{{-72.41449755000002, 
       48.57215383781384}, {-72.41449755000002, 
       48.638691570676194`}, {-72.29894144999997, 
       48.638691570676194`}, {-72.29894144999997, 
       48.57215383781384}, {-72.41449755000002, 48.57215383781384}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-72.32205266999998, 
         48.58546138438631}, {-72.29894144999997, 
         48.58546138438631}, {-72.29894144999997, 
         48.57215383781384}, {-72.32205266999998, 
         48.57215383781384}, {-72.32205266999998, 48.58546138438631}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     StyleBox[{InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-72.304194, 48.57876280030333}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0, 1, 0], PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-72.409245, 48.61713695214857}, {
        Center, Bottom}, Offset[24]]},
      GeoRangePadding -> None], 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["City", {"Hartford", "Vermont", "UnitedStates"}], 
        GeoRangePadding -> None, 
        GeoMarker[
         Entity["Airport", "KLEB"]], 
        GeoMarker[{43.653882, -72.409245}, "Color" -> RGBColor[0, 1, 0]]}]], 
    "BasicGeoRange" -> {{43.626111, 
     43.6646911}, {-72.40924500000001, -72.30419399999998}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> 
      GeoPosition[{43.645401050000004`, -72.3567195}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-72.41449755000002, -72.29894144999997}, {
       48.57215383781384, 48.638691570676194`}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{43.62132686249999, 
       43.669475237500016`}, {-72.41449755000002, -72.29894144999997}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 13, 
      MetaInformation -> {
       "LonLatBox" -> {{-72.41449755000002, -72.29894144999997}, {
         43.62132686249999, 43.66947523750002}}, 
        "PlotRange" -> {{-72.41449755000002, -72.29894144999997}, {
         48.57215383781384, 48.638691570676194`}}, "Projection" -> "Mercator",
         "Software" -> "Created with the Wolfram Language: www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-72.41449755000002, -72.29894144999997}, {48.57215383781384, 
   48.638691570676194`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.770585103795419*^9, 3.7705858706472206`*^9, 
  3.7707185195803857`*^9, 3.77072327342024*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0abd3827-9eb3-4d6e-8e54-62678c2e0a61"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.770584946279687*^9, 3.770584951433871*^9}, 
   3.770585113394737*^9},ExpressionUUID->"2cf66dd9-fbe7-4911-8b4e-\
0cd0427bdae6"],

Cell["\<\
Based on a review of the manufacturer\[CloseCurlyQuote]s Owner\
\[CloseCurlyQuote]s Manuals the capacity of the hot tub is 1,500 Liters.  \
Based on observations of the hot tub has both a constant electrical load, and \
intermittent loads.  The constant load consists of a circulation pump, \
sensors and operational control panel.  The primary intermittent load is an \
electric resistance heating element that operates when necessary to maintain \
the hot tub temperature.\
\>", "Text",
 CellChangeTimes->{{3.7705852751866856`*^9, 3.7705853108373785`*^9}, {
  3.7706290722687593`*^9, 3.77062918604694*^9}, {3.770629237899843*^9, 
  3.770629407734824*^9}},ExpressionUUID->"83758329-0e80-46d4-bf21-\
438e8630be49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hottubvolume", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1500", ",", "\"\<Liters\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770585327849886*^9, 3.770585373032051*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a4a6260a-aae9-4dae-8e3e-7e34c2cff28b"],

Cell[BoxData[
 TemplateBox[{"1500","\"L\"","liters","\"Liters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.770585374235817*^9, 3.7707185270763097`*^9, 
  3.770723276640401*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e073d28e-7602-4c27-b8c1-754bf2bf4932"]
}, Open  ]],

Cell["\<\
In addition to the hot tub, our home has two additional very large loads that \
complicate the analysis.  One of those loads is a Nissan Leaf which we don\
\[CloseCurlyQuote]t charge daily.  On those days that it is charged it is \
common for it to consume between 10 to 20 kWh over the course of many hours.  \
The other very large load is a sauna, which is used infrequently, and only \
for an hour or two at a time.  To arrive at an accurate estimate of the hot \
tub\[CloseCurlyQuote]s energy consumption it may be necessary to eliminate \
days from consideration during which the electric car or sauna used a \
significant amount of energy.\
\>", "Text",
 CellChangeTimes->{{3.7705859874518194`*^9, 3.770586044588022*^9}, {
  3.7705860827021203`*^9, 3.770586086989624*^9}, {3.7705864030166006`*^9, 
  3.7705866438764553`*^9}, {3.770587362935728*^9, 
  3.770587412836278*^9}},ExpressionUUID->"913a1490-e68b-4512-8b67-\
638fcd7a022f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental Conditions", "Section",
 CellChangeTimes->{{3.7705422069728823`*^9, 
  3.770542211156494*^9}},ExpressionUUID->"d0e6a292-803f-4af8-a691-\
ab356f3ab3b9"],

Cell["\<\
The hot tub was filled and operating through the winter of 2018 to 2019.  The \
hot tub was drained, and its breaker opened to prevent electricity \
consumption on April 14, 2019.  It remained empty and unpowered until it was \
refilled on May 11, 2019.  \
\>", "Text",
 CellChangeTimes->{{3.770542593829939*^9, 3.7705427443119154`*^9}, {
  3.7705431219586*^9, 3.7705431332586937`*^9}, {3.7705490865016046`*^9, 
  3.7705490951398883`*^9}},ExpressionUUID->"aec81e7b-be19-4b72-9619-\
f480636b9a28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hottubOn1", "=", 
   RowBox[{"DayRange", "[", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "14"}], "}"}], "]"}], ",", " ", 
     "\"\<Day\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hottubOff", "=", 
   RowBox[{"DayRange", "[", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "15"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "10"}], "}"}], "]"}], ",", " ", 
     "\"\<Day\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hottubRefill", "=", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2019", ",", "5", ",", "11"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hottubOn2", "=", 
   RowBox[{"DayRange", "[", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "12"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "6", ",", "1"}], "}"}], "]"}], ",", 
     "\"\<Day\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7706648705806885`*^9, 3.7706649033602076`*^9}, {
  3.7706649478640513`*^9, 3.7706650160167446`*^9}, {3.770665293167028*^9, 
  3.770665393513672*^9}, {3.770665506351095*^9, 3.770665735058039*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9c590e90-b7bc-4abc-950e-c61de530177d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Wrangling", "Section",
 CellChangeTimes->{{3.770629426903947*^9, 
  3.770629430622498*^9}},ExpressionUUID->"2b959902-3389-451a-b56b-\
f832d9dbb45b"],

Cell[CellGroupData[{

Cell["Usage Data", "Subsection",
 CellChangeTimes->{{3.770643659676965*^9, 
  3.7706436613681026`*^9}},ExpressionUUID->"689699ba-c82c-4291-90db-\
70f685f3bf55"],

Cell[CellGroupData[{

Cell["\<\
To analyze the data it is helpful to transform the original data format to a \
TimeSeries.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.770663441165232*^9, 3.7706635215169153`*^9}, 
   3.7706660338656816`*^9},ExpressionUUID->"84c25653-c90f-4e2c-a194-\
33ff45a27d06"],

Cell[BoxData[
 RowBox[{"usageTS", "=", 
  RowBox[{"TimeSeries", " ", "@", " ", 
   RowBox[{"Map", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", "\"\<IntervalStart\>\"", "]"}], ",", " ", 
        RowBox[{"#", "[", "\"\<Quantity\>\"", "]"}]}], "}"}], " ", "&"}], ",",
      "\n", "\t", 
     RowBox[{"Normal", "[", "usage", "]"}]}], "\n", "]"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.770629688852648*^9, 3.7706296931708655`*^9}, {
   3.7706298737751527`*^9, 3.77062995478765*^9}, 3.7706660338690653`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"fa03f0b1-c0c1-4942-b81b-17a86ea66b88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJw10X1MzHEcB/CT3ynX0xySpZJEWY3JUzf6+J7G1NCT9aBW3STiXHm4cpe6
MyIPKcxDnm7rFsqSPF1XrocTF7rcxaJLLqXofj24pmSrfLJ5b5+99/r383bj
CUITLRgMxnK8yT5wmxlcO2EiV9cEnEuqVUFRPPfDTAZNfP9FDQFDgiA+WpK/
I6DL/AwKSF9zDbpDNKt0U0crnB8bULCn0CS1RNdwOe8Z9J/uzN2L3tOeevrX
1h/AfL8oTYVW//KMOV9XD9n90cGOFjTxYvslq2VVUCSclZ2CThqNZHqPdkGm
0llbh2YIpFTLNRXUNM2xnDeVJkd1fNNBNzVUyhJCBeiP/ZKkxbsMEP5l2Z8a
tDxlHaulsAYiBgYvzKVociOaHD95RwszKxn++9C7H/UObU9/An6RU1rr0QXX
JlMBY7yTemcmTbSOVzQ5Lx6DyCv2swAd1EutYDs8hYRa908a9GG+70aRuRwY
szk9TtNoEkfJdjI5KmBxSPdhtIt0qvXe2Uoof9tItGj9hHuq2F8JbKfiB/Mt
aZKz64yO2a2Hz5w0OxE6ovAidTPFCPEOl7Ia0etNljxeTytI41ZtcbWiyVOt
/m6OrBpsRA3W6ehXFtctkp8bITj4fttrdFZLw/alC9/B+EjWrYXTaZK7JGFG
oLwbAm0/VWWgYx9W06eWfoBt7dI+LVp4VRnDTSwDlcTJ3pNFE9bmsEDfrV/h
Wzu1QYyeT352FkX2Qknxwea36N91O4vdfcvAsKk53MOaJgqXE6YQRSmoZce+
p6EL8yX2ptUGcHizgK+z/v/Pe+D2kE152OAeVC+HbaWA19SpESHaM/NsBRVV
Bu1e/YYmtNlVP2D3UgPFLLl+gS1NxkoSh+UH6sFYFajMQFcduujYpjHC4zbh
+Ht09IjPeLW3GojCHL7YjiaDa31yC0vLYE1i3A0Jmm/b0TMtxAg9jU7DzWhK
7BfFNWhgpTz2voc9Tb6KtVlF3JfQF5QXlomWKvePWO3WQuwDtq0ObZNi9mq5
2QVH3igjxtH3OOERIQVm+Asw1oJy
                   "]], 
                  
                  LineBox[{{3.7666299854828157`*^9, 1.1626752291955802`}, {
                   3.766752755953942*^9, 0.07839948824246724}, {
                   3.76692089421544*^9, 0.35467420704099867`}, {
                   3.7671032480025015`*^9, 0.11}, {3.767273460281228*^9, 
                   0.10599687524371677`}, {3.767457888085518*^9, 
                   0.1524066513909234}, {3.767638960059439*^9, 
                   0.6497764569070604}, {3.7678078905250254`*^9, 
                   0.4388305527369181}, {3.767991036516175*^9, 
                   0.1775655883471171}, {3.7681620409989896`*^9, 
                   1.1527991916656495`}, {3.7683350998242865`*^9, 
                   0.17000195237265694`}}]}, 
                 Annotation[#, "Charting`Private`Tag$6556#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768335100}, {0., 
                1.1626752291955802`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11516", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJw10X1MzHEcB/CT3ynX0xySpZJEWY3JUzf6+J7G1NCT9aBW3STiXHm4cpe6
MyIPKcxDnm7rFsqSPF1XrocTF7rcxaJLLqXofj24pmSrfLJ5b5+99/r383bj
CUITLRgMxnK8yT5wmxlcO2EiV9cEnEuqVUFRPPfDTAZNfP9FDQFDgiA+WpK/
I6DL/AwKSF9zDbpDNKt0U0crnB8bULCn0CS1RNdwOe8Z9J/uzN2L3tOeevrX
1h/AfL8oTYVW//KMOV9XD9n90cGOFjTxYvslq2VVUCSclZ2CThqNZHqPdkGm
0llbh2YIpFTLNRXUNM2xnDeVJkd1fNNBNzVUyhJCBeiP/ZKkxbsMEP5l2Z8a
tDxlHaulsAYiBgYvzKVociOaHD95RwszKxn++9C7H/UObU9/An6RU1rr0QXX
JlMBY7yTemcmTbSOVzQ5Lx6DyCv2swAd1EutYDs8hYRa908a9GG+70aRuRwY
szk9TtNoEkfJdjI5KmBxSPdhtIt0qvXe2Uoof9tItGj9hHuq2F8JbKfiB/Mt
aZKz64yO2a2Hz5w0OxE6ovAidTPFCPEOl7Ia0etNljxeTytI41ZtcbWiyVOt
/m6OrBpsRA3W6ehXFtctkp8bITj4fttrdFZLw/alC9/B+EjWrYXTaZK7JGFG
oLwbAm0/VWWgYx9W06eWfoBt7dI+LVp4VRnDTSwDlcTJ3pNFE9bmsEDfrV/h
Wzu1QYyeT352FkX2Qknxwea36N91O4vdfcvAsKk53MOaJgqXE6YQRSmoZce+
p6EL8yX2ptUGcHizgK+z/v/Pe+D2kE152OAeVC+HbaWA19SpESHaM/NsBRVV
Bu1e/YYmtNlVP2D3UgPFLLl+gS1NxkoSh+UH6sFYFajMQFcduujYpjHC4zbh
+Ht09IjPeLW3GojCHL7YjiaDa31yC0vLYE1i3A0Jmm/b0TMtxAg9jU7DzWhK
7BfFNWhgpTz2voc9Tb6KtVlF3JfQF5QXlomWKvePWO3WQuwDtq0ObZNi9mq5
2QVH3igjxtH3OOERIQVm+Asw1oJy
                   "]], 
                  
                  LineBox[{{3.7666299854828157`*^9, 1.1626752291955802`}, {
                   3.766752755953942*^9, 0.07839948824246724}, {
                   3.76692089421544*^9, 0.35467420704099867`}, {
                   3.7671032480025015`*^9, 0.11}, {3.767273460281228*^9, 
                   0.10599687524371677`}, {3.767457888085518*^9, 
                   0.1524066513909234}, {3.767638960059439*^9, 
                   0.6497764569070604}, {3.7678078905250254`*^9, 
                   0.4388305527369181}, {3.767991036516175*^9, 
                   0.1775655883471171}, {3.7681620409989896`*^9, 
                   1.1527991916656495`}, {3.7683350998242865`*^9, 
                   0.17000195237265694`}}]}, 
                 Annotation[#, "Charting`Private`Tag$6556#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768335100}, {0., 
                1.1626752291955802`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11516", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "96"], ",", "\"Day\""}], "}"}], 
                  "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJy1nTusH0eWn6VZYAM5VbyGMxtw5nhBZut0N57IgJ16na7jiTe2091kEgID
DDArYECIKw44HFAEOdKYIkfLIUWK5BXfL5HUyzZZ/VX7fNW/W30l+QJEsfpf
XY9T531OVf+b//Rf/+Y//+Stt956+//+++bfv/XWP/3Fz+7+9T+dPPb3//z8
3/7077849u9++vp/vz7G83/8279859I/vH/sf/6P13/v9ef/4c3fB73+utXf
/uUXvT4rGYf+eZ/n9/76dctTve55Uf/v7574q+t/d3qZz93++3970+GHx/7m
zYPfHrv+d68b/k7tP+jjtPUd9HatvHLsrTd/L4+9Ge6nL5b+Xh57Pdt3Lr1Y
5nFz6e+jY2+W8c7tYx+8Buc//6aP3/o/2+su+b3N/3wv/+ObiVw89l/e/P2v
Y6+f/sXPbgxw8T75eYJ/g/uVY1++nu7za8O82vvX+u9tPtcXuF1f8OazZdzr
S7tnCzxudPi0/fh8gcvnC1zvHHu9G++euL3A9/axf/1mgfz+rI/H+G2+n/Xn
lA0+t3q/7fnz3h/zYb4ND272+dEvZVv/s97evzOftq5/WeB69dibbt+9tczn
Qf+9Pb967MNzr/8+Vfv1ecOfp/057Rp8/tTrtKcd627rutefMz4l/VCyv+29
Fd4Nz/647Otl4fs3nR7auI/6ftXxPuz01N4710vwu41/oZf83vp/2PsxP6Ju
fHe9reuXC77+oj9v67nb8Rx6hd5a+1cL3ny9tL+xwP3eMv6Dpd3FTvet/m1/
Tn/t90udjhte/kHjXVzw7fedn1C2eT7qv5u/wddYB/yNErjB7yr8Djpc2jx/
1eFI3c9dAmfqbd+/EH9d+5uNl/qnX+8373kerDutg/mBDxXPLgxyDnxucP5D
59v0w75Qtnk+6v2x3+B/xe+V3zPvNP+KL5/1eSR6sPxmHYwPfoJv7f17fXzP
q7U/M8g5rx88b91/1OnH7bx+6uA7ZeMzF5bxPln6f7yU3y7y5EX/nRI+BR+D
T7JvphPwaBuvDga8dDs/T79Tmp9ZH+J92rk/j5PowXiB3G3PPxV/PtnhQwl8
wP8mB1c48z74Dl6wnw3vVvm9V06YXsADSp5DB5bryGvLRdaNHtSeP+70AN4y
jufJvKAH6JJxKOkH/s979NPaPRjkIOsyP7AeZ70ZfIY+675f7vC33pj4sMeZ
yQPmjT6U2iW5bX3VfNDzaOs5GOQNcIevVfxY8azq/b/r82560Itetvn85Hjr
9+sFr172fU5ykxK9C/xLdJzoGnhYr2nPT/Q6+Irey3OXVZ6M/VCaX6V1uh36
fRrf6/ih7VqZ+fNs/S4rXn7a+Z3bGW6pX68DO7PxyWvDfOk3yQ36Mb3TH/yW
55bX8C3L89n6gAP47P3/cfbxFwMc/Lvxy/0nunL/VQ5n/Ef+p3Y83+539IOY
r8O/GnzvdDij52F3s6/QN/VtO3a135uedL/rF9h/tHN7+Bp46hK6oI4fAH3L
7bBbKVN/zKvKqWu9bHB43Pm024OX9MvvbV7XZG+fEV2dVnmz28PVL/J+xLvE
/xOfhG8xL8Zr+sKT7t9o6/1ygTN6Cv6m511vb3TxdZ8/+wJe1PoV2Q9raX5Q
+drBVM+0nLZdXu2wUc6Ap+yH+096iO39xBcqP7sz8O30nvWWxJf5HT6V+Ljh
kfQxStsprX5nin9pPTM7Ajthxk/38t/ZPFgP67efBroFTy3HKKv9MdpNnl9r
f2fY15k+lPDG/dA/fD69l95Pcov1wg8T/I2XM38LenVab/LPux37hD/W9ovl
pPv1/PCD0+9Mzqb9r36Qz3fT/178Rz7jBzFeYn84PmC+u5du+R19ATs28eMZ
vrnuuAL44f4TnSf7hv3Bv5fsXeNXGod5ML+Z/pXkhOmk6k3jvBK8kt1L3C31
432t9VMdn9p4H0vej37RvfIA+3Tbv3h2iKtVfpzluZ9XfjjH88PjgCMeG/6M
x/vGl8R3Er15PONHwq9ZaX+b/YHJT5nwxf7uimcHA1yTHpD0q4TPCf+TvkYd
exZ+YPpI8HQ8tfrhz3X7p/oLx3jRjK9XfeFa9+ul95J8ncmXqs/8asDjRA/V
Hzj2O4vv8L7jLTN9OvW7jQ8HfZ8tl9K8k38QvEvwONzeR56cVnzt88iXE77Q
P+tiXuYDFb6r3xG/HX5k4IT+YPqdxcH4HfuG95PeZrkIXNDHq15yqssd5s08
qx6/8inbWQmuxsfKr1n/+a4H4nfZy8+3+dLl7l+x3ynF0Vxa72OeSX7N/OH0
V9d5fsDfFBdI8gB/Qp3H2Y6HzkexXkpp/HUekOnD+5TsD/td8YfYDpvFOeGf
hkeNJ9we5I/3w/zI6zD9Y4cZ/2d+AuPdDH7QH/66pB/YP0m5zadPDOshv8Tw
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
8JmUh+r+tvMN/9TpmPZep+djOwf4+P2Zfe3+rXfzO/LJ/n3Pp+obN4b9tF02
2/80X/Syeg/U3nzdcZyEN9v6s8/zXOtyOe2373N0nnC1088M/N95JM5foV7x
/HLn51Xerf5+5GPDw4eDPDL/ZBz4vO9PtJ+gvX938HslP1Dav+382DV+k/zD
5g/UHfeyHWt6r3Jj9bsZ/o53p7wJ12f8d5tff9zxz+0bXXy57M+rDi/fG3D4
+fCrgz4FfbNeSujQ+ka9D/Rgqb/q/sZ6TwR22f2uJzX9+knnJ+gprfhI9/n+
seuF0JvvBaXfGv971e87ZBz6RQ+w/mN8rP6okX/N+K75kPcbuX7UfmdxLuiy
nmM7L/72fuBT47lD7B7rP8Anxe+TfjHTG62XNT52u8/f/c/4RPK/uB2/N3r/
uuth6NfwX+jH+p316HQ/EPhc/RD5vLHxZ5ZfZL+Y+WXKW0p82e2RE9WPlPMJ
Uv8pf6LqQeP9FF4n+FftzGtdHla9e7xfgnmm80MeN8kfrxP6qHI079cM7i7r
vbPXhvZpH5Kd4PHrfFe7flv/utr5guNXaf4Vb653++Zwe+PUgGcJr6r/6lpY
15j3cThf+EDnxfM5Kvdr/GNeyCPLa+fNJz3F+UDW65yPkuIDNV/lbowvJjwy
vIxPtvdmdsw+O3DUt5IcJp4M3QC/yl/y+dyZPove3PSY8ZzjNnxODfop86Be
/Q23Br6X4mQpb83xhxkdpbLuz+PBv5HiGglfUl4MpfE2+YtMB2neCV+R8+if
ye5IdmjCl6pH3ort67hnBr/pLM5Ju3q/263p/JN+lPw6+FtsH+2zz9Z8IZ+r
Mv6l+4ISfoPXjp+An0nfZV3oEdCx7bttf+N4Th69Nd2nYzw3f8ZeqfN3nvWp
mI9d5fXHvZ39uInea/z/jvb/quymU8P6ZvYQ8QT0tCRX9vrhqJu/wuerPTTz
v52KcszzgN9sr3/UW3kP/cR+eegq6SN1PuN9NaYH32+zjSfpHOmKlxUP7Pc4
MdB58sdbr/f6ttuv+N7a3da5qlM6r3mh8xnvh+NtMz3e+2c44Wea+RtneDd7
P/F//Ltuv9c/YX8m+Di7ZxG/Df7ubX3naYc3+0IJf+SeePw1rb5+F6T1s37v
puZjjN8JSfkn1LEzkDf4z+Bnli8JbuZnVS8b7+2b+UXdL/BEH7B8dLtER8nv
5HnZztl7/gM+jv9u5v88mj61ypl0X63rST+C3sGrmb+C9c70I/9u/cZ55cku
s785yRH7p6EX+CLnSBudPetwdNxgn1/sTKePZMcY3rM8MOYDHc7s7oQ3yW+U
7Jo6Pt/P+a7TleM4Vb5c7PFe3qdMeV8p/870RTwlxaPcf8rz8++1n5s9Hum8
jipXz3T8oX37/Xrnz9A566/349/p8mDbjrrU96fmO6zfveMeiNb8bs/HYT/q
edpXPQ8IfRk8r99vGuPwnLep59LW/A3G8/0Oya4x/6h+6/l3Fmb+cNoBf9/H
k85jpPLwfI7L+h7f/L5S61/Azfqi+drMbj88n+f0IJeSHr8t19d7e7b9QSdj
/4ZLqlOS1wbe7YUrcg97wXid+N+s3+QfSXKhwiP3b76U+jscTl8M/c7glfpz
u8aPng5x7mQfJflrvlnHO+jPoQf4H/pwOh8CX63x/3zeLOl5NX433heQ2id/
y0wuMw/4v+/xSPad+0n8z/hF/GamxwDPqvevcDa+Io+sJ9rP6HG2/ZArPvk8
Veo3+ekNR/h3zRPK950m/pfyvmbnBqnXOOaan5je97g1D/iDyB9m+mHa/5m/
bXbuM/Xr8Q33yh9Gv7/Pw1e8ODvoHXv9oJXuL3T7zOuv+V6nB3454xPoWcg1
76/10LT/aR31/PPteN7I+5zwEnjSjjr2jektwcPrSPjt3/39lIS3qZ7WuVd/
ZL3VXzTOnzr4gz5ofc7vzfQK4pz4mWZ0tc3HR30srRv8aXR1K8IryaXUfsZn
oGP4qL/jOeNfSW9JdGh/P3SZ2iX5NIN/mnc9LzvS5Qw/0zrb758qfnI20gN6
Y9q/vfuY1jnDt7RO7DXOn3MuCLu2+uPG78EjHxs9Plr44NvH2/Pvlv17IjmG
f52439NFL/uz49xXBh+odurNfn6g1b/peYf06+/Oge+U+Hdq/sKTeA4JfdG/
u06/5E1Q8jv1Bu8bw7kw359Hf/gnwDfKet5lvY+NdTkvrPVzV/61cx0vnB9s
fNmWl2temfkD+8j5ePg1firzH+DMOoBHG/ejPt/D/WCjfYR/qPpT3ldccv2e
L3Cv9vvF6Oeqes+d4fft/FzfT39qyGelrPx61JOS/ybxie3fz3Z6tl/ycD/l
3N6FHrEvkt89+bHTeiiJR8KHfI8NJXk19qMZn2zv8p7vrwFf8dtDZzyHTrHr
fA6N/pGH4CH8uObPXeh2eb2Xeb03kd/pz/nQtttqvuqZwV8FfW7ncY39wNfe
WfwIvp+Wfalwvz/kO/n8V7pnyPn9zKPmIZ2e4tXh8cPRb0B+rPFypnem9tjH
6Z6HbX3+9nBuzvBp5fMFPt91uV3PYRwM/IZ+6rnj3w78lvbmyz6vM9MTKZt8
Gr+TkvKAzDcSH2S/t/nx+a4fbsc9PhjsJcsZ88Htczf3+3iGt8/XJT69jT/n
Oz9IcJjZsUm/RP5Cv8k/YT+j4UwJH6z0/nnHS/ge8t79J/ky048Zp8I/21nW
d/bZAem8zOnYjv6BG3oHciTZkR7HfqyE/8kerProxQG+ld65H+FSp3vnsW/r
U2uc2fO2HjPzLxjP6/25mS4PP3c0fj8LvlzzN8a8n3qf43ge3vH0Vt6Tnn9+
ODdOif5pf12dz7ku95L+nvxbMz1uJtcSXSZ6qecBLg/4af6S8oiTHyL9vk2H
63kY8Ag5ZP5suTeTj47beF+cT5z4d6LrGb+3P8/7ab6R5KzbV3jeHvy06R7e
JDewV8Fj4Mv5U54b/tZXTOcz/6PhhZ2CHm24JP+e4Z/GT/qL466el/3Vaf6J
r6bn6CW2f6r+xffJvlnm+eWyL8+G72CwT6kkLpv82AnfZ/r1jM9hH+7FhyRn
E5+kfmLJs/R56cP54Psd72zv+f6Fqu/dG+hrlg+X5GHis9jrlT7XvIYUN0n+
kSSXbVeyX17XLP+o3uN0tuMv8hN5Cp77HLrP7dLeeiz9V71lPIdtue/745I+
MtuvRDfm90nuuNyrR+PPwB9lfcv+APsf6B87Gn5ufdFwSvhl/475mPMx2U/8
poneZ3rFLD4APdf7lH4V7eG0zsQ/Unv7H1NcZaYPpHFYB3zO4xhfq13/x4GP
sT/Gd/xOKR8xxbF5Xr/TdnbQz/A/w1+Zj+dnv2HNs8z3DrT53h34oPUi89+k
/xrf0nd4k14wO4exz/4d49TUrTeYz9MfeONzD8mOMH/z/I0P6f3Khz8WHV7u
9q/xinpbL/GwL5fnz7pe1PDhq+X5y2V+5DU/CPeG3R/gZn5I3XpAsrMpnS9R
9dt8Dmjmn3N7P3ccJPnTqNf7/cZ1+l6Yus8HcZ7e/7365UxOVj1+zHtzP/U7
cuej3pnmaX3M+zmTR57Xu0s8t+ojF6O+VuUs971c6vITf1D9buSVnu/veIf1
WufhWk9IcMHemNkHiT8mvG/P1/MX2/7iUa9zfILS8sB2MnzV8HCcCbljfyJ0
sNePM9P7Zv5h42P1X679Op9zJmeS3Nren/3fcW16xGeS12Me8LtL/g36IXRR
+fWHg75JWf3LV/tz8MD2UsqfTHYA+pDlUsJn65mH84tz4lNZDiT5a72/5lGt
59bavG50fDackz1Q6eL+AJ/kb0l5+UleJDxK+Gr/3Ux+Go4zOM/sEM/L68Vu
h29bLmIv+1yl9RLryTXfItnLN3T/zrkB39P5V9eT/wA92PCc5Z/O9qHacTnv
1nITPGe99gO5fduWu4Nfz/yAfh0v4Hma37a/bPxu1MyeTfJ4bxwgzSv1b7sF
uyH5AXx/QeKP/h35jH7e9uGjro/4fopWf9nLht8vFrwn/2y0B83PUr6J8xnw
l0JX1vNth23L5TMD/cz401792vkajnsxD5/7Mj0QF4ZvpHNOXof1sm375NJw
HrDSzag/JX/jjB+leSS5bT6W7CT3m/T0xEeSfxf8Qg7jF4EOGn7zPe0XPc+S
/Evr89vf+3rc7WLsaPSyqqeMftEEV69vtm9+jzgL8i/pNzM62c7DP9vjOZaf
2F81z32Vq5TI02074NRAV7YrmBfyl/XaD5TgZ/00nRv2c/QC8nTNpxO+uh3P
/Z7b2y9gekrzt/4Df2X+SV/x+hPciW9jD6fzrjO+MosDpP7M1/bqp0dt53nx
ez0vfWHYzzrvq4Ncc54D++y4TbWfX3b+RP46/gnoEb6fvofF+Iw7ywt0u+32
K/696f6n4/cl3b/7oX2D1/77W31vR3s+3gOz9/z3rH3Vz070fcJflPrjPfLN
tv0pGd6Ml+6rTfM1fLwOl/gJZvQ845tJP7Zfq67v5LDuVG6/b7xBD7qkfNuD
2K/xwv2mdn4+K91v/R7WzYj/Fc/z/aG0A+7WN9FPavw45V2tfNDfLavyYby3
EH6Q8DnRV9rnyp/t18lwMX3QX9Jj8UdZDiZ/aZK/boe+AtwZ3+ckfe+T8cX8
MuEVz9m3+r2bvfd7zvE/8e29eOp9qvHNy7Fd6of12u70fBJfrN9/+Zdh3Ym/
z+TObL9a/Zb0n3xfmOnb9Jvozu9jJ838Iuh9lb/63oXVb5TO1xA/o/8kp4zv
1a7O69qLn24Hv3Je8V49xXiffvc8yTfZ9qfle8qYH3I7rd/zT/7fNE6iO9/D
THv8Hdh1xs+ZfuLnSY4kOtr+fbzft45H3Om28DTHM+ynSPkojO/88KPpIes9
bDO+sr2fN6dy5aj0Y7qe8eUZ3VZ+el3+gvw9+hkfgL4ch3U7fycr8fekV+xb
79Uu3xI8zZ9n6wW/qp16ezr/RPd13PG8XKWDVR44H21m/1f48D3Ai8M89un7
Jwb7bK98oCSum/wCs35n9ts+O+a8vr9yV3plHn8v/09lldcHcZ4Jfsa3hH/M
m3xO1pf4+V5/hMsTS1wF/xd6t/loiqfN8gjph3Fm72/rO/n7vl43fuvqf53r
/zM5u1e/qft5tvunGp6+6HSMfenvb1KSb+N7AShp5+fwcZ/bq/xj/b5o0xse
6vusa3vq8GX6T/cVEBcgP519J65Ty6d9n+r3Dsf1kYdO2eD5x6HOe27fxnky
fKfX7dyf15nGqe0f97r3i7LaX1e6vMNPDz3W/Ij13rZte2q9T4M8pubeuTHk
a/GcfbaflN/Z93pPxoOO39aXrUfW508W/Hje5S9+CuQocMC+pKz5JB8O8VX4
TPXjnBj4HM9ncmjWbq8/MfEf6tAX+53eS/Pb5jvpnoaR72E3pP4SfMBbx39t
xyQ7w3r+Xngnvpv4Ns/r+dB8T//Mzz3Tr6C/bfxf52k5ONtn+AX8k3rCt712
eNKjK37eGZ7vpYcZPKv/79agF83sbcPX87N+7PgA7eHX5iemq1leJHo//RFf
5Hnl485jGe0L/57wz/kDlMiTes/l2QH/kh5r/DQfTfvi+dkvTmm/Y8WP9f77
H0r/23bQ2e5vrt+5HvMIZ/zYcKx0eGnwk7rfpP96HX5vm/+P8RvP39/V9fd7
En/gd+f3Ol+LMuUNO//PenyyMxP8v6/fw98Lme3rXn914i/oO+zTjK+mfZ7h
gUv0e9t1nmfdx/l3PLfnfarHncxH0j6an87sM+Nfe776/xJfddzA+ON7Nvfm
maf8Bvs/ie+m/I1tfWHEy4R36Onw/Rle7tUrm574py4fE10kfWfmjzl83NuR
nyc7fSYnvO9Jj0ffqnSb9bW984AfIIeqHrTqq2l9SS/aS6e0w99b8X7UB5Oc
SvFh4399fqvLm6Sn0X6mb3q9wBP/YOv33pRfGn8TXGfzwJ6r9+dnvjzb1730
yfqsn9V8qdW+xy9dz8tf7/zD/if7fRr+3u18nnFbP491vnv1H/Ec/4Tn4Xky
L0p+r9+V+LT7K/A/QV/261S959rgP6Od/TWUwCH5odr4432eyV9U/YOjP8vz
T34o3xdKCZwMf8cdk91Vz6+P9+7ht4B+W/8v+j0hDS+eDt8z9/n8qg+O+Ve2
G/DzUvrcEHyt4cVHut92/G4O8LD/FT7CvlP3eD6/6nW18V/077uyjhS/SnnI
M3mZfm9w/HnkW/w+kyOJP23HM37e4WN7r+Y/vz+dp/GUsuaFnR7kk897HB7X
X+N1DW8vDfkx5PO2998+3vD/reON3z9fxl3vyWnzetT3H/5V/asPlvbf9XbQ
TWv+1nKP8lvH2/M/O97o/2k4l/rLDkfD089TWeXSP8Z2e/W6bbsqj793vjP9
MvWb9NUfCrej6oPuP9FbtTv2z2Mv/BL9JT5DvdLZzzu+pH0wPiW9xr+7nvjh
DD/SPNy+xi+z3yGNvxcfE791f9t+Ofp5b7L/4/dPzSdm8U3/PrOHZ/wXfpXs
r+Q3Tnwq4Uvaj710W+sZX/bS27Z8HPE70f1ePjXjswmeh8dtMl3O+k3tt/la
0iMyHzpcfo3z8fgz/0LC+xT3SOfS/b71O/u/Epxm65rx9714/2PJGbeb6as/
9vhJrh4VXkcd3/xt1u9R+UmC28yvPKNb43Xyj5nf255J8gD+n/Qh879E74lf
zvSBvXIhwTWNf1S5/33ncbgdNterjsovvO6Zn+rwceb5CcnenNH14XrSSJdH
pccElxS3TeeIsTfr+k/Gfd67P8me+KFyYobvM3vrqHyU++yxozlPip3vc7/A
0+ePaJ9+T+eonV/kvAD6rfJ9v75peM7o6Pvuz0we7pX3e/ex8vmzwz3m9uMB
R++r6+m5685Dcj29X+PQZ+K4bkf/+GWdP+fvGzS/zY3ejjxQnhNvauPc7KW/
l0T/7oc6/RA/I15a7+W72+fX1nM75gkSJ+c9+mNd0Ct+/YZPt4Z10J5xWrvV
X41/Gv88/mv8ci753fED5u+6n7t/xuV3z4v3ec77P1v88eBFvcc5nwcGn1Je
BO3BQ+eH4qfEj40/nHo9b3Be/Mrf7Trb502/Xh9+dNq1eX48fLeD0nRkejSf
Nn0CJ+bN+4xPXAG/fD2/+bHuo1rjAP4OO/5737/t70g5XuA8Xcp0T5zv+WNf
fL+s+/M9aZTux/kG1a893otiuWi5ms5x8R5wrPHO1d9P3Jx2wD+tH387++fv
YbhOf95nn2dwHIh2zNu/Mz/gUe+JuN7zOK4v95TD/+Br8GH2M93vRPyitVv5
EvyI58gHxiFeX7/7c1N602eBDx7oPoaVDyI3Kp9b+Tjz4H3y/Nvv95QvurZ3
6XVYPrgd4zE/6ql/2lHyHHlGST/IT+dL+l4S3xsGXaDXb98DvdIV+FXvFx35
0vZ9yiPdOx/e527S/ThJD670d3rQc3nf8qzaM6s88/iMg7zxex6fdv6+jvXI
eh/aGi8HrtBh5U/rd+4tt4jzmW8Zv+in7uu1Zfyvlnk96/hNv8hXvo/Z6O9l
jwfWfII/dLw0/zOfAr62P72flrsJb40vM33G8nomb9gP1un7eGoc/cKw7qrX
XBjasZ/AzfzfcX+3M/1bX2IdSY76O4bMN60zfaeR9uid6KnWW+Hn8G/ry+Q1
oM/C9203mN+i1/M+/JPvTdGO59CJ5QD90D/jv2n2/3w/l9J5LdhZzJ/fqfO7
32feHsd5SvzuMuUJOR/H+T48Bz7Ag31CvlJnHyr/utHx0fcfUPq7AslfAd77
d/Cr4tn8ewi+h5L+zA8c38APaP6R7uuzfZT6ox/bD9Xfd3Lww/H+9v2I4/12
Lv19uOQXT+doUzvDyXw0xWvtLzpqPmHK76nzWZ9XPWi8/9ztZ/H0vXmuye97
1HzZBKdZHkTqN80j6YlVjxnz39P4abzULsUrZ3jxY7dL+OD4EXi195xKWude
fE9xrrTf9uubTvbep+h4meGRxneZvkOQ4LXtv8/5z9+XTtI+zOB/VD41ow9K
4JryEffGp/fyle04lvPOxryCdF9CwrckDxyH8jzq++bbpwY4Hz7ueF9viht7
HTP+fXhccA6Hvfx7hsfW76vek/lgwqcZnzoq394rD2byKtHB4fA6Ocg3n8s/
nH5Pin+N690rd01fiW9u8ynf1zbCJ9En79tudr+VXsb7/PfqMTP5lPb7qHjo
dta79uol+/D15EBn1e7J9y0clQ6o23/r+BB+wvq9zjUeZPvS9rntb9pRp6Sf
dD+M7Uv6x+63f5d+fb6EcnYOZW+7dH+Kz1UwT+CLH6E+X+/7YD+qfbyW2NX2
+6b9cQn87FdI7ejP++n9Yx34+/D3VL/SeI7O8jrpj6YTf0/C/tSUjzLTY9Pv
1JNdm/rz7+m9WX/JT5Dmaz8zfLf6m/N6U76mf0983/By3e1av5eHc2vgHSX4
mPiQ72miH/v5KN0vdeI18LUZffHcdFP9q/l7l/jXvb56r964bvgB96c1fnS3
P+e7jW09bx9v636xjPei30/FfU6t3eNlnK+6376Vbx1v8HnW/ZttHreUX/G/
l+ffLXB7NeRNAH/zR+rsQ+K3yf9of2W618rnH83/KdkX/InwM/C+7qvzlt5T
POijvv/b3z8Y/b3AhfkTHyG+4vN36TyC/WrWz4yf2/b9uUGek5ewrYeN96we
1e5Jfi/KFH+ocYfxvpK943s/Z3posm9n60r9pvW7vfPRXBpPZ3Ddu19p3snv
Y/3U48/ks/3B23LPfgfnH50b9AboOclt4mfwDfzhFc7jfb+z/U3xC+fjJf9E
wueE9zP8nbVLfu3v66dN9nF9fnrwPzj+stfO24u3CV9n/ri97WZ+8zRfypT/
MPM/pNJ4tNfPuNcPn/ytPxRvUhwmxf9ddx6i4Wi5mfLFnOfh/I1Kv6eHfj2f
lE/guKTPhUMPKY9hto70nQvep364HvPr6XgpT8fjVD3L30f9cJhHumc66d+p
fVqX+bvL1M7rS/ci2S6o+7p+n7d+L22er2Q8SOt1e6+jzvdq97s4/y7lLTsv
AD8TJXaB/R48b3r5mn9he85lzStY+2X+lLbjnC/Bc+dpOB+j5tdc7/Mgrxw7
ifkAB/QL0zX7TgkdGG9m/oTkZ0ml7RuX2/bN+D0c46XpiTp6mPOHKx8d76F0
f8lfkvA+0Y3nn9aT6NjjJP6KXuPvx3td3re9+2++M/Mr0V8az/17nNl+IA/t
H7SdYjsy9ef8oLbOiz3PDv9LyuOp8D4/7AP1Ou8xTyXJkYT/KW6e6CTlIya7
H/3J+oX3yXRu/YX1A0fg5nkYfxIdpP2cxZNSe8PL+Gk88n5t24+nBz2j4mn2
l6TxPY9tOjs7+A8tlxwv4bn9R8ZXr9f8h7rvjaJ0XrjxDH8Z8/J31vHvohc4
jpDiCl43ZYoPWS9x/Ir3LdeRy/ZDEq/hnsLWfs0DpV31t14b8lYdv8Efih7A
c+rWc6zv0J/bp9J6FP5tw8H+vVnp/fb+UVrf4TnxonoOYd1X2hMPM1wdt2Q/
8DMbPuyz4ed2237lMX6A3uq8WuJh23JmpX/bmeZvlX/n77LOypTXkvK7tvXI
s8N66vfozw7xN/ef5FPy3yX5kPQj6yUpf8HzMn+scm38Dn2Kw83kQsp3mMX/
EhyTfp7ap/4thxxftV8F+WK4GA9oB1/wfZTmP6Y757UzHnEH6JA4FP00vnK7
x8PaPG73c1fwB/ig7UPHHeE/jlexHkrmg7xp/OG7ZdxXy/wexHHoZxZXpNzm
O2M8M+kT9Gv72/Y2v6dzCun8gc8pJDub94lv1fMq5wb9tdHn8/69m3rv5nsd
X5O/hnF4D/32HcX7KGlPvbV7uLz/zQKfr/p5qNbu6wV+Xy9weLnM79Xy/tf9
/Tbfbxd4vH2c9yhpzzht3V/1eoPnVwtcXi39ver1Bvevlv35Zhln7Zd5c27e
/L7yPb539PXS7nnHd+Bku6o9vx/91fX83IXo16XueJ+f077B5wvFgXI+nO2K
Wbwj/d7254teT3GZlO9W40trvqrpzXRU6f3JQG/oU9Zf0MNm99Ran5j5CQxv
8hRm+onlou0e+DHzRy9Hr7ZfkZLf7a8kz6F+L+y2vmt60Pmh/ZfUXSJXPB71
VCK/GhweTf2P6f5q739ql7631tb3JH7fi9LnUXnucWyn1u+hnevwAq71/vTR
z2C9qT3//nnze9tbb7y+nI933Mr62N7xbR+4rP6avfHXkws8H3W+We2Pi33/
4AeNzq50Pm6+7Lisz6+4tDzhnmjrkcwHuUy93sdxWngx6gkpvsZ8kGeOO9m/
5v6SX4336v0ca1yx8ec7/Xf2xf6YJOeAB3zefMP3vdg+hi81enwe9Vjr65Yv
6V55+wPqvSxXpReseIp+kPL/9+WdnOp4mvzKppeZfGacqgd+Pn0vxcFdT++l
fA7DBz5Z/R8pf9Z8YbXPnMeS4FTt43Gd4Cd2Vpr3Nnw+HvKvLY+2/Ytjnp/l
T+v/XtfL3A/tkh8SOrEfDrqzv6t+x+6DiTz+vOsbzo+036nB78Vwn0fVW1b/
HePxvu3c5NdCz3G81vaq/XP2u9pebvN7Kj405v17v5Pe4f3f2854UvVK7rm5
F+O7nmfKR3UdvomdmeI9lkeWO8hp/NLOC4D/Jb3Jz1P8po43+neSPHTcBj7j
8T2eS9/Tke7XgH+gr1Dfvi/rZt9f5EXlV6+WcZ51emG/7JfGz4sfId1jhT3X
6PX3Q5xle//GfUFOJv/ozC+Z2iX/oPHA++N+uL8vxcmq/24958Q+wbcorZfA
T8zH4J/wIfgedFLv/7jS/Qx1/+4M8tD+bufVWq+dtTNcLaddzvYtlUftd9YO
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
7j2vS7v/A+ZYB58=
    "], CompressedData["
1:eJxc3TuOZdu6XecrQBZrIV/GHO/Ri0CAFotAgwAtGVfFl6F/RDrrI7DPwW7Y
QGbPjFgt1mO2Mf+v//H//Pf/+X/8x3/8x3/+n/V//+1//ef/+7/R//d//9B/
/S/1L+Osk32/7/vFgLm/eL4Dtg32BY4JzgGuDu4Gnk9k1bmuCqvux6rbWHU7
q+5g1Z2suotVd38iq+5h1b2uCqvysSqNVemsymBVJquyPpFVf1/gHzys+vsj
/WB+Vr1vjAm2AfYOjgbOTwy4LrgPeDZ4XRVWtY9VrbGqdVa9PwHIqjZZ1Rar
2mZVO6xq11VhVf9Y1Rur3l8kyKo+WNUnq/piVd+s6odV/boqrBofq97XE2TV
6Kwag1VjsmosVo3NqnFYNa6rwqr3bQWyajZWzc6qOVg1J6vmYtXcrJqHVfO6
Kq4Kq9bHqtVYtTqr1mDVmqxai1Vrs2odVq37ia4Kq/bHqt1YtTur9mDVnqza
i1V7s2qfT2TVvq4Kq87HqtNYdTqrzmDVmaw6i1VnfyKrzmHVua4Kq+7HqttY
dTur7mDVnay66xNZdTer7mHVva7S7dHt0e3R7dHt0e3R7dHt0e3R7dHtwe31
mw4Qt7cPt//9HAAD4vb24fb24fb24fb2XVfh9lI5qxpu//txBLKq4fbWcHtr
uL013N4abm/tugq31wpWddxeyKqO21vH7a3j9tZxe+u4vXXc3vp1FW7/++EM
smrg9jZwexu4vQ3c3gZubwO3t4Hb62viqrgKt9djm1UTt7eJ29vE7W3i9jZx
e5u4vb41WDVxe6GrcHtZklULt7eF29vC7W3h9rZwe32Hsmrh9kJWresq3F6b
WLVxe9u4vW3c3jZurwcKqzZuL2TVxu1tX1fh9vrqsurg9nZwezu4vR6vrDq4
vZBVB7e3g9vbua7C7e3i9nZxe7u4vbTBqovbC1l1cXu7uL1d3N7udZVuj26P
bo9uj26Pbo9uj26Pbo9uj24Pbq9JHcTtf0/qwYC4vX+4vX+4vX+4vX+4vX/X
Vbi9/qZY1XB7Iasabu8Nt/eG23vD7b3h9t5we2/XVbj97yUOyKqO23vH7b3j
9t5xe++4vXfcXr8Sq/p1VVyF2+vBzKqB2/vA7X3g9j5wex+4vf5ArBq4/e8F
H+gq3F5aZNXE7X3i9j5xe5+4vf5eWTVx+9/rTpBV87oKt9cIVi3c3hdu7wu3
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
6r10qffSpd5Ll3ovXeq9dKkPWUWXei9d6vM+q+hS76VLvZcu9V661HvpUu+l
S33IKrrUe+lSi3R7dHt0e3R7dHt0e3R7dHt0e3R7dLtdauxSY5cau9TYpcYu
NXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41d
auxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq7
1Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2
qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrs
UmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TY
pcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qaFLfY+pAf66vfDX7fnoUh8G/HV7
4a/bC3/dXvjr9sLrqrCKLrWwsYou9SGr6FILJ6voUgs3q+hSC6+rwiq61Hx0
qQ9ZRZdaOFhFl1q4WEWXWnhYRZdaGFbRpT5kFV1qYWcVXWrhZBVdauFmFV1q
4XVVXBVW0aUWNlbRpRYOVtGlFi5W0aUWHlbRpT50VVhFl1rYWEWXWjhYRZda
uFhFl5qPLvUhq+hSC8MqutTCxiq61MLBKrrUwsUqutSHrKJLLbyuCqvoUgsb
q+hSCwer6FLz0aU+ZBVdauFhFV1qYVhFl1rYWEWXWjhYRZf6kFV0qYWbVXSp
hddVuj26Pbo9uj26Pbo9uj26Pbo9uj26nS712amDuL3RpT4MiNsbXWohbm90
qYW4vdGlFuL2RpeaRpf6kFV0qYW4vdGlFuL2RpdaiNsbXWohbm90qQ9ZRZda
iNsbXWohbm90qYW4vdGlFl5XxVW4vdGlFuL2RpdaiNsbXWohbm90qYW4vdGl
PnQVbm90qYW4vdGlFuL2RpdaiNsbXWoaXepDVtGlFuL2RpdaiNsbXWohbm90
qYW4vdGlPmQVXWrhdRVub3Sphbi90aUW4vZGl5pGl/qQVXSphbi90aUW4vZG
l1qI2xtdaiFub3SpD1l1cHujSy3E7Y0utRC3N7rUQtze6FLT6FIfsooutRC3
N7rUQtze6FILdXt0e3R7dHt0e3R7dHt0e3R7dHt0O13q+/cG4vZOl/reZLog
bu90qYW4vdOlFuL2TpdaiNs7XepDVtGlFuL2TpdaiNs7XWohbu90qYXXVXEV
bu90qYW4vdOlFuL2TpdaiNs7XWohbu90qQ9dhds7XWohbu90qYW4vdOlFuL2
TpeaTpf6kFV0qYW4vdOlFuL2TpdaiNs7XWohbu90qQ9ZRZdaeF2F2ztdaiFu
73Sphbi906Wm06U+ZBVdaiFu73Sphbi906UW4vZOl1qI2ztd6kNW0aUW4vZO
l1p4XYXbO11qIW7vdKnpdKkPWUWXWojbO11qIW7vdKmFuL3TpRbi9k6X+pBV
dKmFuL3TpRbi9k6XWnhdpduj26Pbo9uj26Pbo9uj26Pbo9uj2+lS/153iQFx
+6BLLcTtgy61ELcPutRC3D7oUjPoUh+yii61ELcPutRC3D7oUgtx+6BLLcTt
gy71oatw+6BLLcTtgy61ELcPutRC3D7oUjPoUh+yii61ELcPutRC3D7oUgtx
+6BLLcTtgy71IavoUguvq3D7oEstxO2DLrUQtw+61Ay61IesokstxO2DLrUQ
tw+61ELcPuhSC3H7oEt9yCq61ELcPuhSC6+rcPugSy3E7YMuNYMu9SGr6FIL
cfugSy3E7YMutRC3D7rUQtw+6FIfsooutRC3D7rUQtw+6FILr6tw+6BLzaBL
fcgqutRC3D7oUgtx+6BLLcTtgy61ULdHt0e3R7dHt0e3R7dHt0e3R7dHt0e3
06W+b9cL4vZJl1qI2yddaiFun3Sphbh90qU+dBVun3Sphbh90qUW4vZJl1qI
2yddaiZd6kNW0aUW4vZJl1qI2yddaiFun3Sphbh90qU+ZBVdauF1FW6fdKmF
uH3SpRbi9kmXmkmX+pBVdKmFuH3SpRbi9kmXWojbJ11qIW6fdKkPWUWXWojb
J11q4XUVbp90qYW4fdKlZtKlPmQVXWohbp90qYW4fdKlFuL2SZdaiNsnXepD
VtGlFuL2SZdaiNsnXWrhdRVun3SpmXSpD1lFl1qI2yddaiFun3Sphbh90qUW
4vZJl/qQVXSphbh90qUW4vZJl1qI2yddauF1VVyl26Pbo9uj26Pbo9uj26Pb
o9uj26Pb6VLfA/+AuH3RpRbi9kWXWojbF11qFl3qw4DXVbh90aUW4vZFl1qI
2xddaiFuX3SpD1lFl1p4XYXbF11qIW5fdKmFuH3RpWbRpT5kFV1qIW5fdKmF
uH3RpRbi9kWXWojbF13qQ1bRpRbi9kWXWnhdhdsXXWohbl90qVl0qQ9ZRZda
iNsXXWohbl90qYW4fdGlFuL2RZf6kFV0qYW4fdGlFuL2RZdaeF2F2xddahZd
6kNW0aUW4vZFl1qI2xddaiFuX3Sphbh90aU+ZBVdaiFuX3Sphbh90aUW4vZF
l1p4XRVX4fZFl5pFl5pFl5pFl5pFl5pFl5pFl5pFl5pFl5pFl5p1dXt0e3R7
dHt0e3R7dHt0e3R7dHt0O13qU+gGcfumSy3E7ZsutRC3b7rUhwFx+6ZLLcTt
my61ELdvutRC3L7pUrPpUh+yii61ELdvutRC3L7pUgtx+6ZLLcTtmy71Iavo
Ugtx+6ZLLbyuwu2bLrUQt2+61Gy61IesokstxO2bLrUQt2+61ELcvulSC3H7
pkt9yCq61ELcvulSC3H7pkstvK7C7ZsuNZsu9SGr6FILcfumSy3E7ZsutRC3
b7rUQty+6VIfsooutRC3b7rUQty+6VILcfumSy28roqrcPumSy3E7ZsutRC3
b7rUQty+6VILcfumS33oKty+6VILcfumSy3E7ZsutRC3b7rUbLrUh6yiS323
AWRVdHt0e3R7dHt0e3R7dHt0e3R7dDtd6hu8QNx+6FILcfuhS82hS30YELcf
utTC6yrcfuhSC3H7oUstxO2HLvUhq+hS370ZWUWXWnhdhdsPXWohbj90qTl0
qQ9ZRZf6bhHJKrrUQtx+6FILcfuhSy3E7Ycu9SGr6FLfnSpZRZdaiNsPXWrh
dRVuP3SpOXSpD1lFl/pumMkqutRC3H7oUgtx+6FLLcTthy71IavoUt99O1lF
l1qI2w9daiFuP3SphddVcRVuP3Sp7/ahrKJLLcTthy61ELcfutRC3H7oUh+6
CrcfutRC3H7oUgtx+6FLLcTthy41hy71IavoUt/NVFlFl1qI2w9daiFuP3Sp
hbj90KU+ZBVd6runq6t0e3R7dHt0e3R7dHt0e3R7dHt0e3Q7Xer70k8Qt1+6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy61Fy6
1Fy61Fy61Fy61Fy61Fy61Fy61Nyr26Pbo9uj26Pbo9uj26Pbo9uj26Pb7VJj
lxq71Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXG
LjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuN
XWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5ca
u9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41
dqmxS41dauxSY5cau9TYpcYu9d/rwx/E7bFLjV1q7FJjlxq71Nilxi41dqmx
S41dauxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qfntUv/eIu7g
j9v3v/8IBvxx+8Mftz/8cfvDH7c//HH7w+uqsOq3S93/NoKs+u1SHw5W/Xap
DxerfrvUh4dVv13qw7Dqt0v9Q1b9dqkPO6t+u9SHk1W/XerDzarfLvXhdVVc
FVb9dqkPG6t+u9SHg1W/XerDxarfLvXhYdVvl/qHrgqrfrvUh41Vv13qw8Gq
3y714WLVb5e6/33/gqz67VIfhlW/XerDxqrfLvXhYNVvl/pwseq3S/1DVv12
qQ+vq8Kq3y71YWPVb5f6cLDqt0vd/x7NIKt+u9SHh1W/XerDsOq3S33YWPXb
pT4crPrtUv+QVb9d6sPNqt8u9eF1VVj126U+bKz67VL3P7eBrPrtUh8uVv12
qQ8Pq3671Ie6Pbo9uj26Pbo9uj26Pbo9uj26Pbo9uL19uL19uL19uL19uL19
uL19uL19uL19uL19uL1911W4vTXc3hpubw23t4bbW8PtreH21nB7a7i9Ndze
2nVVXIXbW8ftreP21nF767i9ddzeOm5vHbe3jttbx+2tX1fh9jZwexu4vQ3c
3gZubwO3t4Hb28DtbeD2NnB7G9dVuL1N3N4mbm8Tt7eJ29vE7W3i9vbbpf4h
qyZub/O6Cre3hdvbwu1t4fa2cHtbuL0t3N4Wbm8Lt7eF29u6rsLtbeP2tnF7
27i9bdzeNm5vG7e3jdvbxu3tt0t9eF2F29vB7e3g9nZwezu4vR3c3g5ubwe3
t4Pb28Ht7VxX4fZ2cXu7uL1d3N4ubm8Xt7eL29vF7e3i9nZxe7vXVbo9uj26
Pbo9uj26Pbo9uj26Pbo9uj24vX+4vX+4vX+4vX+4vX+4vX+4vX+4vX+4vX+4
vX/XVXEVbu8Nt/eG23vD7b3h9t5we2+4vTfc3htu7w2393Zdhdt7x+294/be
cXvvuL133N47bu8dt/eO23vH7b1fV+H2PnB7H7i9D9zeB27vA7f3gdv7wO19
4PY+cHsf11W4vU/c3idu7xO394nb+8TtfeL2PnF7n7i9T9ze53UVbu8Lt/eF
2/vC7X3h9r5we1+4vS/c3hdu779d6sPrKtzeN27vG7f3jdv7xu194/a+cXvf
uL1v3N43bu/7ugq394Pb+8Ht/eD2fnB7P7i9H9zeD27vB7f3g9v7ua7C7f3i
9n5xe7+4vV/c3i9u7xe394vb+8Xt/eL2fq+rdHt0e3R7dHt0e3R7dHt0e3R7
dHt0e3R7cPv4cPv4cPv4cPv4cPv4cPv4cPv4cPv4cPv4cPv4rqtw+2i4fTTc
PhpuHw23j4bbR8Pto+H20XD7aLh9tOsq3D46bh8dt4+O20fH7aPj9tFx++i4
fXTcPjpuH/26CrePgdvHwO1j4PYxcPsYuH0M3D4Gbh8Dt4+B28e4rsLtY+L2
MXH7mLh9TNw+Jm4fE7ePidvHxO3jt0t9eF2F28fC7WPh9rFw+1i4fSzcPhZu
Hwu3j4Xbx8LtY11X4faxcfvYuH1s3D42bh8bt4+N28fG7WPj9rFx+9jXVbh9
HNw+Dm4fB7ePg9vHwe3j4PZxcPs4uH0c3D7OdRVuHxe3j4vbx8Xt4+L2cXH7
uLh9XNw+Lm4fF7ePe10VV+n26Pbo9uj26Pbo9uj26Pbo9uj26Pbg9vnh9vnh
9vnh9vnh9vnh9vnh9vnh9vnh9vnh9vldV+H22XD7bLh9Ntw+G26fDbfPhttn
w+2z4fbZcPts11W4fXbcPjtunx23z47bZ8fts+P22XH77Lh9dtw++3UVbp8D
t8+B2+fA7XPg9jlw+xy4fQ7cPgdunwO3z3FdhdvnxO1z4vY5cfucuH1O3D4n
bp8Tt8+J2+fE7XNeV+H2uXD7XLh9Ltw+F26fC7fPhdvnwu1z4fa5cPtc11W4
fW7cPjdunxu3z43b58btc+P2uXH73Lh9btw+93UVbp8Ht8+D2+fB7fPg9nlw
+zy4fR7cPg9unwe3z3NdFVfh9nlx+7y4fV7cPi9unxe3z4vb58Xt8+L2eXH7
vNdVuj26Pbo9uj26Pbo9uj26Pbo9uj26Pbh9fbh9fbh9fbh9fbh9fbh9fbh9
fbh9fbh9fbh9fddVuH013L4abl8Nt6+G21fD7avh9tVw+2q4fTXcvtp1FW5f
HbevjttXx+2r4/bVcfvquH113L46bl+/XerD6yrcvgZuXwO3r4Hb18Dta+D2
NXD7Grh9Ddy+Bm5f47oKt6+J29fE7Wvi9jVx+5q4fU3cviZuXxO3r4nb17yu
wu1r4fa1cPtauH0t3L4Wbl8Lt6+F29fC7Wvh9rWuq3D73+UMIKs2bl8bt6+N
29fG7Wvj9rVx+9q4fe3rqrgKt6+D29fB7evg9nVw+zq4fR3cvg5uXwe3r4Pb
17muwu3r4vZ1cfu6uH1d3L4ubl8Xt6+L29fF7evi9nWvq3R7dHt0e3R7dHt0
e3R7dHt0e3R7dHtw+/5w+/5w+/5w+/5w+/5w+/5w+/5w+/5w+/5w+/6uq3D7
brh9N9y+G27fDbfvhtt3w+274fbdcPv+7VIfXlfh9t1x++64fXfcvjtu3x23
747bd8ftu+P23XH77tdVuH0P3L4Hbt8Dt++B2/fA7Xvg9j1w+x64fQ/cvsd1
FW7fE7fvidv3xO174vY9cfueuH1P3L4nbt8Tt+95XYXb98Lte+H2vXD7Xrh9
L9y+F27fC7fvhdv3wu17XVfFVbh9b9y+N27fG7fvjdv3xu174/a9cfveuH1v
3L73dRVu3we374Pb98Ht++D2fXD7Prh9H9y+D27fB7fvc12F2/fF7fvi9n1x
+764fV/cvi9u3xe374vb98Xt+15X6fbo9uj26Pbo9uj26Pbo9uj26Pbo9uD2
8+H28+H28+H28+H28+H28+H28+H28+H289ulPryuwu2n4fbTcPtpuP003H4a
bj8Nt5+G20/D7afh9tOuq3D76bj9dNx+Om4/HbefjttPx+2n4/bTcfvpuP30
6yrcfgZuPwO3n4Hbz8DtZ+D2M3D7Gbj9DNx+Bm4/47oKt5+J28/E7Wfi9jNx
+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
2zdtaSFu37Sl/+4+AbKKtrQQt2/a0kLdHt0e3R7dHt0e3R7dHt0e3R7dHt1O
W/oeJgPE7Ye29N+9OMCAuP3Qlhbi9kNbWnhdhdsPbem71IVVtKUPWUVbWojb
D21pIW4/tKWF11W4/dCW/rszCcgq2tJC3H5oSwtx+6EtLcTth7a0ELcf2tKH
rKItLcTth7a0ELcf2tJC3H5oSwuvq+Iq3H5oSwtx+6EtLcTth7a0ELcf2tJC
3H5oSx+6Crcf2tJC3H5oSwtx+6EtLcTth7b0311rQFbRlhbi9kNbWojbD21p
IW4/tKXvgjJW0ZY+ZBVtaeF1FW4/tKWFuP3Qlhbi9kNb+u8ePiCraEsLcfuh
LS3E7Ye2tBC3H9rSd3kdq2hLH7KKtrQQtx/a0sLrKt0e3R7dHt0e3R7dHt0e
3R7dHt0e3U5b+oTTQdx+aUsfBsTtl7a0ELdf2tJC3H5pSwtx+6Ut/Xd/J5BV
tKWFuP3Slhbi9ktbWojbL23pu/SSVbSlD1lFW1qI2y9taSFuv7Slhbj90pa+
K0BdFVfh9ktbWojbL21pIW6/tKWFuP3Slr4LUVlFW/rQVbj90pYW4vZLW1qI
2y9taSFuv7Sl/+79BbKKtrQQt1/a0kLcfmlLC3H7pS19l+Wyirb0IatoSwuv
q3D7pS0txO2XtrQQt1/a0n93QgNZRVtaiNsvbWkhbr+0pYW4/dKWvouUWUVb
+pBVtKWFuP3SlhZeV+H2S1taiNsvbem/+8KBrKItLcTtl7a0ELdf2tJC3R7d
Ht0e3R7dHt0e3R7dHt0e3R7dblsa29LYlsa2NLalsS2NbWlsS2NbGtvS2JbG
tjS2pbEtjW1pbEtjWxrb0tiWxrY0tqWxLY1taWxLY1sa29LYlsa2NLalsS2N
bWlsS2NbGtvS2JbGtjS2pbEtjW1pbEtjWxrb0tiWxrY0tqWxLY1taWxLY1sa
29LYlsa2NLalsS2NbWlsS2NbGtvS2JbGtjS2pbEtjW1pbEtjWxrb0tiWxrY0
tqWxLY1taWxLY1sa29LYlsa2NLalsS2NbWlsS2NbGtvS2JbGtjS2pbEtjW1p
bEtjWxrb0tiWxrY0tqWxLY1taWxLY1sa29LYlsa2NLalsS2NbWlsS2NbGtvS
2JbGtjS2pbEtjW1paEv/nrWLAX/dXvjr9sJftxf+ur1/tKX9oy3tH23pq5Fc
FVeFVbSl/aMt7R9taf9oS/tHW9o/2tL+0Za+KIpVtKUPXRVW0Zb2j7a0f7Sl
/aMt7R9taf9oS1+bxSra0oesoi3tH23pu2yCVbSl/aMt7R9taf9oS18ixira
0oesoi3tH21p/2hL38WFrKIt7R9taf9oS1+pxira0oesoi3tH21p/2hL+0db
+i7BZxVtaf9oS18wxyra0oesoi3tH21p/2hL+0db2j/a0heqsYq29HV7rKIt
fcgq2tL+0Zb2j7a0f7Sl/aMt7R9t6XvYsIq29N+tkkFWcc/T/nHP0/7RpfaP
LrV/dKn9o0vtH13qe3LJKrrUh6yiS+0fXWr/6FL7R5faP7rU/tGl9o8u9cWU
rIpuj26Pbo9uj26Pbo9uj26Pbo9uj26nS33fgRfE7Y0utTe61N7oUnujS+2N
LvWlpQ3E7Y0utTe61PfpPqvoUnujS+2NLrU3utTe6FJf4coqutSHrKJL7Y0u
9V0Dxyq61N7oUnujS+2NLvWFtqyiS33IKrrU3uhSe6NLfVeKs4outTe61N7o
Ul/vyyq61IesokvtjS61N7rU3uhSX0/FKrrU3uhSX3bMKrrUh6yiS+2NLrU3
utTe6FJ7o0t9X11W0aW++plVdKkPWUWX2htdam90qb3RpfZGl9obXep7DsQq
utR/N5wHWUWX2htdam90qb3RpfZGl9obXWpvdKnvnQJW0aU+ZBVdam90qb3R
pfZGl9obXWpvdKm90aW+JJ1VdKkPWUWX2htdam90qb3RpfZGl9obXWpvdKmv
jHdVXKXbo9uj26Pbo9uj26Pbo9uj26Pbo9vpUt9j+YC4vdOl9k6X2jtdau90
qe+cgAbi9k6X2jtdau90qe+CZlbRpfZOl9o7XWrvdKnvuAJW0aU+ZBVdau90
qb3Tpb7sh1V0qYW4vdOlvlMTWEWX+pBVdKmFuL3TpRbi9k6XWojbO13qO7yB
VXSpD1lFl1qI2/vA7Z0utRC3d7rU93fDKrrU3ulSH7KKLrUQt3e61ELc3ulS
C3F7p0t9R1mwii71IavoUgtxe6dLLcTtnS618LoKt3e61N7pUh+yii61ELd3
utRC3N7pUgtxe6dLfQd7sIou9SGr6FILcXunSy3E7Z0utRC3d7rUd76Iq+Iq
3N7pUgtxe6dLLcTtnS61ELd3utR3zAmr6FIfukq3R7dHt0e3R7dHt0e3R7dH
t0e3R7fTpT4rbhC3D7rUQtw+6FLfoS8NxO2DLrUQtw+61ELcPuhSC3H7oEt9
TmUVXWofdKkPWUWXWojbB11qIW4fdKmFuH3Qpb4jcFhFl/qQVXSphbh90KUW
Xlfh9kGX+n7CsIoutQ+61IesokstxO2DLrUQtw+61ELcPuhS34FArKJLfcgq
utRC3D7oUgtx+6BLLbyuwu2DLrUPutSHrKJLLcTtgy61ELcPutRC3D7oUt/x
SKyiS33IKrrUQtw+6FILcfugSy3E7YMu9Z3S5Kq4CrcPutRC3D7oUgtx+6BL
LcTt738gbh90qQ9dhdsHXWohbh90qYW4fdClvudirKJL7YMu9SGr6FILdXt0
e3R7dHt0e3R7dHt0e3R7dHt0O13q27BA3D7pUt8z0w7i9kmX+jAgbp90qYXX
Vbh90qUW4vZJl/oOEmMVXepDVtGlFuL2SZdaeF2F2ydd6nueziq61D7pUh+y
ii61ELdPutRC3D7pUgtx+6RLfceqsYou9SGr6FILcfukSy3E7ZMutfC6CrdP
utQ+6VIfsooutRC3T7rUQtw+6VILcfukS32HzLGKLvUhq+hSC3H7pEstxO2T
LrUQt0+61HfWnaviKtw+6VILcfukSy3E7ZMutRC3T7rUd+Qeq+hSH7oKt0+6
1ELcPulSC3H7pEt9r2hZdXD7pEt9yCq61ELcPulSC3H7pEstxO2TLvUdQMgq
utSHrKJLLbyu0u3R7dHt0e3R7dHt0e3R7dHt0e3R7XSp76s5Qdy+6FLfcYwN
xO2LLrUQty+61ELcvuhSC3H7okt973awii61L7rUh6yiSy3E7YsutRC3L7rU
Qty+6FLf4ZSsokt9yCq61ELcvuhSC3H7okstvK7C7YsutS+61IesokstxO2L
LrUQty+61ELcvuhS31GdrKJLfcgqutRC3L7oUgtx+6JLLcTtiy71nRjqqrgK
ty+61ELcvuhSC3H7okstxO2LLvUdXMoqutSHrsLtiy61ELcvutRC3L7oUt/7
gqyiS+2LLvUhq+hSC3H7okstxO2LLrUQty+61HeMK6voUh+yii618LoKty+6
1ELcvuhS37ukrKJL7Ysu9SGr6FILcfuiSy3U7dHt0e3R7dHt0e3R7dHt0e3R
7dHtdKnvcTFA3L7pUvumS30YELdvutS+6VL7pkvtmy61b7rUvulS+6ZL7Zsu
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
+6JLfS81WEWXWojbF13qQ1fh9kWXWojbF11qIW5fdKnvZDhW0aWORZf6kFV0
qYW4fdGlFuL2RZf6Xnixii61ELcvutSHrKJLLbyuwu2LLrUQty+61HdOHqvo
UseiS33IKrrUQty+6FILcfuiS30vQ1lFl1qI2xdd6kNW0aUW4vZFl1p4XaXb
o9uj26Pbo9uj26Pbo9uj26Pbo9vpUp9SOojbN13qw4C4fdOlFuL2TZdaiNs3
Xeo7Q5FVdKlj06U+ZBVdaiFu33Sphbh906WOTZc6Nl3q2HSpfx2myCq61LHp
UsemSx2bLnVsutSx6VLHpksdmy51bLrUselSx6ZLHZsudWy61LHpUsemSx2b
LnVsutRC3L7pUh+6CrdvutRC3L7pUgtx+6ZLfedrsooudWy61IesokstxO2b
LrUQt2+61Pf2FavoUgtx+6ZLfcgqutTC6yrcvulSC3H7pkt9p42yii51bLrU
h6yiSy3E7ZsutRC3b7rU92Yeq+hSC3H7pkt9yCq61ELcvulSC6+rcPumS31n
r7KKLnVsutSHrKJLLcTtmy61ELdvutT31iarotuj26Pbo9uj26Pbo9uj26Pb
o9vpUp+cG4jbD11qIW4/dKn177j90KUW4vZDl/oOxHUVbj90qQ9ZRZdaiNsP
XWohbj90qe/9ZlbRpRZeV8VVuP3QpRbi9kOXWojbD13qe9ubVXSphbj90KU+
dBVuP3Sphbj90KUW4vZDl/pOKWYVXeo4dKkPWUWXWojbD11qIW4/dKnvQwBW
0aUW4vZDl/qQVXSphddVuP3QpRbi9kOX+s5sZhVd6jh0qQ9ZRZdaiNsPXWoh
bj90qfUPbj90qe8fVtGlPmQVXWr9g9sPXWr9c12F2w9d6jvBmlV0qePQpT5k
FV1qIW4/dKmFuP3Qpb4PiFhFl1qI2w9d6kNW0aUW4vZDl1qI2w9d6vucylW6
Pbo9uj26Pbo9uj26Pbo9uj26PbqdLvXvmagYELdfutRC3H7pUgtx+6VLfaeb
d/C6Kq7C7ZcutRC3X7rUQtx+6VLfh4esokstxO2XLvWhq3D7pUstxO2XLrUQ
t1+61HfWO6voUselS33IKrrUQtx+6VILcfulS30fpbKKLrUQt1+61Iesokst
vK7C7ZcutRC3X7rUd/I9q+hSx6VLfcgqutRC3H7pUgtx+6VLfR8ss4outRC3
X7rUh6yiSy3E7ZcutfC6CrdfutR3HwBW0aWOS5f6kFV0qYW4/dKlFuL2S5f6
PmZnFV1qIW6/dKkPWUWXWojbL11qIW6/dKnv035X4fZLlzouXepDVtGlFuL2
S5daiNsvXeq76IBVdKmFuj26Pbo9uj26Pbo9uj26Pbo9uj26PbrdLjV2qbFL
jV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrsUmOX
GrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TYpcYu
NXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41d
auxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq7
1Nilxi41dqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2
qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TQpb5H6wF/3V746/bC
X7e/6+kG+Ov2wl+3z48u9WHA66qwii61sLGKLvVd1scqutTCxSq61Iesokst
vK4Kq+hSCxur6FLfXZhYRZc6P7rUh6yiSy08rKJLLQyr6FLfRY6sokstHKyi
S33IKrrUws2qcVhFl1oYVtGlvntSsYoudX50qQ9ZRZdauFhFl1p4WEWX+i75
ZBVdamFjFV3qQ1bRpRZOVtGlFm5W0aW+K09dFVbRpc6PLvUhq+hSCwer6FIL
F6voUt8FsKyiSy0Mq+hSH7KKLrWws4outXCyii71XYfLKrrUwuuquCqsokst
bKyiSy0crKJLfZcDs4outfCwii71oat0e3R7dHt0e3R7dHt0e3R7dHt0e3Q7
Xerz3gZxe6NLfRdHDxC3N7rU2ehSHwbE7Y0utRC3N7rUQtze6FLfvexYRZc6
G13qQ1bRpRbi9kaXWojbG13qu1ScVXSphbi90aU+ZBVdaiFub3SphddVuL3R
pb47+7GKLnU2utSHrKJLLcTtjS61ELc3utR34Tyr6FILcXujS33IKrrUQtze
6FILcXujS33X77sKtze61NnoUh+yii61ELc3utRC3N7oUl9GwCq61ELc3uhS
H7KKLrUQtze61ELc3uhSX83AKrrUwuuquAq3N7rUQtze6FILcXujS31RBavo
Ugtxe6NLfegq3N7oUgtxe6NLLcTtjS713QOTVXSps9GlPmQVXWqhbo9uj26P
bo9uj26Pbo9uj26Pbo9up0t9v8sCcXunS313BO0gbu90qQ8D4vZOl1p4XYXb
O13qC25YRZdaiNs7XepDVtGlFuL2TpdaeF2F2ztd6rs/KqvoUmenS33IKrrU
Qtze6VILcXunS335EavoUmenS52dLvUhq+hSZ6dLnZ0udXa61NnpUl8F5Src
3ulSZ6dLfcgqutTZ6VJnp0udnS51drrUF2Oxii51drrUv0vxRFbRpc5Olzo7
XersdKmz06W+JoxVdKmz06XOTpf6kFV0qbPTpc5Olzo7XersdKkvTWMVXers
dKmz06U+dBVu73Sps9Olzk6XOjtd6ivkWEWXOjtd6ux0qQ9ZRZc6O13q+55j
FV3q7HSpL9RjFV3q7HSps9OlPmQVXersdKmzX90e3R7dHt0e3R7dHt0e3R7d
Ht0e3U6X+r5eE8Ttgy51DrrUOehSHwbE7YMudQ661DnoUuegS33v8rOKLnUO
utQ56FIfsooudQ661DnoUuegS52DLvVFnKyiS52DLnUOutSHrKJLnYMudQ66
1DnoUuegS30tqatw+6BLnYMu9SGr6FLnoEudgy51DrrUOehSX9LKKrrUOehS
/66rFllFlzoHXeocdKlz0KXOQZf6ylpW0aXOQZc6B13qQ1bRpc5BlzoHXeoc
dKlz0KW+wJdVdKlz0KXOQZf60FW4fdClzkGXOgdd6hx0qa8zZhVd6hx0qXPQ
pT5kFV3qHHSp7wkEq+hS56BLfbkzq+hS56BLLcTtgy51DrrUOehS56BLfS+z
WUWX+qprVtGlzkGXOgdd6kNW0aXOQZc6B13qHFe3R7dHt0e3R7dHt0e3R7dH
t0e3R7fTpb7v/AHi9kmXOidd6sOAuH3Spc5JlzonXeqcdKkvhWcVXeqcdKlz
0qU+ZBVd6px0qXPSpc5JlzonXeor8l2F2ydd6px0qQ9ZRZc6J13qnHSpc9Kl
zkmX+g4GYBVd6px0qX+RjMgqutQ56VLnpEudky51TrrUdz4Bq+hS56RLnZMu
9SGr6FLnpEudky51TrrUOelS3zEJrKJLLcTtky71oatw+6RLLcTtky71rWAV
XWohbp90qXPSpT5kFV1qIW6fdKmFuH3Spb5DI1hFl1qI2ydd6kNW0aUWXlfh
9kmX+r4mrKJLLcTtky51TrrUh6yiSy3E7ZMutRC3T7rUd4QGq+hSC3H7pEt9
yCq61ELcPulSC6+rdHt0e3R7dHt0e3R7dHt0e3R7dHt0O13qc0gHcfuiS30Y
ELcvutRC3L7oUt/jdYLXVbh90aXORZf6kFV0qYW4fdGlFuL2RZf6jldhFV1q
IW5fdKkPWUWXWojbF11qIW5fdKnvlBdW0aUWXlfFVbh90aUW4vZFl1qI2xdd
6jtshlV0qYW4fdGlPnQVbl90qYW4fdGlPpezii61ELcvutS56FIfsooutRC3
L7rUQty+6FLf0TusokstxO2LLvUhq+hSC6+rcPuiS30/2VhFl1qI2xdd6lx0
qQ9ZRZdaiNsXXWohbl90qe8gIlbRpRbi9kWX+pBVdKmFuH3RpRZeV+H2RZda
iNsXXepcdKkPWUWXWojbF11qIW5fdKnvWCZWRbdHt0e3R7dHt0e3R7dHt0e3
R7fTpT4bNxC3b7rUQty+6VILcfumS31PviaI2zddaiFu33SpD1lFl1qI2zdd
aiFu33Sp76wsVtGlFl5XxVW4fdOlFuL2TZdaiNs3Xeo7sotVdKlz06XOTZc6
N13q3HSpc9Olzk2XOjdd6tx0qXPTpc5Nlzo3XercdKlz06XOTZc6N13q3HSp
c9Olzk2XOjdd6tx0qXPTpc5Nl/qQVXSphddVuH3Tpb7XB6yiSy3E7ZsudW66
1IesokstxO2bLrUQt2+61HecG6voUgtx+6ZLfcgqutRC3L7pUguvq3D7pkst
xO2bLnVuutSHrKJLLcTtmy61ELdvutR3uB2r6FILcfumS33IKrrUQty+6VIL
cfumS31n7LlKt0e3R7dHt0e3R7dHt0e3R7dHt0e306X+PecTA+L2Q5daiNsP
Xep7JT1B3H7oUguvq+Iq3H7oUgtx+6FLLcTthy71HXzIKrrUQtx+6FIfugq3
H7rUQtx+6FLf+wqsokstxO2HLnUeutSHrKJLLcTthy61ELcfutR3DCSr6FIL
cfuhS33IKrrUwusq3H7oUt+7LKyiSy3E7YcudR661IesokstxO2HLrUQtx+6
1HcoJqvoUgtx+6FLfcgqutRC3H7oUguvq3D7oUstxO2HLnUeutR56FILcfuh
Sy3E7Ycu9b315SrcfuhSC3H7oUt9yCq61ELcfuhSC3H7oUt9J5W6CrcfutR5
6FIfsooutRC3H7rUQtx+6FLfgamsokst1O3R7dHt0e3R7dHt0e3R7dHt0e3R
7dHtdKnvm+qCuP3SpRbi9kuX+o6PHSBuv3Sp89KlPnQVbr90qYW4/dKlvndn
WUWXWojbL13qvHSpD1lFl1qI2y9daiFuv3Sp7zBdVtGlFuL2S5f6kFV0qYXX
Vbj90qW+96pZRZdaiNsvXeq8dKkPWUWXWojbL11qIW6/dKnvaGFW0aUW4vZL
l/qQVXSphbj90qUWXlfh9kuXWojbL13qvHSpD1lFl1qI2y9daiFuv3Sp76Bl
VtGlFuL2S5f6kFV0qYW4/dKlFuL2S5f6znt2FW6/dKnz0qU+ZBVdaiFuv3Sp
hbj9Htx+6VILr6tw+6VLfcgqutRC3H7pUgtx+6VLfadfs4outfC6Kq7S7dHt
0e3R7dHt0e3R7dHt0e3R7dHtdqmxS41dauxSY5cau9TYpcYuNXapsUuNXWrs
UmOXGrvU2KXGLjV2qbFLjV1q7FJjlxq71Nilxi41dqmxS41dauxSY5cau9TY
pcYuNXapsUuNXWrsUmOXGrvU2KXGLjV2qbFLrdf3rLJL/f+rurMcy2EjCIBX
aorikve/2FRpfl4YMOAEbCPt6c55i4KMLjW61OhSo0uNLjW61OhSo0uNLjW6
1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6
1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6
1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSg0vtodvE
323vBxZe4u+2V/zd9oq/277+cKkdQ/zd9orXVqEVLrWfm6AVLrXipBUudf3h
UjvSCpda8dAKl1oxtMKl9jUXtMKlVpy0wqV2pBUuteKmFS614rVVaIVLrTho
hUtdf7jUjrTCpVZctMKlVjy0wqX2pR+0wqVWHLTCpXakFS614ksrXGrFTStc
at89YqvQCpe6/nCpHWmFS604aYVLrbhohUvtK1BohUutGFrhUjvSCpda8aEV
LrXiSytcat/EQitcasVrq9gqtMKlVhy0wqVWnLTCpfaFMLTCpVY8tMKldrRV
aIVLrThohUvt561ohUutuGiFS11/uNSOtMKlVnTb47bHbY/bHrc9bnvc9rjt
cdvjtsdtx6X2f+0isu0Dl1qRbR+41DVwqR1DZNsHLrXitRXbPnCpfVkQrXCp
Fdn2gUvtSCtcakW2feBSK15bse0Dl1qRbR+41DVwqR1phUutyLYPXGpFtn3g
UvvqJFrhUiuy7QOX2pFWuNSKbPvApVZk2wcutW9wshXbPnCpa+BSO9IKl1qR
bR+41Ips+8Cl9kVStMKlVmTbBy61I61wqRXZ9oFLrci2D1xq32dFK1xqxWur
2IptH7jUimz7wKVWZNsHLrWv1aIVLrUi2z5wqR1txbYPXGpFtn3gUvupVVrh
Uiuy7QOXugYutSOtcKkV2faBS63Itg9cal8yRitcakW2feBSO9IKl1rx2spt
j9setz1ue9z2uO1x2+O2x22P2x63HZfaf0AvkW1/cKkV2fYHl9oxRLb9waVW
ZNsfXGo/0UwrXGpFtv3Bpa4Hl9qRVrjUimz7g0utyLY/uNS+gI5WuNSKbPuD
S+1IK1xqRbb9waVWZNsfXGrfg2crtv3Bpa4Hl9qRVrjUimz7g0utyLY/uNS+
jo9WuNSKbPuDS+1IK1xqRbb9waVWZNsfXGrfCkgrXGrFa6vYim1/cKkV2fYH
l1qRbX9wqX05Ia1wqRXZ9geX2tFWbPuDS63Itj+41H72n1a41Ips+4NLXQ8u
tSOtcKkV2fYHl1qRbX9wqX1VI61wqRXZ9geX2pFWuNSK11Zs+4NLbQlBK1xq
Rbb9waWuB5fakVa41Ips+4NLrei2x22P2x63PW573Pa47XHb47bHbY/bjkvt
H/VJZNsnLnVNXGrHENn2iUutyLZPXGrzFFux7ROXWpFtn7jUjrTCpVZk2ycu
tSLbPnGpfZuordj2iUtdE5fakVa41Ips+8SlVmTbJy61LzWlFS61Its+cakd
aYVLrci2T1xqRbZ94lL7blVa4VIrXlvFVmz7xKWuiUtdE5e6Ji616RKtcKlr
4lLXxKWuiUvtaCu2feJS18SlrolLbUFFK1zqmrjUNXGpa+JSO9IKl7omLrXf
d9EKl9qQi1a41DVxqWviUtfEpXakFS51TVzqmrjU/nSSVrjUvneXVrjUNXGp
a+JSO9IKl7omLnVNXOqauNT+Do9WuNQ1calr4lLXxKV2pBUudU1c6pq41DVx
qa3raBW3PW573Pa47XHb47bHbY/bHrc9bjsutUfjIbLtLy61Y4hs+4tLXS8u
db241LaGL/Haim1/canrxaV2pBUudb241PXiUteLS23ySCtc6npxqevFpX62
0EgrXOp6canrxaWuF5fa8pJWuNT14lLXi0tdLy61I61wqevFpa4Xl7peXGoD
UFrhUteLS10vLnW9uNSOtmLbX1zqenGp68WltkOlFS51vbjU9eJS14tL7Ugr
XOp6can9IRqtcKnNYWmFS10vLnW9uNT14lI70gqXul5c6npxqf1VE61wqX17
Oa1wqevFpa4Xl9qRVrjU9eJS14tLXS8utR/IoBUudb241PXiUteLS+1IK1zq
enGp68WlrheX2kaZVrjU9eJS14tLXS8utSOtcKnrxaWuF5e6XlxqU2lbue1x
2+O2x22P2x63PW573Pa47XHb47bjUnt+B5FtX7jUtXCpa+FS18KlroVLbTj+
Etn2hUtdC5f6/UIaaYVLXQuXuhYudS1cavt1WuFS18KlroVLXQuX2pFWuNS1
cKlr4VLXwqU2o6cVLnUtXOpauNS1cKkdbcW2L1zqWrjUtXCprflphUtdC5e6
Fi51LVxqR1rhUtfCpfY3IrTCpfahArTCpa6FS10Ll7oWLrUjrXCpa+FS18Kl
9nMDtMKlroVLXQuXuhYudS1cakda4VIrsu0Ll9r/UVrhUiuy7QuXWpFtX7jU
jrTCpVZk2xcutf8X2IptX7jUimz7wqWuhUvtSCtcakW2feFS+/9IWuFSK7Lt
C5dakW1fuNSOtMKlVmTbFy61/zxphUuteG3ltsdtj9setz1ue9z2uO1x2+O2
x22P245L/V5dGUNk2zcutSLbvnGpfQrIS2TbNy614rVVbMW2b1xqRbZ941L7
l4xWuNSKbPvGpVZk2zcutaOt2PaNS63Itm9cap+JQitcakW2feNS18aldqQV
LrUi275xqT05tMKlVmTbNy61Itu+calr41LXxqWujUtdG5e6Ni51bVzq2rjU
tXGpa+NS18alro1LXRuXujYudW1c6tq41LVxqWvjUtfGpa6NS10bl7o2LnVt
XGpFtn3jUvvvAVux7RuXWpFt37jUtXGpHWmFS63Itm9cav91RCtcakW2feNS
K7LtG5fakVa41Ips+8al9t+KtMKlVry2Yts3LnVtXGpHWuFSK7LtG5fafznT
CpdakW3fuNSKbnvc9rjtcdvjtsdtj9setz1ue9z2uO1x23Gp/VN0iWz7waX2
S5VFZNsPLrUi235wqevgUjvaim0/uNSKbPvBpfbJUrTCpVZk2w8udR1cakda
4VIrsu0Hl9ov3GiFS63Ith9cakW2/eBSO9IKl1rx2optP7jUPmeLVrjUimz7
waWug0vtSCtcakW2/eBS+2UsrXCpFdn2g0utyLYfXGpHWuFSK7LtB5far6Zt
xbYfXGpFtv3gUtfBpXakFS61Itt+cKn9op5WuNSKbPvBpVZk2w8utSOtcKkV
2faDS+33FrTCpVa8tmLbDy51HVxqR1rhUiuy7QeX2m9xaHXY9oNLrXhtxbYf
XGpHWuFSK7LtB5fa77RohUutyLYfXGrFa6vYym2P2x63PW573Pa47XHb47bH
bY/bHrcdl9q/j4fItl9cap/P9xLZ9otLrci2X1xqxxCvrdj2i0vtt7+0wqVW
ZNsvLrUi235xqR1phUuteG3Ftl9cap9WSCtcakW2/eJS18WldqQVLrUi235x
qf1hAK1wqRXZ9otLrci2X1xqR1rhUiuy7fUakFa41D67kVa41Ips+8WlrotL
7UgrXGpFtv3iUvujEVrhUiuy7ReXWpFtv7jUjrTCpVZk2y8utT+hoRUuteK1
Fdt+canr4lI70gqXWpFtv7jU/qCIVrjUimz7xaVWZNsvLrUjrXCpFdn2i0vt
z6tohUutyLZfXGrFa6vYim2/uNSKbPvFpfbHZrTCpVZk2y8utSLbfnGpHW3l
tsdtj9setz1ue9z2uO1x2+O2x22P265LjS41utToUqNLjS41utToUqNLjS41
utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41
utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41
utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41
utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41
utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41
utTgUvu/ZxF/t73i77ZX/N32ir/bvv9wqR1D/N32ir/bXvHaKrTCpVYctMKl
Vpy0wqV2pBUuteKmFS61vx+zVWiFS604aIVL3X+41I60wqVWXLTCpfbXdLTC
pVYMrXCpFQetcKkdaYVLrfjSCpfa3xbSCpda8doqtMKl7j9cakda4VIrTlrh
UvtLS1rhUiseWuFSK4ZWuNSOtMKlVnxohUvt705phUutuGmFS614bRVbhVa4
1IqDVrjU/gqXVrjUiotWuNSKh1a41I62Cq1wqRUHrXCpfeI+rXCpFRetcKn7
D5fakVa41IqhFS61v9CmFS614qQVLrXiohUutSOtcKkVr63c9rjtcdvjtsdt
j9setz1ue9z2uO1x23Gp/SfyEtn2gUutyLYPXGrHENn2gUutyLYPXGrfxkAr
XGpFtn3gUvfApXakFS61Its+cKn9sAOtcKkV2faBS63Itg9cakda4VIrsu0D
l9rPXNAKl1rx2optH7jUPXCpHWmFS63Itg9caj/6QStcakW2feBSK7LtA5fa
kVa41Ips+8Cl9hMotMKlVmTbBy614rVVbMW2D1xqRbZ94FL7QRha4VIrsu0D
l1qRbR+41I62YtsHLrUi2z5wqX1vCa1wqRXZ9oFL3QOX2pFWuNSKbPvApfZj
QbTCpVZk2wcutSLbPnCpHWmFS614bcW2D1xq3+JCK1xqRbZ94FL3wKV2pBUu
tSLbPnCp/ZAUreK2x22P2x63PW573Pa47XHb47bHbcel9s/2JLLtDy51P7jU
jiGy7Q8utSLb/uBS+2odW7HtDy61Itv+4FI70gqXWpFtf3Cp/eQarXCpFa+t
2PYHl7ofXGpHWuFSK7LtDy61H6CjFS61Itv+4FIrsu0PLrUjrXCpFdn2B5fa
z/HRCpdakW1/cKkVr61iK7b9waVWZNsfXGo/TkgrXGpFtv3BpVZk2x9cakdb
se0PLrUi2/7gUvv2J1rhUiuy7Q8udT+41I60wqVWZNsfXGo/XEkrXGpFtv3B
pVZk2x9cakda4VIrXlux7Q8ute/CohUutSLb/uBS94NL7UgrXGpFtv3Bpfaj
prTCpVZk2x9cakW2/cGldqQVLrUi2/7gUvuJV1u57XHb47bHbY/bHrc9bnvc
9rjtcdvjtuNSeyUeIts+cakdQ2TbJy61Its+cal9T9pLvLZi2ycudU9cakda
4VIrsu0Tl9qPIdMKl1qRbZ+41Ips+8SldqQVLrUi2z5xqf00NK1wqRXZ9olL
rXhtFVux7ROXWpFtn7jUfiibVrjUimz7xKVWZNsnLrWjrdj2iUutyLZPXGrf
oUcrXGpFtn3iUvfEpXakFS61Its+can9iDqtcKkV2faJS63Itk9cakda4VIr
Xlux7ROX2jcK0gqXWpFtn7jUPXGpHWmFS63Itk9caj+wTytcakW2feJSK7Lt
E5fakVa41Ips+8SlthuwFds+cakV2faJS90Tl9qRVrjUimz7xKU2X6AVLrWi
2x63PW573Pa47XHb47bHbY/bHrc9bjsutfd2ENn2F5dakW1/cakV2fYXl9qX
Xr5Etv3FpVZk219cakda4VIrsu0vLrVNCa1wqRXZ9heXWvHaKrZi219cakW2
/cWlNm2hFS61Itv+4lIrsu0vLrWjrdj2F5dakW1/cal9EymtcKkV2fYXl7pf
XGpHWuFSK7LtLy61oQ+tcKkV2fYXl1qRbX9xqR1phUuteG3Ftr+41O9ieCLb
/uJSvzvIiWz7i0v9rrsmsu0vLvW7Wfk34lK/u4SJbPuLS/2urTXSCpf63ZBK
ZNtfXOp3GedvxKV+108S2fYXl/rddEhk219c6nepHpFtf3Gp3/1tvxGX+t1Y
RmTbX1zqdzkWkW1/canfPUxEtv3FpX5X/vzGuO1x2+O2x22P2x63PW573Pa4
7XHbcanf6xhjiGz7wqV+R/AT2faFS/1Oeyey7QuX+h0sbqQVLvU7w5rIti9c
6ndcMpFtX7jU72ReItu+cKnfIbC/EZf6HXtKZNsXLvU7YZPIti9c6neYo5FW
uNTv3MDfiEv9Tsojsu0Ll/odykZk2xcu9Tv/i8i2L1zqd9TUb8SlfocrEdn2
hUv9zvEhsu0Ll/odGUNk2xcu9Tud5DfiUr/zOIhs+8Klfkc/GGmFS/1OGSCy
7QuX+oH234hL/Qg3kW1fuNRPCxPZ9oVL/WAqkW1fuNTPQP5GXOqn/ohs+8Kl
fsCMyLYvXOpnmYhs+8KlfmzmN+JSPyhipBUu9TMJRLZ94VK/x9+JbPvCpX5P
Wv/GuO1x2+O2x22P2x63PW573Pa47XHb47bjUr/H0Yhs+8alfk8+Edn2jUv9
HrIhsu0bl/o9z0Fk2zcu9Xt0gMi2b1zq9y01kW3fuNTvC1EjrXCp33dvvxGX
+n3bRGTbNy71+2KDyLZvXOr3GTqRbd+41O/j2t+IS/0+oCSy7RuX+n0WRmTb
Ny71+9iFyLZvXOr3Dv834lK/97REtn3jUr+3T0Za4VK/V+pEtn3jUr8Xhb8R
l/q9DCKy7RuX+v2NS2TbNy71G3ci275xqd+O/EZc6vebQ2TbNy71+0Misu0b
l/plItu+can1D7Z941L3xqV2pBUutSLbvnGpfTwDrXCpFdn2jUutyLZvXGpH
WuFSK7LtG5fap0TQCpdakW3fuNSK11axldsetz1ue9z2uO1x2+O2x22P2x63
PW47LrV/AQ+RbT+41Ips+8GlVmTbDy51H1xqxxCvrdj2g0vtoztohUutyLYf
XGpFtv3gUjvSCpda8dqKbT+41Ips+8GlVmTbDy51H1xqR1rhUiuy7QeX2geZ
0AqXWpFtP7jUimz7waV2pBUutSLbXjtBK1xqRbb94FIrsu0Hl7oPLrUjrXCp
Fdn2g0vtY11ohUutyLYfXGpFtv3gUjvSCpdakW0/uNQ+XYZWuNSK11Zs+8Gl
7oNL7UgrXGpFtv3gUvuQG1rhUiuy7QeXWpFtP7jUjrTCpVZk2w8utc/aoRUu
tSLbfnCpFa+tYiu2/eBSK7LtB5faR/7QCpdakW0/uNSKbPvBpXa0ldsetz1u
e9z2uO1x2+O2x22P2x63PW47LrWnbBPZ9otLrci2X1xqRbb94lI7hsi2X1xq
v76gFS61Itt+cakV2faLS90Xl9qRVrjUimz7xaX2cVC0wqVWZNsvLrUi235x
qR1phUutyLZfXGqfSmUrtv3iUiuy7ReXui8utSOtcKkV2faLS+3DsWiFS63I
tl9cakW2/eJSO9IKl1qRbb+41D6ji1a41IrXVmz7xaXui0vtSCtcakW2/eJS
+6gwWuFSK7LtF5dakW2/uNSOtMKlVmTbLy61TyyjFS61Itt+cakVr61iK7b9
4lIrsu0Xl9oHp9EKl1qRbb+41Ips+8WldrQV235xqf2+hFa41Ips+8WlVmTb
Ly51X1xqR1rhUiu67XHb47bHbY/bHrc9bnvc9rjtcdvjtutSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS
o0uNLjW61OhSo0uNLjW41P4jeIm/217xd9sr/m77+cOldgzxd9sr/m57f/K3
iddWoRUuteKgFS71/OFSO9IKl1px0QqX2ge10gqXWjG0wqVWHLTCpXakFS61
4ksrXGqfF0srXGrFa6vQCpd6/nCpHWmFS604aYVL7WNraYVLrXhohUutGFrh
UjvSCpda8aEVLrVPz6UVLrXiphUuteK1VWwVWuFSKw5a4VL7EF9a4VIrLlrh
UiseWuFSO9oqtMKl9mfktMKlVpy0wqVWXLTCpZ4/XGpHWuFSK4ZWuNQ+0phW
uNSKk1a41IqLVrjUjrTCpVa8tgqtcKkVB61wqRUnrXCp5w+X2pFWuNSKh1a4
1D7gmVZx2+O2x22P2x63PW573HZcan9/Qqu47bjU/mGeRLZ94FLPwKV2DJFt
H7jU/hpnE9n2gUutyLYPXGpFtn3gUjvSCpdakW0fuNQ+dZtWuNSK11Zs+8Cl
noFL7UgrXGpFtn3gUvvwb1rhUiuy7QOXWpFtH7jUjrTCpVZk2wcutc8gpxUu
tSLbPnCpFa+tYiu2feBSK7LtA5faR6HTCpdakW0fuNSKbPvApXa0Fds+cKn9
TSOtcKkV2faBS63Itg9c6hm41I60wqVWZNsHLrUPhqcVLrUi2z5wqRXZ9oFL
7UgrXGrFayu2feBSK7LtA5dakW0fuNQzcKkdaYVLrci2D1xqH5NPK1xqRbZ9
4FIrsu0Dl9qRVrjUimz7wKX2af22ctvjtsdtj9setz1ue9z2uO1x2+O2x23H
pfYsPES2/cGldgyRbX9wqf2d/Cay7Q8uteK1Fdv+4FLPg0vtSCtcakW2/cGl
9hUKtMKlVmTbH1xqRbb9waV2pBUutSLb/uBS+yYHWuFSK7LtDy614rVVbMW2
P7jUimz7g0vtCyVohUutyLY/uNSKbPuDS+1oK7b9waX28xq0wqVWZNsfXGpF
tv3BpZ4Hl9qRVrjUimz7g0vt6zVohUutyLY/uNSKbPuDS+1IK1xqxWsrtv3B
pVZk2x9cakW2/cGlngeX2pFWuNSKbPuDS+3LRmiFS63Itj+41Ips+4NL7Ugr
XGpFtv3BpfadJ7Zi2x9cakW2/cGlngeX2pFWuNSKbPuDS+2rV2iFS63otsdt
j9setz1ue9z2uO1x2+O2x22P245L7YEdRLZ94lIrsu0Tl9oPWG0i2z5xqRXZ
9olLrci2T1xqR1rhUiuy7ROX2vfh0AqXWpFtn7jUitdWsRXbPnGpFdn2iUvt
a3lohUutyLZPXGpFtn3iUjvaim2fuNR+6o1WuNSKbPvEpVZk2ycu9Uxcakda
4VIrsu0Tl9qXFNEKl1qRbZ+41Ips+8SldqQVLrXitRXbPnGpFdn2iUutyLZP
XOqZuNSOtMKlVmTbJy61r2yiFS61Its+cakV2faJS+1IK1xqRbZ94lL75ihb
se0Tl1qRbZ+41DNxqR1phUutyLbXP2mFS614bcW2T1xqRbZ94lI70gqXWpFt
n7jUvkeLVrjUitdWbnvc9rjtcdvjtsdtj9setz1ue9z2uO241O8VgzFEtv3F
pfbTspvItr+41Ips+4tLrXhtFVux7S8utSLb/uJS+3IzWuFSK7LtLy61Itv+
4lI72optf3Gp/ewwrXCpFdn2F5dakW1/cannxaV2pBUutSLb/uJS+6o3WuFS
K7LtLy61Itv+4lI70gqXWvHaim1/cakV2fYXl1qRbX9xqefFpXakFS61Itv+
4lL74jta4VIrsu0vLrUi2/7iUjvSCpdakW1/cal9/56t2PYXl1qRbX9xqefF
pXakFS61Itv+4lL7GkBa4VIrsu0vLrUi2/7iUjvSCpdakW1/cal9GyGtcKkV
r63Y9heXel5cakda4VIrsu0vLrUvRaQVLrUi2/7iUiu67XHb47bHbY/bHrc9
bnvc9rjtcdvjtsdtx6X2z8klsu0Ll9pXRC4i275wqRXZ9oVLPQuX2tFWbPvC
pbbAoBUutSLbvnCpFdn2hUs9C5fakVa41Ips+8Kl9oWZtMKlVmTbFy61Itu+
cKkdaYVLrXhtxbYvXGpFtn3hUiuy7QuXehYutSOtcKkV2faFS+3rQ2mFS63I
ti9cakW2feFSO9IKl1qRbV+41L7F1FZs+8KlVmTbFy71LFxqR1rhUiuy7QuX
2pep0gqXWpFtX7jUs3CpZ+FSO9IKl3oWLrWtEq1wqWfhUs/CpZ6FS+13KbTC
pXakFS71LFxqkyla4VLPwqWehUs9C5d6Fi71+yzPSCtc6lm41JZbtMKlnoVL
PQuXehYu9Sxc6lm41I60itsetz1ue9z2uO1x2+O2x22P2x63HZfav3GHyLZv
XOrZuNSzcaln41LPxqWejUvtGOK1Fdu+cal97TCtcKln41LPxqWejUs9G5fa
kVa41LNxqa36aIVLPRuXejYu9Wxc6tm41LNxqR1phUs9G5fauNBWbPvGpZ6N
Sz0bl3o2LvVsXGpHWuFSz8altnGkFS71bFxqzwStcKln41LPxqV2pBUu9Wxc
alNLWuFSz8alno1L7RfTtMKlno1L7UgrXOrZuNQWn7TCpZ6NSz0bl/r/1sSf
iEs9G5d6Ni71bFzq2bjUs3GpZ+NSz8alno1LPRuX+p9Z/ERc6tm41LNxqWfj
Us/GpZ6NSz0bl/r/x/83su0bl3o2LrUjrXCpZ+NSm+HSCpd6Ni71bFzq2bjU
s3GpZ+NSO9rKbY/bHrc9bnvc9rjtcdvjtsdtj9setx2X2tu1iWz7waWeg0s9
B5d6Di71HFxqxxDZ9oNLbRtNK1zqObjUc3Cp5+BSz8GlnoNL7UgrXOo5uNQm
2rZi2w8u9Rxc6jm41HNwqefgUjvSCpd6Di61pTitcKnn4FL7NR+tcKnn4FLP
waV2pBUu9RxcaoN1WuFSz8GlnoNL7U9GaIVLPQeX2pFWuNRzcKnt5mmFSz0H
l3oOLvUcXGp/f0ArXGpHWuFSz8GlNt+nFS71HFzqObjUc3Cp5+BSv2/ZjbTC
pZ6DS+1TBGiFSz0Hl3oOLvUcXOo5uNRzcKkdaYVLPQeX2ocZ0AqXeg4u9Rxc
6jm41HNwqefgUjvaim0/uNQ+U4FWuNSKbPvBpVZk2w8u9Rxcakda4VK7Mq3i
tsdtj9setz1ue9z2uO1x2+O2x23Hpfa/cxHZ9otLrci2X1zqubjUjiGy7ReX
2gdd2Iptv7jUimz7xaVWZNsvLrUjrXCp/XNEK1xqxWsrtv3iUiuy7ReXei4u
tSOtcKn940wrXGpFtv3iUiuy7ReXWpFtv7jUjrTCpfZvFa1wqRXZ9otLrXht
xbZfXOq5uNSOtMKl9i83rXCpFdn2i0utyLZfXGpFtv3iUjvSCpfaG0MrXGpF
tv3iUiuy7ReXWvHaKrZi2y8utaeOVrjUimz7xaVWZNsvLrUi235xqR1txbZf
XGqfTEMrXGpFtv3iUiuy7ReXei4utSOtcKk9/LTCpVZk2y8utSLbfnGpFdn2
i0vtSCtcav/9Yyu3PW573Pa47XHb47bHbY/bHrc9bnvcdl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q
dKnRpUaXGl1qdKnRpQaX2j+9k/i77RV/t/3+4VI7hvi77f3W6hB/t73i77ZX
vLYKrXCpFQetcKkdaYVL7Xd4tMKlVty0wqVWvLYKrXCp9w+X2pFWuNR+o0kr
XGrFRStcasVDK1xqxdAKl9qRVrjUfr9LK1xqxZdWuNSKm1a41IrXVrFVaIVL
7bfdtMKlVpy0wqVWXLTCpVY8tMKldrRVaIVL7VMSaYVLrThphUutuGiFS71/
uNSOtMKl9ocQtMKlVhy0wqVWnLTCpVZctMKldqQVLrU/C7FVaIVLrThohUut
OGmFS71/uNSOtMKl9kcytMKlVgytcKkVB61wqRUnrXCpHWmFS+1PhmiFS614
beW2x22P2x63PW573Pa47XHb47bHbY/bjkvtHXiIbPvApXYMkW0fuNQ+T3QT
2faBS614bcW2D1zqHbjUjrTCpfbHdbTCpVZk2wcutSLbPnCpFdn2gUvtSCtc
an9qSCtcakW2feBSK7LtA5da8doqtmLbBy61P7ykFS61Its+cKkV2faBS63I
tg9cakdbse0Dl9pnzdIKl1qRbR+41Ips+8Cl3oFL7UgrXGp/lEsrXGpFtn3g
Uiuy7QOXWpFtH7jUjrTCpfYnyrZi2wcutSLbPnCpFdn2gUu9A5fakVa41P5g
m1a41Ips+8ClVmTbBy61Its+cKkdaYVL7c/XaYVLrXhtxbYPXGpFtn3gUu/A
pXakFS61P+anFS61Its+cKkV3fa47XHb47bHbY/bHrc9bnvc9rjtcdtxqb2o
g8i2P7jUimz7g0vtw6E3kW1/cKkV2fYHl1r/mm1/cKkdaYVL7e9eaIVLrci2
P7jUimz7g0uteG0VW7HtDy61vwKiFS61Itv+4FIrsu0PLrUi2/7gUjvaim1/
cKl9YjetcKkV2fYHl1qRbX9wqffBpXakFS61vxCjFS61Itv+4FIrsu0PLrUi
2/7gUjvSCpfa38vZim1/cKkV2fYHl1qRbX9wqffBpXakFS61vx6kFS61Itv+
4FIrsu0PLrUi2/7gUjvSCpfa31LSCpda8dqKbX9wqRXZ9geXeh9cakda4VL7
y1Ja4VIrsu0PLrUi2/7gUiuy7Q8utSOtcKn9nS2tcKkV2fYHl1rx2sptj9se
tz1ue9z2uO1x2+O2x22P2x63HZf6/d1sDJFtn7jUPul/E9n2iUutyLZPXGrF
a6vYim2fuNT+Ip1WuNSKbPvEpVZk2ycutSLbPnGpHW3Ftk9cat97QCtcakW2
feJSK7LtE5d6Jy61I61wqf1YAa1wqRXZ9olLrci2T1xqxd72f6BKupY=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   12.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.770629696694792*^9, 3.770629897331381*^9, 3.770629928777337*^9, 
   3.770629963731522*^9, {3.7706435835444937`*^9, 3.7706436027342176`*^9}, 
   3.7706555915697756`*^9, 3.7706660338706794`*^9, 3.7707185696012955`*^9, 
   3.7707232933643713`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ae1a5398-d357-4113-a0bc-bcdce7f05c72"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualizing the data is now simple.  Note that the period during which the \
hot tub was unplugged, from mid-April to mid-May appears to have lower energy \
consumption than the periods during which it was operating.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7706635394369335`*^9, 3.7706635988524914`*^9}, {
  3.770664691619166*^9, 3.7706647104198685`*^9}, {3.7706647569802923`*^9, 
  3.770664807529974*^9}, {3.77072331210859*^9, 
  3.770723355300607*^9}},ExpressionUUID->"fb56de0a-27ab-456d-9ad1-\
c3b03243bc27"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "usageTS", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7706635873160496`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"595293da-9c7b-4245-a20d-e02fdf4da0c7"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQQBB/+/dtwh1/o6cMc+ewaGhgMgfv+hrxox/a+A
fAbDQ0C+ZgxIZA9IfuEhFPUMQoeB/CUFtlzXFx8AyTeB+LNmgsBOkPznw6jm
Jx8B8o3B4DBI/soRVHmXo0A+yLQCW7D9W4+iyqseQ7V/Giq/ge04qnw5Kr/h
+XEU/zBEnEB1/4kTqPZbnkT1/0oQ/00gyMSDIHmpU6jyXah8ht+nUO3PPo0q
fwfErxZZ5/6w6ghI3ucMPHxeg+T3nkHVr3sWyC8EO/AsSH4eiB8EVnACJM93
Dsh/WAUy8BRIvv4cqvnvz6GGf8J5FP80XDgPj7+XIHnHCyjmNWxE8G8B+Q7f
QHwPsMBHewATjB7j
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQ3WmttPLS/9eOHg+rRNa5f7QHCj0B8TVj+g991XgC
5DeEXAbyjcHgMkj+KIjPdX1xgS3Xc5C86RUg//BXDaCOoyD5ZSB+0A651teB
J0DyYleB/FkzQeAkSL79Kqr8d1Q+Q8Y1VPkb11D1e14H8sHSO86B5Hei8hm0
bsD9cxEkPwvETwODayB57ptAPki1XOtjkHz1Tbh/94Dk36DyG2JuAflLgL69
vvgASP7sLbh7doLkbW+j6l93G0V9g9wduPv2geT7UfkN/++g6i+4C+TbggP4
Fkj+AYj/DRS8Xx+A5APvoYbPQVQ+g9F9uP0g9Q2L7qPqF34AD5+HIPlmEP8N
KDheg/gMX0B8kGti+h+B5FMewv370P6p6ZdND5HSCwADch+L
       "]], 
      LineBox[{{3.758034891549296*^9, 1.08}, {3.7580355*^9, 0.6}, {
       3.7580364*^9, 0.63}, {3.7580373*^9, 0.67}, {3.7580382*^9, 0.68}, {
       3.7580391*^9, 0.75}, {3.75804*^9, 0.74}, {3.7580409*^9, 0.73}, {
       3.7580418*^9, 0.66}, {3.758042440677966*^9, 1.08}}], 
      LineBox[{{3.7580429154929576`*^9, 1.08}, {3.7580436*^9, 0.54}, {
       3.7580445*^9, 0.53}, {3.7580454*^9, 0.57}, {3.7580463*^9, 0.54}, {
       3.7580472*^9, 0.54}, {3.7580481*^9, 0.7}, {3.758049*^9, 0.75}, {
       3.7580495120689654`*^9, 1.08}}], 
      LineBox[{{3.7580502358208957`*^9, 1.08}, {3.7580508*^9, 0.66}, {
       3.7580517*^9, 0.6}, {3.7580526*^9, 0.58}, {3.7580535*^9, 0.64}, {
       3.7580544*^9, 0.63}, {3.7580553*^9, 0.57}, {3.7580562*^9, 0.57}, {
       3.758056855714286*^9, 1.08}}], 
      LineBox[{{3.758057347826087*^9, 1.08}, {3.758058*^9, 0.58}, {
       3.7580589*^9, 0.57}, {3.7580598*^9, 0.57}, {3.7580607*^9, 0.53}, {
       3.7580616*^9, 0.46}, {3.7580625*^9, 0.48}, {3.7580634*^9, 0.69}, {
       3.7580643*^9, 0.95}, {3.7580652*^9, 0.46}, {3.7580661*^9, 0.47}, {
       3.758067*^9, 0.45}, {3.7580679*^9, 0.48}, {3.7580688*^9, 0.47}, {
       3.7580697*^9, 0.45}, {3.758070466216216*^9, 1.08}}], 
      LineBox[{{3.7580707375*^9, 1.08}, {3.7580715*^9, 0.47}, {3.7580724*^9, 
       0.48}, {3.7580733*^9, 0.49}, {3.7580742*^9, 0.48}, {3.7580751*^9, 
       0.45}, {3.758076*^9, 0.47}, {3.7580769*^9, 0.75}, {3.7580778*^9, 
       0.89}, {3.7580787*^9, 0.47}, {3.7580796*^9, 0.46}, {3.7580805*^9, 
       0.46}, {3.7580814*^9, 0.49}, {3.7580823*^9, 0.49}, {3.7580832*^9, 
       0.52}, {3.7580838631578946`*^9, 1.08}}], 
      LineBox[{{3.758084343243243*^9, 1.08}, {3.758085*^9, 0.54}, {
       3.7580859*^9, 0.43}, {3.7580868*^9, 0.4}, {3.75808736146789*^9, 
       1.08}}], 
      LineBox[{{3.758090243478261*^9, 1.08}, {3.7580904*^9, 1.}, {
       3.758090688*^9, 1.08}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ/ax865y//187ejysElnn/tEeKPQVxC+05bq+uOAu
kN+Q+g/OPwuSvwbig5U/PAWSd/sP5GvG9B/6qnEGJL8dld+gzsDwxnGHXOvr
wB3nQPIzQPwlBSADL4DkORhR+AyVID6S/pcgPpgb8x4kH8UE5CPc03CKCW7+
PpC8NTPcvAMg+dXMqPIyLED+rJkgsBMk38MCt28PSP4vmnwuK6r8PRC/GuT9
qi0geT82IP9NIMiGjSD5/Wwo6hv02YF8oGOBDnoNkl8A4geBHXQCJC/AAeQf
Bvqu/9BRkHwjiA+Jj4sg+SMI/kd7AM8jsg4=
       "]], 
      LineBox[{{3.7581161166666665`*^9, 1.08}, {3.7581165*^9, 0.62}, {
       3.7581174*^9, 0.9}, {3.7581183*^9, 0.96}, {3.7581192*^9, 0.28}, {
       3.7581201*^9, 0.72}, {3.7581203817391305`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxVlV1Ik1EYx09eBI1cmTo3dV/pdNNNp9uaHxMLAoWC0KIuWgVFBgVpRV1M
ikOwoCCkoAulLkKDgogCoUkS6gztw7KkJnURMypyoy+oqIvo/b/Bqf8BkR+/
9znnec7HM+fu7s69OUKIHu0P/83dbyPLRXZdezpWcKPtS6sQ8ig425GwxTNP
NRbv/nmw3JqrsSE12NNiSMFPgbv08QI+bNTYHs9oMzyHv2rkePMKnv80uG/i
mzva9wz+Jzigjzn4/SuJ5UtwJ8I7PsNvyOP4O+BDLchwBt67Sn0/DX8R3Ktl
k45Nwufma5xE+MQ9+OP5ar0k/EdmubNA4yFUPzgG/6RA1TMO31qosb5c4i78
TfBAP8YHeIdJY08UGY/CnzOp/bwNv6RIfT8Cf7iI/QKz2Gym72WSWQQt7Ics
qv5h+MJi9nGwflzpRfjvxVxfVwnPnyrh/NpKub5EKXu3leP7reyX2djHmOWi
jfPfbqd85UM7rx9xcPx1B++f1UnzybNOXv+3k85bHlzN8a+Z5aYyjh8r4/3z
l2v89/lk4C+X032ReS613iz8SRffv68uvl97KlT9D+DnKtR91t/f+kqVz334
4UrKR7jc9F7kBWax1KP2E+9NHvNwfu89/L63Van8HsNPV/H8DdXsr1VzvMXL
7+sMs/zl5f0/4OP9f+Xj/rKxRvWHBfjRGtoP4avl+3Gplu+P0c/+BLP45Ofz
21VH5yFm67j+tfXcP2/Vc39zBtT6WfjzAa4/J0j7JY4E2b8Jqvmn4LeEuL9N
hqgfitAazu8KszCFqZ/LU2F1f/X+/AM88wgD+cp9DRw/zyzbG/n8Rxr5/D1N
7AeauL8bmolFL1joA/dRZppVffPw0YjKX/992xH57/fuD8P/opw=
       "]], 
      LineBox[{{3.7582221272727275`*^9, 1.08}, {3.7582227*^9, 0.38}, {
       3.7582236*^9, 0.38}, {3.7582245*^9, 1.}, {3.7582246469387755`*^9, 
       1.08}}], LineBox[CompressedData["
1:eJxdlE9IFFEcx3/UQahDIAtBh6IOoR2CCIIOuq3ruu4/d3d0dXUnECnoEOwK
QqKCAyIeOuxBEEzwYOHBwx5CycQilSCljYIiDUs3BLPmYMRK0KX3fYenXweG
4cPn937fN++9mYtdWevuCREJqBtPke2IV1xfY6nPUwj+9oo4WXC/olKf60UB
2E3Onx/+tQSfuKX4ur5W4JfAT3I1pz4/fgV/zWfGz8JPgZVUFc/gK+vYD4Ef
jePag/9zyM/h7/ip3vnop34SqGc/xyyXA5w/xiwVDTz+AbP8OObTQcVYjeT8
S/jVIM3XudmouEYH/ISfAVfb+eVy1SL8uRDnPwxRP+ffMX8/zPmbYfaxCL/f
C2a5GuXxk1Fe3zMxnt9gjP0+WGt7F76zydRvwn845Lfwvjivz9M4n59LCWIZ
TfD5OZlUvKLS8suf4HvAB8DyOvwO2NIBYElZnP/aMv3ew99oNvVv4Kebzfze
wZ9tUayPf+k7/EiL+R5K8H/B3XpDi/D3UqZ+DX4jxfmhVmJZaKU850ob50+0
cf/TacX60xQ9/wFmx01TvdxuN/u1Cl9sN/k78LUd5jzq9yt0mPXchr+QUayP
h+cbfD5j+n+FF5v228nZpt8Xb29vess+8v/4D0Hjpt8=
       "]], LineBox[CompressedData["
1:eJxdlE0oxEEYh4ccJAfFQSmRA3JQHJSSUMhBrYNS62OXXXZZu4tlV6k5UJLi
oETKYZWkOCgfkXyECPkIUdQqSj5KcVAO5vdXk5+pbXt65n3nnXln/slWd4Ut
XAhRpH7Gf9/AvVm8FJSGuuPmSt7zhZCmasVRV0FPXtSVYrEF/sVz+KwaxcIY
J/BBsBEeOoCPrVWcbh7a+kw7hO8FLyf2PZuWj+E/anX+PXhbneIXE2acwl+A
ka077g6+2EIsFy1Uj0i1KrYb4xJ+1Errich6qkf663W+N/gn8BTSBbEfWdXA
9R+AvdCeI/hcm56/AT/LLBPsev11+EG7zrcG/80sXI16/5vwt+BsY2zDlzcp
3v5MUxE78OtNHJ/pUDw+hnENP+nQ/QzBxzi5PunU81fg35mlpVn3Zwn+rJl9
YQuvv8AsU1wcP+Li+IhWXt/HLB9a6bxFpVv36xF+183xOR6On2YW8V6ur9/L
/uufd7Rx/26YZVk793+1nfYrMzr4fCY62Ef7dH+e4Ht83P9XH9dX08nv77hT
3w/j/ud36fn78PNdfH+T/Hz/h/30XkVYgN+vN0DnvTET+PN9+AGEFais
       "]], LineBox[CompressedData["
1:eJxdlgtoTmEYgN8ImSjXcpsIjSjXclsIIYqh3FbkHsVQbnM57GZjfpvbNjab
XYxt/zbb7N/sPrMJUa65D9kwd6PI5bynHJ7/1FrP/5z3O+/3nu97z9dzybpZ
y5uISJb5p/9jI8Ju+0vD+Cm12zo4J38cK2J02G6yCeYvj02WIOWYaL0K1Dcq
e9xN9PP2yFe/YgfYuEOWyTtN9nVUNHr5PlGfr7zeW+94pN5rF+OjlP2tBHLV
tzTotxr0r938gt18/hVll2fQGx9XifrRexifrtzgo3dkq+8WYN/vVB8eQP9T
Wazrhvq1gSYPta7n6h8H4n6ZEcT4UrIMCmb+8cH0bUOQj7E7hP4T2Viyl/O7
STYmhOJ9Sm4on987jPU7Esb4Zvs4/iZla7k469S/3Mf85u5nftVkGRHO8VPD
6TsfYHwoWb67+dUO5vfAQT/tIOOLyMaACPrYf/xKfetI1m9nJPN/F8n6LTrE
8a+TZdxh1j/rMH3PI4yPIEuTo9yfG5T7WRvuofrnyl+99Id76mcfY/xFsjEs
ius/OYq+YzTnFxxN/5UsK2NYn7sx9FOOm2y1n9r76l3Ks6wEnqrvd4Lx0Sf4
fI9Y7o9tsXz/b8jGwjj6q3HMf8xJez9Xqs9QrmzUAlap7x7P/A7E2/k/U/8r
HvfLugTGP0mw42vUzzxlz6dafRlZBicyPiGR9WuXxPz3JPH9fXbzS5OxHuRW
MvvzxBTWNy+F9etzms8/Sjaap9JvTmV8nZufd4bxNWQZeZb+DFm6pHH/hKVx
/j/SGL8mnfEP09m/pmfQF2cw/4FO+jgnfZtM1m9XJv37TMYvzmL+N7K4Psdn
c31nZzO+1znOL/Ic45vm2P3B6l8bc1ifFzmMn5PL8aty+fzheZxfSh7n1+k8
vrcSQja+uflV+SYn+emBoEz9PbJMddn5lKsvcNnrt159/wL2txhlazk7dD9K
q0I7vla9fyH2qzQU8vvte4H+mrJ1XPG29rd3EVicRegHhmexnY/VHxzKPXS6
nm/V/y6241+r9yux52vFPy1hf/Ep5fjlpRx/SJn8f14zTpWhn0r7cvbXALJ8
Kcf3wlhWQX+7wl4/Vv0mVcrf888H9ecrOX7fi/z+HFO+dlUva/wWVWDZUsX4
erLMv8T8Ll9CvWRUtfw9v1r5na2m71pDDqyRf+fdP3jok5Y=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQfUfw+9QTDG8cPR5Wiaxz/2gPFPoD4gM5QJFnQH5D
zkkgf0mBLdf1xQ9A8ndPwtU/BMn7ngLyY/oPfdWIuQ+S3wfiQ6RvgeT1TqPq
nw/iM4ABiN/AfwbIP3sGBO6A5BtAfKBioI7jIPkPIH412EFbQPKJZ+H8IyD5
i6h8BqdzcP4TkPwmEL/1deAOudbbIHnl80B+EJD3OvAESH7yebj7DoDkWS4A
+W9Ayl9vBMmXXEC1/ymafOhFuHu3g+SPofIbzC6hyi9H5TeIX0Y1vwOV3/Dj
Mty+lyD5zCso4dVw8wqK/wTsryLFJwCoz8sW
       "]], 
      LineBox[{{3.75853334*^9, 1.08}, {3.7585341*^9, 0.7}, {
       3.7585346029411764`*^9, 1.08}}], 
      LineBox[{{3.758535947368421*^9, 1.08}, {3.7585368*^9, 0.72}, {
       3.75853730625*^9, 1.08}}], 
      LineBox[{{3.758538225*^9, 1.08}, {3.7585386*^9, 0.88}, {
       3.7585388117647057`*^9, 1.08}}], LineBox[CompressedData["
1:eJxdm3VYVU0XxedcC7FQUbFARAQsFFSM1+5Esbu7W7HG7u7uVuzu7k4QkBIk
BRUUFf3uHJ/vwI/7j89y3b332jEzJy72vUd49TMJIRwzCKH+9fNcu/2diKnT
ONjb2qdRQi3zfz1ReLIZBXuHmbGs6WvGGzeoT7Dijypcw/LtrpE1QhRv50d+
uZ/B+ylevDf4+4ofRSyD0/Fe/mZ8M9G567IbtxV/Q+GY1uds50QfV7x7gBnr
7i3PKn5XgMFHKt46kPzsQCOfU4pPDDTinVd8vw9m7GKOluh8SfFviGXDIPgT
Z4PIOwXT//pg+rcIof5JIfi+jCQWnUON+kUp/kGowd9SfPUw+j8URv1FPjL/
xR/xfZFCLIeFU19gOPNrGUF9VyPwfen6ifz2T+StIs04SbUz8ZPiZ0RSX0Ik
4/eOYn1eRJGvF03+ZDTzLxHD/FbHUF+mWNqPi6X/8Fjat48zY/Vta58Ixd+N
o73HZ/rfTyxt4skviKf/ZGIxOIG8XwLnr9kX1u+iwrtHqom5pvgyXxl/81eD
1+uf4xv7M/Ub/ccRy+6J5J8m0n+tJNbvWBL5Yt+Z/4rv9K/9oP/RxDJEYb29
XfX6t0mm/5vJtK/4k/zun9SX7xf5Ob/IJ6Xj+/+m/7e/yTdKYX7nUlhf5z/k
NxDLrH/ZH++/7H+Uwl7KXet7iu8iNOyPDxX+p++u4v/TNOyvhzXyRU3Acgmx
+KNwajw5PIMZ6/DcFcV/yKChP54ZNeR3jViWz4Tvix2ZDP8qX5k7s4b5n5mZ
9l8UTtOfPlmA5cssjF/fgvanLBjfMSvt12SlfWZL6JHjLclHWFJ/h2yGv+uK
v5eN9amSnfoPZKe+gjnof2EOxv+Zjh+Sk/rf52R+zXPR/6Vc7G9ZKzPWaetw
xW+xor6cuWk/LTf9f87N+D3ysH/P8jD/2nnJHyeW9tbMb6XC/65H1HkuTfnI
jyGWofmor21+DefXLWJRqQDmWe4pQP/5bah/rg3Wk/iusJ0yt/2o+AEFuT7e
FWT8xoXo/3whxncpTH0biaVlEdZvMrGMVliXMydU8V2Lcv0/Ksr4NWwZ/wix
sLUjv5RY/LVjfUYUo/8ghfX2BT9QfCt7Mx6lX9Coeonr9rSvUJzzt7M4+5vH
gfwsB/JfHdj/viXIvypB+waO5E87ki9Z0ozd9Y+qp1xb0uj3a8VnceL+OcEJ
+6X45GT075HiOzpzfu47c3+t6oL9XBx04foqVIr1XVSK/K90/NDSzM+/NOvT
ogztLyusH6/L1PW8KFfW+P5bxW8ty/nMVY7zOb0c/ceXY/yertT33JXzW6c8
+RPlyRevQH5VBcbP4Kbh+mesG/ePMDfqb+dO+9vu9F+5IvXvrcj5KFCJ8zuv
Eu1/pOMHVub68a1srA/9+r6JB/VfIJalqtB+E7HMVpXxpxDLmHR8t2rs/+Nq
rE/N6qyfT3XGt/uP8ZcRmzcY6h9Zg/6Da1Bf65qs742a7L9bLc7XLoXT3B/l
rc36za5Nfd+IRb869P+6DuvTsC7n40xd7r9O9Wi/rh7zs6hvrCdd38T6jB9J
LDs1oP8HDTg/1RqyPocaki/cSMP1x+JG3J9+NzLye6X4YY0NrN/fBzRm/JZN
6P9KE9bHtSn5bcTCqhn7K5tRf0I6vldz43wIUPyL5tiPZN0W3D9PEkuHltx/
V7fk+ZPRE/UQ4zzZv4+e1Ne+FfXdIRYerbl+9rUmb+Ol4fpwvhf9J3vR/6A2
5P3akG/alv4vtuV8lm7H+drcjnz29rSfSixj27P/3TvQ/kkH8rU6Mr+jHRm/
WCfWZ3knrg+tM/2PIhYhndkfry7Uf5NYunfl/O3uSt66G/XP6cb9I7Eb94/+
3bl/velOfY160P9ZYuHck/x6YpG1F/lJvbh+o3oxfufe0Cse9mb9qveh/sN9
6L9IX9ZnCbFM6cv5G96PfGA/1s+zP/TKq/3Z//IDjO/r58f2Aaxf7oHc/2YM
pL4vxLL3IPIvB3E+6g2m/lODWZ8SQxh/zRDuz5mGUv/4obQPH8r8Owxj/LvE
ospw8vuHU1/BEeQXKPzvevOm4n+O0HB9MHgk9b0nls1GMb9Lo9j/MqM5f1tG
Y7+UOcZwf502xtiPHys+boyW9npW9Bir/f96OFbxT8fi+6L2OOZ3bBz12Y+n
vhXEwjSB+8foCeRD0/FtJnI+bk008gtSfMVJZtxf/7xR/J5JjJ/Pm/2Z600+
yZv9HTCZ+b2dTH2Np9D+3BT6d5lKfsNU6recxvPbexr56GmM32U69mPxaDrn
9z/J+TkiyRedwf4sncH6/pnB/EbM5Pr8MJP1aTWL/DViUWE29e+Yzfh55nD+
Z84h/5VY9plLfa/mUn/9eeRPz2N8x/nUt5ZYZl7A+k1YwPgRC7DfiY4LsZ7l
vYXUX3UR/R9YxPkotJjzsXAx9f1azPhDllCfP7FsvhT7nbi8lPZll9F+6zLy
OZdT3/Tl1P95OevbcwXjP1th8Pr7izorDT0vFH98pYbnA8VX0X4lsciwmv0b
s5r1DVvN+rVdQ32311B/pbXcf/eu5fmQfx3P13nrWJ/vxGLgeg3Xn++IRZMN
Ziz0zzPFn99g1Pe54ktt5Pm5caOG5w/ZNvH8nbyJ9YnZRH1dN3N9Pt7M/Gts
YX18ttDedquG9zfLtjL+363Mf+Q22gdto77W29nf69tZX7cdmBe5c4eG5+N5
d2p4/j1rJ/SIbzsNe3W/I/vuQr3F612op2ywm/mf2Q09suQe8uv2oB4yy16u
z4l7md+nvax/p32sz/19tK+2n/N9cD/rV/gA67/ogME/UfxvhVOfB8qhBw3e
R/EBB7k/tjjE/l0hluUOk992mPpyHSEvj5CPT8W+iu/lY8RX74vlcx/mX/co
9MoTR1k/h2P0v+oY65PxOOs/llh8PM78253Q0j7vE3dOoJ6y8kn2f99J1qfA
Kfqff4r6fhCLQadp73uafNMz1HfhDPopSp+lvk1nqS/7OeY/5RzXV2w6vtt5
9u/Jee4PNS9w/z96gbzdRe3/11fqfYJYfpH+xSUN15ejLnF/DE7He11mfjcU
TnN/736F638XsbC+Sv+ziUWiwmnu//pdY//eXOP50fA663v2OufT6Qbrs/4G
62Nxk/2dRCwj0/Gdbxn98Ff8g1tG/98rvvptzschYlHkDudr8R36TyGWw+4y
/8C7Gq4/W97jfFy9x/xc73O+tt83ePW+Vlo9oL4ZDxg/gVj0fkj9Lx7Svt4j
9ufkI+5vJR6zPqsfs3+ZnlD/OIVT34eJ8Cfc/9s/pf1dYunxjPz+Z4xv85z5
LXjO+MnPqX/wC/r3IxbNXnL+Lr5kfcq84vm3+ZVxXqn7IZHjNes79TX7F/ea
8bu/of+nbxi/1lvqP/aW+RV7x/19xTvaa77Mb7Qv7UN8jfNbP//b+FH/TT/q
q/ie/ne/J5/Pn/wcf/JJ/pzP/gHU9zaAfKNA9vdcIPU7fzD86/cHGz4gnswa
xPp5B5GPIhZdgun/YTD1/RdC+8MhXL9FQ6l/SSj780fhf7+3+KD44WHG/ql+
zyU+hHE+PD9S/zViWT6c+neEs3+5I1i/mcTySwTt+3xifi+JRf1IDdfPpyJZ
H8co6l8TRfvM0eTHR3N/jCCWHWJY33sxzL9KLP0fiCVfME5L+z5ZLIzj+fUz
jvUZ8pn9f/+Z67d5POt3KZ75l01g/C0J1JfzC+s77Qv7+/kL9MoeX3Fei2df
Wb/a32h//Bv92yeSX5lIe1MS9Y1Jov7QdHzb7+RvfSdf6Qf97/nB+c6frOH3
i3OTaf89mf4H/GR93xHLxr/In//F/F1+M/+Nv9lfyxSuz8kptI9OoX3XP+Qf
/SFf4y/5I3+pz1aY0v7eSi5VOE38vwqnWb8jNGARpHCa/FuZaH/dRL5CBhPf
/yucpr55MpKflZH2X4lF30yIJ18p/O919kvFN8hswvv905mpr2QW+l+bBXpE
FgvokROIxScL6u+Ylf7vE8uqlqzfQYXTrN9C2Uy4/12UivXrk1/Z6H9odurz
JxYtclDf5Rzky+Vk/luJRa5c5KfnMmF/jFc49X5A9rQy4fnwcyvOT53cjH+C
WBbPQ35VHurPkJf82LysX1he6mtnzfrfVjj1fbeonI/83nzMv0B+5j8vP+P/
SMcPLMD++BZgfk1s2P8LNgav39+XKoh8xCaF9ctV/feoMlsh5jelEP3HEItu
hVmfx4XJ1yxC3odY2BVlfZYVJS9sGX+kraFX/Z5EBCucej0qW9sx/xt2jO9W
jPyuYuTz2jP+bHvq+5aO71ec9q+Ls34NHWh/xsHgAxXvVMLQ/07x60rQv4Uj
/U90ZH0jHem/U0nm94BYVnPi/Bxygl5Z2Jn+FxPL387Yz8UwF8YPcKH+lqUY
/0op8q6lab+tNONbleH6lGW4fhKIZa+yrP+Lsoxftxz5k6lY318cXOl/tSvz
z1ie+sYp/O95gt6/jwqn/j2DaF/BjB8/Uh/99xF3Khjnh/78xcMNWO5zM/zr
f/9g427C+6f5Cqf5fVWyuynt8245qKKRb7zi/Spi3mTTSvAnLir8735I91+6
Mudzc2XjfND57B60n+pB+1gPU9rrfdG9Cuohn1Th/lirqin1fswzpu/cqqbU
vx/5H27uOUs=
       "]], 
      LineBox[{{3.759263319230769*^9, 1.08}, {3.759264*^9, 0.49}, {
       3.7592649*^9, 0.45}, {3.7592658*^9, 0.44}, {3.7592667*^9, 0.44}, {
       3.7592676*^9, 0.46}, {3.7592685*^9, 0.46}, {3.7592694*^9, 0.42}, {
       3.7592703*^9, 0.42}, {3.7592712*^9, 0.43}, {3.7592721*^9, 0.43}, {
       3.759273*^9, 0.45}, {3.7592738338235292`*^9, 1.08}}], 
      LineBox[{{3.759273964285714*^9, 1.08}, {3.7592748*^9, 0.43}, {
       3.7592757*^9, 0.42}, {3.7592766*^9, 0.43}, {3.7592775*^9, 0.45}, {
       3.7592784*^9, 0.43}, {3.7592793*^9, 0.42}, {3.7592802*^9, 0.43}, {
       3.7592811*^9, 0.42}, {3.759282*^9, 0.44}, {3.7592829*^9, 0.44}, {
       3.7592838*^9, 0.45}, {3.7592846338235292`*^9, 1.08}}], 
      LineBox[{{3.7592847661764708`*^9, 1.08}, {3.7592856*^9, 0.45}, {
       3.7592865*^9, 0.45}, {3.7592874*^9, 0.46}, {3.7592883*^9, 0.43}, {
       3.7592892*^9, 0.46}, {3.7592901*^9, 0.57}, {3.759291*^9, 0.44}, {
       3.7592919*^9, 0.46}, {3.7592928*^9, 0.44}, {3.7592937*^9, 0.43}, {
       3.7592945731343284`*^9, 1.08}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQzcBwQMST6Y2jx8MqkXXuH+0ZGBoaQXywFMMDIJ/h
E4j/JnCHXOvrhyD5JC8gX771NVDkKUj+Moi/pMCW6/pikPoGZ28gf9ZMEACp
Z9jijSqv4gPkG4PBZZD8VBBfM6b/0FeNPSB5Vl+4/p0g+TIQH6gZaMJ2kPwz
NPlwP7j5L0Dyx/1Q1DNY+KPqX4HKZ5AMAPILQdoLzoLkOwPg7jsMkv8VgOq+
rEB4eGwEyd8G8UG8wB3rQPLeQSh8hj0gfjUwdB9WbQHJ6wSj8BnmovIbeEPg
9j8GydeB+Ie/agBdcBUk/y4E7t67IPn4UCAf7LyY+/Y3O2WPhiLFJwArrrYR

       "]], 
      LineBox[{{3.759323930357143*^9, 1.08}, {3.7593243*^9, 0.62}, {
       3.7593252*^9, 0.63}, {3.7593261*^9, 0.6}, {3.759327*^9, 0.35}, {
       3.7593279*^9, 0.7}, {3.759328312048193*^9, 1.08}}], 
      LineBox[{{3.759329293902439*^9, 1.08}, {3.7593297*^9, 0.71}, {
       3.7593306*^9, 0.77}, {3.7593315*^9, 0.67}, {3.7593324*^9, 0.71}, {
       3.7593330054545455`*^9, 1.08}}], 
      LineBox[{{3.759335429268293*^9, 1.08}, {3.759336*^9, 0.82}, {
       3.7593369*^9, 0.61}, {3.7593378*^9, 0.58}, {3.7593384164383564`*^9, 
       1.08}}], 
      LineBox[{{3.759338991549296*^9, 1.08}, {3.7593396*^9, 0.6}, {
       3.7593405*^9, 0.67}, {3.7593414*^9, 0.61}, {3.7593423*^9, 0.6}, {
       3.7593432*^9, 0.66}, {3.759343875*^9, 1.08}}], 
      LineBox[{{3.7593442938461537`*^9, 1.08}, {3.759345*^9, 0.57}, {
       3.7593459*^9, 0.57}, {3.7593468*^9, 0.6}, {3.7593477*^9, 0.56}, {
       3.7593483591549296`*^9, 1.08}}], LineBox[CompressedData["
1:eJxdlE0ow2Ecx58oB8pKcnBQlBrlIDk4rDUpFMVycNhBZvO6d7NX2z8l5WDl
sOKgRMpltSIUmreMTIpstPKS8raShIOL5/s/PPl5av379Pk9z+/l/39W2m3R
GrIYY/X8h6dCYZnSZ2U0TXfewkjju5ox6QYs4909Z9bWw/lLqQvtft7Cx8BM
XmBWbeCcOMFKw88bxP5r+AIjZ6O8LuHHjMIfw3+AfUDvPry+l/N6yfhr+/o2
/EWvyPcE39DHOdOOiB34VXBucsGqyl2DL+8X563Ah/tFfBQ+Z4DEMxdl6fGf
7xzkPDuDtQEfp8zqhuh8lsFauYEUfLGJ5p800f0/JtKvNGjmXIHjlJvwaTPp
V2qx0P1bFlp/lZXOb84q4p/h8210PkEb7e+NMuuyi/mfwZ/Z6Xw0Dpo/SpmV
DYvzjuCnwTXy2oPPdnJGt7rQC7zDSet/cJJ4qWNEzFf+/g5GRPwpfK2Ls02F
ChLwSy6av8jNedGKgBj8hJv2/+2m9fd56PeZ8tD30+yl/W946XwrfaI/3Cdp
1ifyY54sz0/qkXx+Op+Mn85fNyryHcInRsV++X6oAmI+cfhIgNw3qSTIWd6e
PIcPgVFtYeRNbWi9Cgf//B/8AizQm58=
       "]], 
      LineBox[{{3.759414075*^9, 1.08}, {3.7594143*^9, 0.97}, {3.7594152*^9, 
       0.64}, {3.7594161*^9, 0.7}, {3.759417*^9, 0.65}, {3.7594179*^9, 
       0.66}, {3.7594188*^9, 0.57}, {3.7594197*^9, 0.55}, {
       3.759420381428571*^9, 1.08}}], 
      LineBox[{{3.759420894230769*^9, 1.08}, {3.7594215*^9, 0.73}, {
       3.759421778761062*^9, 1.08}}], LineBox[CompressedData["
1:eJxVkz1IQlEYhg/SVEFL0BAZ0VIELVFDUFFLETQoOAQ2FDQEQQlN1nAWwd80
NfX612AQNBgEgUVIaf9kJBUh5XCJljKoIWho6Lw3OPgduFye+5z3O4fvnNs2
s2Cc1THGesWDd8nRUmfXVYbHVGtjevRrSHyaBBeuMZ4F80uwZaD2MbVYhu93
CAaJT/Db4GWRVq338M1OwT3auIN3OWW+AP8Lzn93mL25U/h5l8xX4MsuWf8c
fsItWNueegWfdVPf7SHMNjy0fsOqYGNGb3s3XMBz8CZ2nzqC/6TMpr3UF8Fa
PJOFH/EJ9uawwBv8ro/69jWaD4A7zUgcwtf4yXy+RJm9+sl8bgrQ/FmA5vuC
dP9b4P/jeYFvWpf9eIC3g6MKxj78D7hiQMVj+LkQYV4KyfPMw4+HqT8I0/W7
IvI8T+BjEXIerF4h9fiKQvrJPhTav6korX8TpfnBmGB0Q297gt+JyftchG+N
C2bauIX3xeX9xn3jLCH7UYK3JMh8ribIfGZMVt0nk2kvnaz6f/4AQFFXVg==

       "]], 
      LineBox[{{3.7594713676056337`*^9, 1.08}, {3.7594719*^9, 0.66}, {
       3.7594728*^9, 0.33}, {3.7594737*^9, 0.25}, {3.7594746*^9, 0.28}, {
       3.7594755*^9, 0.72}, {3.759476271428571*^9, 1.08}}], 
      LineBox[{{3.759477588*^9, 1.08}, {3.7594782*^9, 0.91}, {3.7594791*^9, 
       0.7}, {3.75948*^9, 0.57}, {3.7594809*^9, 0.52}, {3.7594818*^9, 0.46}, {
       3.7594827*^9, 0.46}, {3.7594836*^9, 0.47}, {3.7594845*^9, 0.62}, {
       3.7594854*^9, 0.7}, {3.7594863*^9, 0.59}, {3.7594872*^9, 0.55}, {
       3.759487489090909*^9, 1.08}}], LineBox[CompressedData["
1:eJxdmHlQV1UUx6+/J7KIgIqINmHapm22W01EtmmbpZXZZFaWtpq0WA1m3TLa
i6msRjNbtNxRdgRB2QQVkDUWEdmVTQFRVrF3XsOb38f3D/Plc88533vvufc9
mLhw6ZxFDqWU6xCl5OekeZmnNjpaps+sDvENn9EeZP7qrOj5YamnJ88/aWq9
ZJOp16yWp0x4pWhlPXnCZ22GVntEe5SsDw70yBQ+dYup4wNCm2fHJwv/Y4ud
b5dwn63Q6mPRUywDu4W3b7XzxQlfuM3Ult3qGuEFoi27YQXC795u6uWCQ6KF
R21n/CXh0HpVOMYrlx3wq5ftoL8Gaj13J/yqzJ3k0yLsfJXCN4kOtAyUC/eP
NHXLbBkRIfzLSPrviaT/V6OYv5xaPRjN+SVGc35XxTB+bYy9/43CR8TCj14R
y/gTscy/II7+D8Vx/4Li6W9nPOd30S7m/160KN/wY8KHJHD+byXQf00C6z+W
yPpp1OrG3dzfDaLTpH1Si4WPSTL1BMEBonVokh3fIvxMkj0+Q/jiZM6vJJnr
M2MP+z9e9IZg6YC9wifvZfxqau2eYo8/LjwkhbwphfN7OpXzO0itbk9j/DZq
dWE61+/bdPhVA+n2eOkX/UYG8x/NYP5H9nH/9u4jvzaT/v/MJB+ZRX+fZHF9
O7LgR72wn/1VuJ/x9xwgj6ZWlx4k/4laDcsmfzeb/o9l0/+TOZx/Vg7P1y25
zL85l/Mbd8jUc6wFtvb/q0Os30utXssztRVeUij8cJ5dL1/4Q/l2vizhu/Nt
niL86gLm/62A/r0K6f/DQvKThezvZ4u4/nlF6Gd9ZzHjI4qZf+K/jP+BWjtK
OP+3SxhfW8L4x0u5vuml3L+byjj/v8vsfFZ/+ZXzfHxGrbrKmf+lw+Slh+l/
ZgXP164K8ilH6H8NtfaoNLV1XYU2C19eif3UzZXMP/8o/WUf5foFVpFvr6L/
gGry76jVuWq7v0qFL62x38/yvlZVNeyPR2ttXSU8pZb9eV2dqW+wnjThf9Xx
fhtVT38r6zn/U/Xcvxcb6L+ogfH3HqO/GGp12XHm/5lauTYy/r1G3o/HG3l/
zmti/v1NzH9rM/kWaj2+hfxrat13Hn+91TH4/dQkvKKV/fXwCfZ30gn6v+Yk
86+jVt5t2C/9URt5m+j/vy+t9/tz7Xa9bOH57cw/vYP1Izvob9Ip+v+RWhud
jH+nk/nrOu31kO8x9cRpx+D3mfV9mXGa/XnzGXv8AeH/nGF/ju2iv8+76K+7
i/37cjfPT1k3+f09XL+EHvSzvqKX/fdrL/t7eB/rf9DH+62lj/Wf6SfP6Wf8
HWeZP5xaTRggDxuwz7/0m3lBcP2Dz9F/NbWerQycz1TRTv6uH2Kg/nrRTvf/
aIeB/f/UQd7pQD61yDDwfio2WP++ocinY4ca2J/LXTBe/+JCf27D6P99atUo
2ql/n3Jl/QOu9vgi4be5Gc5/r6mtbobzedIXuBvO36vqG3fm73envyUe9HeE
Ws0azvjk4fQ31RProX/3NHD/+oxAPa1HIJ9qP48/78X6BV6sf5c3eZQ31/9i
H+7PKh/yoSNN/aZ14HOELxO92HoahNePZP65o9g/+0bR/7TRXL+N1Mrfl/W/
8DXQ/z2+9vh04a+MMXC/lI/BeuoH/Fg/0Y/5rxxLvnYs/Xn6098Kf65vqz/3
d8E48lxqFTTeaf/WJfhtFD34/4X/AGh+xOs=
       "]], LineBox[CompressedData["
1:eJxdlntIU1Ecx0+KQUJBsYJMp/ORm/lszpy65py66XxtvnVRGD0oSE0oMqhb
YFGQVlCoYBRZFJQkGE6wslS00pKyjJJ8hZZKUWFBUXR+948TXy+M8bmf+/vd
c37nnN+mKit37HBjjNXzD30zNu7ycp83WSeqFS2Wr0Z+w28d58YGuh5zls4S
O1zKmjl7P/kl3py18tVNvpJ43k4PPCQ/Saxx1j1aUHeSd/hwPsyzT1S3ke8m
9hy5WmHwbCevVQKzZiU8Lyl80dcQk1W0zJBfWOR3+mH8az/0FhW+v10lxt9K
Xu2Pvt4fx78sAP2hAJgvmw0Q9esgXxKI+Z8Sy6VnH8nHB6G/FYTx3usx/xli
eTlc98n/WeT3BaN/H4w+Ww3rJT1Qo4/UYPxlDfqVITj+Y8TdC2r+RC/5byGY
v2wD5GMvkSVzqKhvD/m2UIwPDONMTytrpshfIPaVb7wi7xEuxjNE/kA47Fdp
OlysVx/5wgiM74sQnvYTi42E+Ug3IjF+bRSej1PEVB1n3Qvyv4grDRQxSH7P
RmD2DlmyaTk3V9ANefydyFJotKjXM/JN0aJew+SX6zgPDtA1T/6IDuM/6zB+
awxn+bhPPCH/PAbOM0vcBPtRuoPMVLHozyEzNz2ev/16XN8pPfaP3DjOcjkM
s+R74rC+0fFY/2vxkE9anSDm10L+BLL0IwHP7y4Djn/EgPHWzRjvQmYao6jf
JPkGI9STeSbi/KuR2Vwivr/UhPkHTBifkIT1vZ2E58fHjP251izWv4v8XzP0
E1aeLPr9J/JjyehzUrB/d6Wgj0pFfyUV/SoL9sfjFvTfF/ntVuzPw1acX3Ia
+rvIUlA6zIddTMfxLbVh/zloQz9jw/xFGZi/H5npM0X8KPmbmbj+Xlm4f08j
s99ZOL+92Zh/NBt9Rg6sJ7uXg+MLs2N9L9nRr3BwlreTYpr8UQee/y8OjN+W
i/FDyMyUh741D38f/POxf57Px/PvXoDzqyrA+A8FmD+vEN/fWyj6xVvyuiJg
dr0I13dNMc7vZDHm/1mM9d1dgufnTQn+/qSViv5FLHWUog9xivM4Tr6RWB6O
c8zYVFXrscX9//+tf2M1miw=
       "]], 
      LineBox[{{3.759859854*^9, 1.08}, {3.7598607*^9, 0.61}, {3.7598616*^9, 
       0.96}, {3.7598625*^9, 0.71}, {3.7598634*^9, 0.67}, {3.7598643*^9, 
       0.83}, {3.7598652*^9, 0.88}, {3.7598661*^9, 0.83}, {3.759867*^9, 
       0.58}, {3.7598679*^9, 0.58}, {3.7598688*^9, 0.59}, {3.7598697*^9, 
       0.6}, {3.7598700456*^9, 1.08}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcCwdkoS8xtHj4dVIuvcP9ozMDQcBPFtua4vLrB9
BOQzGCWj8BsWgfizZoLAQ5C8cAqQ/00jpv/Q1wcg+eYUuHlg+S9o8impqPJX
Qfw3gTvkWl+D+A2uaajmb0tDUd+glg7ka4KM0/gAkp8O4i8pALnwBUiePQPV
/RUgPtirDGD7X4D4EONugeQjM4H81tcgB9wGyZ9E5TNYZQH5hWAD74LkV4H4
Z8+AwB2QvHQ2qv5uZH7e7W+fs5HCFwC5tpgR
       "]], LineBox[CompressedData["
1:eJxdl3lQV1UUx6/+bJEWq7GspjRLC1usxrKaQrNNrWzBrKa0xdI2FVEBBcHn
gqLILiqLIJuKAoqiLCLKJovsyo4Iam5QYo1mNS3vPGeufH6/f5gvn3vOPfec
8859b+h0F+cZfZVSDn2Ukr+hw/r3m2XrHjeh03Ng2vhLY5UyZon27fowa7Bv
q6nVcdEjpgYVXHZsEz5ptqmt5Z0twvNEm4tNi3bhI+eY2smhMWGuk8Vj52C9
McAF/pThQt4jWpTnQPGnvp6r13cLrxUt3h0au4S/5mrqRJEJHcJ3i7aWTz0h
/JF5ev0p4WGiIyPk1ym833zaL6BWP4t2tg5o8SkL6P+waFfrwMeFj3Yzdbek
r6tW+FY35NMY5I71yk90ZYX8eoRfddf7iVY/eOj6SLxGswfjf3uhzvdJ4TkL
Gd8Ti5BPI2qRrleV8Fs9dX5zhS8W7WUZZAj/hdqY5oX1qspLx5MtfMxiU8+0
fg3Cd4q2wnM4K3yItz7fOeHB3jrf1vmVD/vP1Ufblwjv9NHxFAl3XkJesET7
LxU+ytD9VS48wdDxlgkfuJR8BbW6bMdnLNP1qxTeIFpZP6s/3lpuaiv9QVIP
lbkc+xmPrTD1KOtXKHzjCh1/pvCbfaHVImrjvK/ur3Thn61kfcqp1curaL9j
FfkDftrfeeFr/ej/Hz/2x+zVun/yhLevpv/31jD+g2vgz3jan/tv9qf9HWvJ
l1Ibl+z49ADdb2eE1wWgH9TrgezPPYE837Ag+l8XRH5DMLlbMPypM8HMz8ch
jK8khOd7IZT52Raqn98Lwu8N43xcHYZ+Nv4MY//+uA71MFrWMf53whn//nDu
/+R68mhqddsGcu8N9P/rBh3vaeFfbNTzypp/1RtZ/7ERtN8VQf8PRTK+kEi9
Pl94nyjyeVH0fzKK9ZkczfwXRnN+PbeJ9UsUfcVR/mHNp7tjGJ9vDPe/Ysdn
xtJ/YyzjG7+Z9lnUhmMc8xMRR//94/W8PCTcM572F+IZ/+cJtD+SwP1fSaR9
SiLr/2AS7QOSeH/9m8T5O2eLqQtl/BUUCz+xhfl9fyvPd2gr/T+zTcffJDxu
mw3vF3cm8/zLkjFPjd/s+Dfbuf9RavXGDvKMHbQfnkIensL+ujGV3J1anU3V
z4M1Xz9J4/wsTaP9iztpn7yT/XPfLtZvzS7a/2XHf0pnflvTmf93d5PnUqun
9uj7z3q/2LSH99/tGbT3oVYXMzh/v9zL89fsZf+9uo/xpe+j/6GZ9B+aSf99
s3Afq/lZvL9PXdcyb9VH2fRflM39n8/hfE3KYf3v2c/6rKRWf+xnfN/lsr5N
ueg3Y8IB5if7AOs7Ig/3hYrMI3c4iHmpvA7y+eiy41MPcf8KauWUT56az/gG
F5AHFvB8/xXYer+vGS6FprZeR9PkfVB1FDK/HxTRPr+I9Xm2mPWPL2b+7zpM
++XUxu+HWb9vS2h/rIT+3yzV55N5auwt5fP1aBn7d30Z639TOeP3EN3r++Zc
Oe/3T48gX6rsCP2/VEH/2yvo//5K3f/W/Pe/rmuE/13J882qYn7aqni+SdX0
f6CafGQN44uhVgNq6X9JLfunx45/Vcf+rq1jf4w7SvvdR2n/8DHWP+wY+99W
z/5fUE//p+tpP6WBz29xA/noRs2t+b6lkXxQE+Nb1cT8X21i/33fTN7czP0n
trD+OS18/h5vtfX+nlJRrTZ839/SpvvB4ovb9H7W+1t3m86XfC+racdtvb9n
jErR177PLD6m3Yb3v7R23BdqyAndDxeFB4m+9r0r680BoM/TOXb4xNDJHb3i
/R8uaMCU
       "]], 
      LineBox[{{3.760129121917808*^9, 1.08}, {3.7601298*^9, 0.53}, {
       3.7601307*^9, 0.53}, {3.7601316*^9, 0.53}, {3.7601325*^9, 0.54}, {
       3.7601334*^9, 0.54}, {3.7601343*^9, 0.57}, {3.7601352*^9, 0.56}, {
       3.7601361*^9, 0.53}, {3.760137*^9, 0.55}, {3.7601377453125*^9, 1.08}}],
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQreo56ekT5jeOHg+rRNa5f7QHCrk9BfLB3Ie3gPyG
bSC+Zkz/oa8ad0Dy6s9Q+A3Tn6GoZ+B4jqq/ApXP8BLEP3sGBMD6I18A+a2v
A3fItd4GyZ8C8YEcoMg9kLzVS1T3rQbxC225ri8uuAuSl36F6r6eV6j6/6DJ
574G8hnA4AFI/u5rFPcw+L0B8mfNBIGHIPl9IH4Q2MATIHn9t3D+C5D8/Leo
7hd4B+SDfFslAra/4R2KeQwf36G6P/E9insZLr1H1e/0AcgHOz/mPkh+M4i/
pABkANj9yh+R/Gc14UXHR6TwAgCSvtX/
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQbbE3c/5H5jeOHg+rRNa5f7RnYGhg+QTkF9pyXV9c
cBfIZyhF5Tc8RZMP+wzkAzUDTbgHkj8G4sf0H/qqEXMfJG/+Bcg3BoPLIPnl
IP4OudbXgTv2geQlvgL5SwpABh4AyXcg+A9A8j+/wtWfA8lnfkPhM9wC8UE8
udbbIHmv73D3PAPJ7wbxGcDgA0he+weKexnm/EBxbwPPT1T/1f5E9d9bVD5D
3C/U8Dn3C24f2P32v1H4Det/o4aPwh9U8yf8gat/AZJn/AuXfweSLwTxg8AB
ADb/0V9U9wf9Q7X/8D+U8Gww/g/kf9MA6QDLL/kPj/+HIHkRBpY3jmDv2D4C
ybeC+GDj+x/Zz7vReRvEh6UXAHhT6FM=
       "]], 
      LineBox[{{3.760195754716981*^9, 1.08}, {3.7601964*^9, 0.7}, {
       3.7601973*^9, 0.6}, {3.7601982*^9, 0.59}, {3.7601991*^9, 0.57}, {
       3.7602*^9, 0.58}, {3.7602009*^9, 0.6}, {3.7602018*^9, 0.6}, {
       3.7602027*^9, 0.59}, {3.760203411290323*^9, 1.08}}], 
      LineBox[{{3.760203785714286*^9, 1.08}, {3.7602045*^9, 0.58}, {
       3.7602054*^9, 0.53}, {3.7602063*^9, 0.58}, {3.7602072*^9, 0.56}, {
       3.7602081*^9, 0.55}, {3.760209*^9, 0.55}, {3.7602099*^9, 0.54}, {
       3.7602108*^9, 0.56}, {3.7602116666666665`*^9, 1.08}}], 
      LineBox[{{3.760211740909091*^9, 1.08}, {3.7602126*^9, 0.66}, {
       3.7602135*^9, 0.94}, {3.7602144*^9, 0.64}, {3.7602153*^9, 0.63}, {
       3.7602162*^9, 0.5}, {3.7602171*^9, 0.43}, {3.760218*^9, 0.42}, {
       3.7602189*^9, 0.44}, {3.760219722857143*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQrav79g4PyxtHj4dVIuvcP9ozMDQ48wL5hbZc1xcX
3AXyGbag8htU+IB8zZj+Q1817oDkp4L4QTvkWl8H3gDJs/ID+SDVQC0g+TIQ
//BXDaCOqyD5ZyB+NdC2h1VXQPLhAkD+2TMg8AQkf1wAbj6Iz2AhCOTPmgkC
J0HyKwTh9p0AyUsKwe07DpLvRPC3g+R/ofIbsoRR5W8Lw91zBCTvLQLkg3gi
656D5PeIwOW3gOR1ROHu2QmSnysKd+8ekDyvGKr5daj8hncgPtj5O/aB5OPF
UfgN50H8JaDQW/wCJO8gAecfAMlvkICH51GQvKIkkA+OvoePQPITJeHmnQPJ
M0mhhl+RFDw+z4LkH0vB3X8GJB8sjRL+P/ZII6UPAAnM1bU=
       "]], LineBox[CompressedData["
1:eJxVlE1IVFEUxy8VLSZwEdWicnImR9+MM+U4M+mM82acCDIISmlR5EKMKGih
0SIYF10CC1o00CLQRRCZ0CIhKhqhQkZECw37YqSkGOiLfH0R2iKo7v8tDv0f
DMOP333nnnvOedfX09t5dIVS6pD54f/2iDO1aZWTa6/k143u/pFVSsc3G1bu
M2dYXQd3Fr0Dix3T8OurDQ8N4hmDPwf2lK/12Z578MvgQmnJ6io8gz/mNbxs
qLQ0D18Gu+GKT+Dbtxg+aSPCLHwRHMRyawE+WCPrP8AP1ki+T+E9PtpP532S
3yP4RbDTgQhYrw/7DQ/3YcNx+Bk/nUent8r+9+FvgvvNbpX8HfjqWsnnDfxF
sJtO5RX8n1qqh+oNcH3eBjj+/jpiPV7H9Y3Wc35X62X/h/BrLTqvPmuJ/wr/
05L4M/BHgpLvY/gX4AmUrzQJvytErO6GuP+BBjnPFPzlBvarw1Jfd35Oh6X/
n+A/hiX+S/iDEe7/dIT6pZLb+Hw3mNXG7Zz/BbAbzkY/1G9wzH2ew59olPVf
4Bca5Txl+L1Rnt8HUa5fpInOq640cX5VMa7PGWb9Lcbvd8cl38/wc3H+/nIJ
yX8C/laC58O/g+fjErNa2czzdYpZvWumedIHWqhfarKF4yeSPN8jSY6/IcXz
eT7F8/8rxfsfb6XvUc+38v2wJy39eg8/lqZ6qJDN7w8xqzUZzr8/w/k5Gc6/
K8vvz2alX+79ZbfJ/VOBH23j9705jl8Ag7wDr+H/5mT99+w+Z7hq53/37z8T
pyYW
       "]], LineBox[CompressedData["
1:eJxdlwlQlVUUx2/Oa3NaJ8uaynKyommdbJvKLBcgUPCBgsIT8gEPQbYnoPDY
LuJDFpVddlu0aR3LcpLKMQXLJTXUlLRMycmVNJu0Zarpna/pwu99Mwzzn989
/3Pu/c53vu+NdmZGJA1TSu3z/cl/pXTLBNvAC8H9nhFrgs6P9+mjogfsXaO8
Z/b4tLJP9Om2Vrm2C98s2lrev0P4o5N82mVdZ4W/Jto9bnjfqqxdwm+YbNYf
El4m+j5HTfeFgJ3CfxUtq8cN3yo8MRD51P5ArNeTg8g/Er06SxL2Cr8nmPU1
B7P+y19k/jzRslt7127hJ0VfDJAFJ4XPCvFpn5nPsU/49hDUq54ONf4fC387
1PhvEH7rFLN+vfBqavWX6AIp17NOeNpU8sPUemoY/TeGMf9D4dDq5XCs19dO
o78WLdRRc1r4z9NQj5pjZ/49dvIJEaZf1gr/gFrdFUneEGnOe41w23RonUOt
fvTjM2Zwf1+ItlpZyf3ST0SxvjeiGD8ymvuviGZ9v0czPmUm+cGZrC9klqnn
oPBPBrXVn/fHmH60zrc9xvhtFn5VLP0LY+n/kx+f7WB9ux28P8/NJn+PWt8R
Z/yPC6+No7+KZ353PP37/XjES4zvplZj55CvEm21o+OI8BFOn+6R9uveL3yx
k/4XnKw/KYH8QAL9AxO5//WJ7P97k1hfSxL75woX/fNdzH/KxfiYZPIdyeTP
zCV/Zy79b0th/UtTzDyz5s/fKTz/9FTGf59q5u1h4WHzfDrCWrBN+Geix1pX
j/CH03g+r6TxfK5LxzxUpaJFjfIeE34+nfmdGXy+9mZw/xMzWf+HmYwfk8X4
Rmp1qZs8103/426eb9R8xm8VvWunXN8JfzLbvK8OCH8zm/4359C/Mof+f1Cr
1FzyQ7nMH7qA/p9SqwcWMr5jIfNfncf4ojzys3mmXzYJj8uHVl/lG/8twsd7
DD8q/H2P4V8Lv7OA9dUVsD8vKWT++YXsvx8GtfX+jyyC1j1FfH89Vsz6Vxfz
/XpjCfpZe0vIL5aY+zsg3KXZ/32a+w8qNfPmc+FdpeQBizDPVSu1vrLMvC/3
CveU2YZ+L+nTZbah3yMqdjG0/lL0f99b1vfVs14zD88Jf9drw/fL7eWoVy8r
x/Os/inn+WUswX7UkSVmvln5wyt4fzZV8HwfqeT5vlrJ/NdXmfxnhC+qYvwv
Vaw/oRp+el8139+TlrK/1lGru5fx+WiiVpctZ/wCanViuanPmu/RNeTbajj/
nqplfW/Vcn7dUgetquqY/08/Pq8efvrbetY/pcH2//flCeEbGszzt1H4g43M
39nI+GuaeP+Lm2z4/jjXxPkfv4L937uC/f98M/trbTPq0aNbjP8p4fUt5MNa
eX7ZreTH/Pj0Nt7fLW08v8fbuf/X2zk/buogL6dWv3VwviV3cv5908n44JVD
/ON7R3autA3+PvoXlWREKQ==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvTlpQd58ljeOHg+rRNa5f7QHCs0C8YN2yLW+DnwB
5DdwLQDy5YG8HXJPQfLVID5Yesc+kPxrEH9JgS3X9cUHQPIxC1H4DWcWoqhn
sF0E598Dya8F8TVj+g991bgDkpdbDJd/BpLvQ/DPgeT/g/jVQNc+rDoCks9f
gsJneADip4HBNZB8wFIgf9ZMEDgJkj8I4h/+qgG08ShI3nAZCp9h0TJ4eLy0
Xxl78uQypPABAH9ghCg=
       "]], 
      LineBox[{{3.76053629625*^9, 1.08}, {3.7605366*^9, 0.81}, {3.7605375*^9, 
       0.76}, {3.7605383470588236`*^9, 1.08}}], 
      LineBox[{{3.7605385*^9, 1.08}, {3.7605393*^9, 0.92}, {3.7605402*^9, 
       0.96}, {3.7605408352941175`*^9, 1.08}}], 
      LineBox[{{3.7605411865384617`*^9, 1.08}, {3.760542*^9, 0.61}, {
       3.7605429*^9, 0.36}, {3.7605438*^9, 0.31}, {3.7605447*^9, 0.35}, {
       3.7605456*^9, 0.43}, {3.7605465*^9, 0.39}, {3.7605474*^9, 0.46}, {
       3.7605483*^9, 0.27}, {3.7605492*^9, 0.28}, {3.7605501*^9, 0.96}, {
       3.760551*^9, 0.75}, {3.76055134137931*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxVlE0ow3EYx3/hoDk4UIoiLl4OlIODQi7MgZpyUFOoyUVWHDTK/2C5qB0c
hOIwuaix2fu7ve+/l3JgFGUR03agkIOD3/M//Pn+aq1Pn32f5/m9tObZxXFN
GWNMyT/0XT/jOjytKA0q87pa0/D7AGPCHbG+qHI26h85s9EzznPSuibvIx7n
tqi6Id9p5ry3SytJ/oBYkTNq+xRx8tUWziUqVzSTX0dmbxa5/yv56XPOUnmn
ifwlsjBoxbwFWWixcV7l1fI6K/ltG+bL7ZhftqN/smN+wiHvx0E+isx6nJy/
2tSG0GeB/LET569z4XybyOzbBf2EeTfmb92YH/Fg3u3B+Tu8OP++F/NVPvn+
EuTXfPL9PpMv+eR6WfJTfrlehHyG+IjvPmcMku8PcG6n7bd5yZsC6JuCeH6G
oFzfT55dyO/HRV5LzKT1QD7/56X3pQpxlp5LXiQfCuH76Q5jf2MY56uJ4P1t
RLD/BzLTRDF/FUU/FMO8PQa/Z61xzO8gs8oEnIewQixp9Qv51wSe/2QS5xeT
2L9XxPonIvqGFOa3kIWfFOYX0pi/T6Mfy2Dej8y6spAvLGX//d/8Aj2E5P0=

       "]], LineBox[CompressedData["
1:eJxdlwlQV1UUh6/Ik1hkl9gRUGQXpKaVMa1G26agppWptDJbJrGmDad61VBZ
Y1TTptNiZXtRTpY4mWloagGCICD7n33fl1iE3nkMz//nm2GYH9895577e+fe
+whfvyn9AQelVJvxI7831u4sKnLsXrXWluWbu2ZgpfEnzxOGjsnI+WskusDQ
ui461aXii8zUKuEDondsl+e08HXF1vga4SdFm8NdjgpfXWKNPy78lxLyyJPQ
6l3R+SPRRsYjwh1LDd2dlhea3bVb+JOl1vi9wltEj8rwkUrht5YZurBAHqlH
/7vMmn+f8ItOMf5rauVfjvH6a6K3GO7YsvYIHy9n/EMVzF9VQX5tpeXPfuG/
VyKfHnea+T8SrcynXbhbFet7rgp+6D1VnP/uauYvqqZ/K2vIf6ohX1zL/G/V
Mv+8OsZvrrPqLRbeKDq7SxI0CU+v5/rz6+lvSgPz72qgf7421pdt4/wj5/AN
jcxf3kh/1zShHn0vtYputvJ1CP9QtKi0vAPCnVug9WdbmL+TWr+z1dC7MmUH
HRT+byv80i9rM3S6mbBB+A9t1niTB7djP6pt7VzfmXbW/1iHoUVl5HQKr+tg
/9zYiXr0PzvJk7r4/nd2cf1e3Vzfi92MH+xm/Poe8tIe8it76d+eXus8Mv1f
0mf5c0z4e33sD62f63+qn/W1UqvbBjj/UWp18SD9/WaQ8QFDzL+VWk0MWfWX
CH942PLbfL/Vw8x/3Qjj94+Qx4/Sv49HWf/CMfLnqfXeMea/5z/Gn6BWV4wz
/udx9l/4hKWbhb89wfwOk/Tn8Umrf+qEN4k27bH9I/zmKUOnmE++8MNTnP+C
M8z/JbW+aJr8lWnu79Fpy0+b8AdnDC2jfXMrhFfMMH6t0jB/nmg7HjNPm/Pr
kPDtou3OLxcHaD3LgfFdDhr8v2s+4wtEm8N9xS/9ckdt7rww++dHR8aHaKhX
vSnabv3TGupVmxaQ1y9g/E1OXP9BJ9aXfJ5m/770z0TP3r9yXylvZ9b3kjPj
h6j1+1w4f5kL/b3KFfWqX10Zv9SN/H03+KUvWKjNnR/m98HTou3OvzbRdufb
7e6a/XmsH3O3eJHwSzw0++8Z/VsP+KECPTV8v7zuST7pqeF+ecQL9agaL6tf
Dgu/3hta/eFNfxJ8+H4/8eH63H2Z/wVfxveJnr2vu4Tfuwj9qhdTq1V+7I/d
fnjfKuJ88neo1Xx/8if82R/N/uyfWwKY/0iAhu+jCwNZ31eBjPcLIn81iHzs
HL4xmPVVBnP+a0Loz74Q8thQ9JO+I5Trcw1j/JYwa3yu8O4w1pexmLxQ9Oz3
bb/w1HDN/r5RueHsv9AI9ndOBPLpMxGsPzOS+6shkv6kLWF9h6jViqVc3+fU
yifK0JvNfygKhb8s2rS7Qr4X1XAU/b9/GeNPLSO/Opr+/hbN/o6K4fo/iGG8
Uyz9fSaWvF302ftK3RFn6A3m0yr8eBzruzSe+++7eJ5PQQk8f99IoH9TCfT/
0UTun9pE+nvDcuY/sNyKN8+XxCT682kS4z2SOb+ezPn7qdW6FeQl1Gp1il29
328Lz03Rzv5/+T+dp8Xf
       "]], LineBox[CompressedData["
1:eJxdmHlUVVUUxo/ma6C5KKtVmo1qcyo4MDigzCogIgg4AQ6AzCCTHhGQSUEm
GR0Am6MsWw5ZKWpqaVm5JNRU1JwbtIVZrYa771pc/XX/eet739vf2fvb+5xz
1+s3M84/sqdSqlcPpeRTKb1xkO3SKI/ODPtW98uuxhdPDjbwgNDStq7++wys
KwTX1cqzV/heQyx+q/DJxOpHwZmGWmfGBuEDHQxs194c72y3UfjPibWDo6W/
WfjXHa18zgvfeyj1CwRv6pN30W/Tp8JfI1Zzhxn4kp98s134DsEtxmrtzduE
9xrO9bcMp/5zI/B7XT/C0pN81B1O5LOcmP9PxDrMmfV/RaxdXBj/nou13nrh
+7pafIfwZYKl2j55R4RXI6mfQKw7R0JP+Y9if9qI1aDRlp+twjePJm8/hvnl
EquuMYyPdLPwGeEPuZEfN5b6G8dS/9lxqFfVjLPq2y38re4G9jcF9wif7k7/
z7tTP8SD+l94kB/hSX/e9mR/HvXCerrEi/X97UX/Y73pzzFv6o/34fqf+TD/
l3w5n2t8qX/PeOovHk9/LxOrmRMMbG6vzgvCfyt4kPnsEH7MRO6vDydyvp7y
o3+VfuRt/sw/xd+qb6fwZ/ypPznAwPv3yXNU+N0BVn6HhXecxPremET9hwK5
vwuJ9R+B9G/eZMYfnsz8vYPYn4+DrN+b+//5KdRvuI5PCH9nMM/P7GDm93Mw
+xcewvPr6xD2z3Wqgc2jWh0Q/n3BZnj7KeEfD+V8rgilvz3CuH5iGOs/Gcb5
CAhnf3eE07/B0wxswtCzwrcIThD5+P3CPzCd+nnTGX+VWEfNYP3tM3h+u88E
VpsER5nPIeH7z6L/tbOof1sE4zOI9YUIzv/USPr3ZSTzd4qy8Gnh34my5uWg
8I/Nhp5eRqz+mU1/5s/hfB+fQ37CXPZ321zO58vzDHy1vyR0Tvi18zg/90Zb
+JjwOdE8P69E059ZMVz/uxjW7xZL/Q2xzP/p+eSr5vN8uznO2t8nhU+Ns/pn
zvfZOM5fUDz35x5iPTSB67+ZwPUfTmR8USL5PxMZH51E/kgS/fdJ5vxsFbyj
SxqwS/gXUqz5lPtAN6Zwf92VyvoWptKfX1I5v9PS2J8DaezPyAXMfz2x7pfO
9cvT6V/PDBveb5IyqH8qg/2flMn9sZNYDcnifK7Lov8PZhvYpO1lHnV+Ns5L
9Xs279fZC3Ffqe8X0h+PRdTfTKwHaPpTp9k/u8WsL5NYX1xM/dAc1rcvh/vP
eQn1311Cf/rkUn85sfo3l/2Ly2P/TuTR/4n5nI/t+chHv7KU6zctZX/vK6D+
kgL691sB5z+ikPEHC6k/toj1fVTE+XqmmPlXF9PfW0q4floJ9c+VUH/KMta/
l1gPW27pyX2l3lqO+1Q/Usr44lLLP7lP9F+lvH9jymw3vs/oo2Xsn+8K1vfJ
Ct4PL5bbut93zPtjVTnn8+4K1r+ogvyvFZy/6ZX055tK8qOqGP9BFc+3J6oN
bG7HVtOfimrG37SS8ckrGX/6f3xgDfldNeQdaqn/Wi39611Hfmkd46/VUX9O
PfmOes6nZwPP1y0N3F8DG637x9y/9Y3Uv30V9bOI9aVV1A9bzfj9qxnvsoZ8
6xryfdfaut+nfhC+dC3PR9WE+0bHNzG+s4n++TWTb2u25qtd+FdbbN3vc8eF
b27h/N2/7ga9gVc6Fgju/r/gPxUaiCQ=
       "]], 
      LineBox[{{3.761056913793103*^9, 1.08}, {3.7610577*^9, 0.32}, {
       3.7610586*^9, 0.25}, {3.7610595*^9, 0.25}, {3.7610604*^9, 0.73}, {
       3.761060779518072*^9, 1.08}}], LineBox[CompressedData["
1:eJxdlV1Ik1EYx0+RUNFFwS6Kwoq8WHRR4EVRiFQX9gGFuyiKCBIKKiq9MMoI
TsSgoCik6IOgICFrNmebbbq1D+c+dHvn3HQDJWGSlaaUwYKioPN/Lw79e2GM
3/s7z3me85zzvu/6hgu2kwuFEGfVD/97W6ta2ytmd+4ptVicdfO1QsgH4B/W
Y3f6yt8Ui8UvFbc11iwtPs/CXwIrUHe+wk+Dm6AbDfgjrxSbWDMDPwj2Vdq/
1Psy8NsdNF44HOxXdyh+/AhXD/wt8Gw9RnTB/wZfUdWWWjzw516zfw+GtTiL
8Aecis3llcbgg+C1SFc5Bb+5U68nAf8UvBHLtwbgl7uoHildul4n/LyL85/o
Yp9jlrvecP1uZrnBrfv9Gf6em+df5OH4Zg/XN+Wh8eJQN8fHuzl+61uu7wWz
WOnV/fHC3wCb7bOPw//0cn9P+zj/mI/n39dD8wk/s9zUy/5Jr44Pwi/zs7/K
LOf8+vya/Tse4P5mAny+at9x/zrB1eYVhV8X1PsRhr8b1OuLwC8IEcumEJ+f
yRDnt4V1vybho2Cz/GIevjrC9bVFON7Sx+u3M8vyf/5UlH0hyvtT18/ze5mF
Nab7PwH/MEbPi1gSV2wzByThL8dpv8RMnPMfTbBPJdjvSHL+jiSf3zUD7G+D
jTSuD/B/Buh9Jc4P8v5OMIuDKc4fSnF/tqR5f5+lOf8Kg+e/ZvD+fzd4/oYM
x+czHL97SPt+eM8Qn/+qrH5fT8Pfz3J8xTDHX2SWH4f5/B7OsU/k+Pxvy9N6
ZHue92/VCNd3Exwt4wGMwf8a4fnPjPL3ZXxU9+cT/P6Cfj/PKQ5fL/zzffoL
cs3QVQ==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzVV47co11jeOHg+rRNa5f7RnYGjQuQ7k75BrfR24
4x6QzzAXxO8/9FUjpv8SSJ73BpD/JhCk4iJIvg7E14wBqdgDkn8H4s+aCQI7
QfLxN1Hlz4P4XNcXF9hybQfJO9yC84+D5DeA+PIg6+WeguQVbwP51UDXPaza
ApKfeBtVP9MdFPsaiu6gqGd4fAfu3o0g+eC7KO5haLuPqv/bfRT1DOkPUO2/
/gA1fDweAvkgWZF110HyOx6imq/5CMW9DTNR+Qxcj1Htr3qMKv8ald8Q/QRV
/swTVPfZPEW1fy0qv0H2Gdy+lyD5vmeo9v97hhp++c9Rzb//HO7/c/YOVmIS
L5DSDwDLO/47
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fPzqr4XrG8cPR5Wiaxz/2jPwNBwAMQHcx/eAvIZ
DF8C+YW2XNcXF5wFyS9E5TMIvQLyGcDgAki+CcR/E7hDrvX1RZD8ZxA/DQze
geSTXwP5INnAHedA8ldQ+Q0ub4B8YzA4DJLf+gZu3kGQvOpbuPp9IPlpIP6S
ApCDDoDk2d6h8BnKUfkNz9+hmh/xHlX+xHu4/GuQvOUHVPmVqHwGqY9AfjUo
uKqOgOS7PqKa//sjqvuzP6HK3/mEKu/zGdX8vZ9R5XW/oOqf9wXVfXxf4e55
ApKvB/EPf9WI6T90FST//iuq+Qnf4PJHQfIXvqHYx+D4HcgHxbYt13GQ/EYQ
Xx4U/HJvQfJKP1DNn/QDrv+h/QknsUs/kNIXAK5AB60=
       "]], 
      LineBox[{{3.7612281076923075`*^9, 1.08}, {3.7612287*^9, 0.31}, {
       3.7612296*^9, 0.24}, {3.7612305*^9, 0.51}, {3.7612314*^9, 0.76}, {
       3.7612323*^9, 0.49}, {3.7612332*^9, 0.4}, {3.7612341*^9, 0.43}, {
       3.761235*^9, 0.36}, {3.7612359*^9, 0.8}, {3.7612368*^9, 0.78}, {
       3.7612377*^9, 0.68}, {3.7612386*^9, 0.75}, {3.761238919354839*^9, 
       1.08}}], 
      LineBox[{{3.7612401666666665`*^9, 1.08}, {3.7612404*^9, 0.87}, {
       3.7612413*^9, 0.94}, {3.7612422*^9, 0.25}, {3.7612431*^9, 0.34}, {
       3.7612436414634147`*^9, 1.08}}], LineBox[CompressedData["
1:eJxdlntIU2EYh79MtzU1TaduXjbnderyNlPTVlR0oShwUFCsIMmgSJpQUJbw
SUlFgUFBVyhSKAqMLqRdsNTKFO1iqBglGmSaFgkZBUWd3/njyK8Pxnj2nPey
97w7zF66y1PmJ4Q4rLzwrquqLp+hm1i8crjS1LBicpHyUTd4m3r6FJZuP4Vr
W6cc3toe+AZwhdvYX+frhrfOVBjkNrbD14LPncXpgP8LTvMiQxe8z19hW814
SZO1F34IXO9DwlH4kgC6XraA1faGO+FzdQoL9byCv6xjH65XeD+w8gn8QfCE
Uq1m/Cb8d73WbyP8VoPW7z34XgP7ZbM4/i5Ybc/7CT7FqNW7A3/ayPH6QPZ7
AymfHA2k68WGIOpHdgRp83gIXxRMLK8xi5jZXP8YWMX+N/C/wT8cCBiC3xnC
8e/BbbjdrU/h14TSPEUzGN2XNDXDZ84hFheZZUgYewl2qacN/lsYz39LOH//
19M8AL/EpHB3F847+Fsmzp8YwfM5GcH5/SM5/25m8TGS57MuivZNPIuifZP5
Zq5/xcz5oyw83yMWns9Pi7b/j+G3R2v7MQY/EM1+VQznvx/DPiOW/flYrh8U
x7+PA3FavRb4L3E8v01Wjn9hpevlQhvP74aN423x7E/E8/cXdo1H4CvsvH/D
dp6vJ4HjWxO4f1ci169jFqYkjj+UxH7qP1+WzL4vmf3yFO6vEaw+Ht0f4FNT
6XknzqRyvMHB+fc5+P6NMYuNaew7wR414XP44nSF1dtrGoS/nk7PaxGbQc9r
eTyD6/9hluVOrR72UQw62a+dy/09YpZZmewvZdK+ytAs9tXMcjKL+yvNZt+T
zX5pDs/3dg79nkRSLvd/KpfrB7g4/x4X79eIi/tfn8f12/M4vmAe+6vM0pzP
+3OUWf7K1/bpM/yOAs7/llmsLuT4B4Vc3zmf4y8wi+Ai7q+qiPv7yiw3F3P8
S2ZfzgLd9P+Lf76NRxg=
       "]], LineBox[CompressedData["
1:eJxdmHlcFWUUhkerW9KqYWnlVlnapqaVlaSoCK6AGyoICrK4sYmgoDiC4AqI
CgKigqC4ACKCLCKCgIAsmku4m/vaoqaVlXXP+HPiYf7h9/Lcc773nO/MN3Nv
J2evka7NFUWxbaYo8rdboYd1H8Mdc6uLgaaZlnf7Gv+VJdrHzKQhxbvOqNWO
ZkY9Mr992G3bKuHRou/Yyj9KhTf7zqg1nF8s3Fd0V4eoAw+6FAm/1ISP6gut
lokue9DFGFEhvFc/5k8VLW7MTCqFtzZnfJjohHi5bgp/aI7Pq279jVrRriPC
G/rrvEG45QCjDjJWfzHwuPB80Vo7Lh4S3mUgtBJPrbaw0P3UCw+00POVC79l
ofsrEG4/SF8/T3jNIPI+luTpluxfOyvyCGrlsRXyqZ6D9fpvCL8wmNx6CPZL
KRnC/N2HMn/yUMa3HGbUqdLNlBLhIdTqvWHM7zKc+Y8NZ/0DR5DnUCudrbn/
MaK19A4XhBts9Hk6Idzfhvmv2zC/nS37W2XL+e09kutvo1bbjmJ9y6jVR034
9NHs35nRmHdl2Bij1sqJuiW8aAzjPx3L+PVjyV+xo79gO87nL6JlOk0ztfl3
Gsf5PjIOn1f7jae/XeO5v50m6P2+KnzVBJ3L/aY2t2f/Z9mzP5ftOT+jHcjL
Hdj/LyaSb57I+DcceX6EO3J/f3fU6z0t3N3JqLXb1fS88JNO7K/VJPa3YBLr
7zqZ/UmgVk2c6S/ImflvO7M+Bxej7qldZcJrXXj/mk3h/GdMYf72ruSRrvT/
L7Xq5cb9+dGN8TbujC9153z18MC8Kps82J9WU1lf6FTWf78JnzKN/Ljoulq5
zgq3mK7zauG51MoHM7h+7Azmf34m8wfM5HzcmMn+jPM0ajftuia82pP787UX
+7OdWn3Lm/mXe7N/f1ErM3zo76wP+XBf8n2+XP+zWcy/YRb5q370t8CP/n71
4/xOmm14+n6gPV+/n831zf2ZP9uf/N0AztfqAK7/zBzW5zeH8Vea8DFzub8V
c+n/y0D63xLI+DeDmH9xEO/fP4L0/HK/qR7zWN+peTgv1MHzOX+F83Geqh8F
Gxq/Dyjrgun/xQW8f+ctYH/uLGD/Jqrc3zqV/LuFhsbvO2rmQt3PJeEdQpg/
KoT9U0I5396h9H8xlOeD7SKuf2AR838exv6nUKuvhzN+Ubh+nhwV/pto7XXU
TPPvupj7d2Ix/Q9aQv97lrC/Hy5l/NqljH9hGf3PoVZuLmP8+OWs79ByQ+P3
WfWbFTq/LnzHCvp7O4L+VkRw/b8jmH9mJPm5SPZvRBTOS7U4ivPZbSXnc+NK
1vdaNLkquoO0p732fL8bzftr8ir6P7qK89F/Nf3tXk3/760hX7OG8c/GsP7Z
Mez/1Rju39hYxh+MZfxXaw1Pv89o93faWq7fJo7zuSSO/M84+p8aT346nnxI
AvneBOb/eB37n7iO9b2USP/zE8l/SmS843quX0+t9N3A/d25Aeed0nEj+7dy
I9dvlsT1fZLILyXx/BmZrH/+lPCyZK7fcxP3L3UT+2Oawv6FUasPUjh/bqnk
P1Arlpv1/T8pPE/0k++754R32cL4uC3sX4s0+pubxvy30tj/CVvZn5qt7O+3
2/j8Sd/G+He2M3/EdvJ/qBXPHTx/zu/Qn1fa+4t1Ouvbn05/3TPIkzLIW2bS
/8JMrn8vk/HOOxl/bCf5gCzWl5PF+t7fxfiYXeTPZeN5rPhnG/D96Vq2ofHv
GYrdbs5f5W7m751Df1tzyNvmki/N5fw+asKn7WF9Z/ZwfobmMX9RHuM/yWd/
1/+vrwh/uQDPSyW4gPl/LuD6ToXs3+FC3j/99vJ8z9rL+joVMX90EfM338f8
vvtY32VqdVQx48uLyXvtx3mtbN4Pv2rrEvYnvITxD6kV91L2t6GU8VYH6D//
AP11LWN8fBnzm5Tr8drzN7Cc83e7HM9j1b6C+Wsr6L/PQfrLEP3kfUib73aV
5JGV9Pe4kv68qpj/QhXXt6lmfEk18/c4xPhkaqVVDeNDasjv17C/LrVc/3gt
+cA6rp9bx/U71zM+tp7xhsNG/eTnvmPCAw7r+yHvM20aRD/9/fM/5IB1xQ==

       "]], 
      LineBox[{{3.7616682*^9, 1.08}, {3.7616688*^9, 0.94}, {3.7616697*^9, 
       0.78}, {3.7616706*^9, 0.64}, {3.7616715*^9, 0.67}, {3.7616724*^9, 
       0.68}, {3.7616733*^9, 0.7}, {3.7616742*^9, 1.}, {
       3.7616742626086955`*^9, 1.08}}], 
      LineBox[{{3.7616771131578946`*^9, 1.08}, {3.7616778*^9, 0.79}, {
       3.7616787*^9, 0.8}, {3.7616796*^9, 0.71}, {3.76168029375*^9, 1.08}}], 
      LineBox[{{3.761682642*^9, 1.08}, {3.7616832*^9, 0.77}, {3.7616841*^9, 
       0.73}, {3.761685*^9, 0.64}, {3.7616859*^9, 0.93}, {
       3.7616860588235292`*^9, 1.08}}], 
      LineBox[{{3.76168818*^9, 1.08}, {3.7616886*^9, 0.8}, {3.7616895*^9, 
       0.54}, {3.7616904*^9, 0.52}, {3.7616913*^9, 0.47}, {3.7616922*^9, 
       0.47}, {3.7616931*^9, 0.48}, {3.761694*^9, 0.51}, {
       3.7616947772727275`*^9, 1.08}}], LineBox[CompressedData["
1:eJxdkTtIw1AUhoODQh11EwKCiIqTLiKE4iDWsd2ETqKgk3UTXQJSHBw6ih2t
k0Mn0RasaB2k0AwO4rPNS9umiQ2C4qjnv8PV44EQvnzndW8GF9cSy12KoozT
g3fsuDxU6w5mYvZmf37uPUqfdsDrWuQul6oR619gkpRRh1+pM9bvwclM+XMk
acLPm7y+aPL6MYv7rMV9r01cUNN+vCD6b4EVERZ8wFlPOrzecLjXXGIaRhNd
+LzLzqurL2wfJQM2qohn+O9/PvXK97PAIDX9BB9vEI+KCxH1l5yViSaxGG87
8AdN2a8B39ciFuM04bfBCZEgzv/x6x/hlzzi7D7iAf7Wk/v48LNt4kDgDfxJ
W+5ThR/2iUW7yCn8ni/Pa8D3BDL/DH4jYPl6K5Dzi/ALb8STIq7gK+BDXH/u
An66I/Mr8Ecd2e8afiBk/fTdUN7PeXSqtOqFf/7fD/2UKDM=
       "]], LineBox[CompressedData["
1:eJxdlV1IlEEUhkdz/XRzda0ttdVdo6CiqAuhLsKkgoqiwIW6CAsSDIokhbrI
CiZIKAgs6qI/KDAoCCwq0H6wUikStbRyUcrYSOnHRMvNXX+bdz6a9e0DkYdn
5sw5x5nj/OKDgZJ4IUSp+sFvIWThYGL/2k2hCk/NxqECxQfAgTpf5Y/CQcXi
I1gvFW/gtw4p3qu/Afh6cFVDeHFR1Xf45b8Ul+c7g9VlrfDXwEV6wSf4tN+K
tc7/DC/BrS34PsAPgvP09xZ+z7DiJTpAC3z7MMdfFyaW98KUr1jwR3F/IQp6
Dn8erMurq4dPGDHxn8AfGjHrQ/C9YD+W+97Db48ovlGGA5/Bv4iYfBvhV0ZN
/Db4m1HOP2PU+B74U+Cjqvuhiib4yKg5vx1+3xjH7xqjesTmcfaPxjm/pROG
v8JfmeD9KZO8/xiz+DlJ/ZK7phRfvoTvIXzbFPdvjbAo/h2wfV864f1x1r/9
r+DPMksRr1i3w6P7Uw627xfuiwyBY+eJwAyL8msA2/18AJ+XoFhfN2ctfHUC
e4+D/UmHRfWF//Mliby/M5H9BovrqwU3Iv2GXvhFSRz/YhLFk0nJ7I8ks//G
LHY6uf5mJ/dn9UyKJ28zi+wUWi/PgO15oO//BNjGbvhSF5/f4+L6t6USi6ep
nP+KND7/ehqf73Zz/BNujj/k5v3F6VxfR7rJF/NIrJ9l7l8f/H1w7D2LhbMt
mm8XmIXDY/qB9ygPe6zp71n0ecx5zfA75lg0n14yy1Vzab24xSwzM+g8cTqD
90fB9nvW+e3PtGi+doPtefoFfkuW6U8X/OMsWi+WzTP16Pl7FayfX00Q3uXl
8497uf4BL+e/O9u81w7419nW9HkoC3IU6z9nUM/3uznc31wf13fOZ+7DO/g4
/7T6KqM5uX4r9v/rL8Mrpjw=
       "]], LineBox[CompressedData["
1:eJxdlDtIm1EYhg8OSh0EQYcO1cZoTNTYmESNudALFh0EUQcHBcFilkK1CB1S
kIOQRRBBaCGCg7RLoRQCgUYQaRPFeBlaW4nikEZBi7GIQhwcpOf9h9O8PRB+
Hp7/fJdzvj+m0fH+sSIhxFP1w1MIeVBdcv64Oxuq+NR1+VDxEXh4LpG3Dl8o
FgP3Fb9WNhv6CZ8EG3puF95tUpwEJtbh3zOLyhrF533xqnDuK3yYWVzX6Phr
8EGz4tL0u4lA6QZ82sy+q5b3x2t1PWfw1jrOHwG7jJWEv2Ph/SFmeWahfGKo
XrFRTvoYfrte15eG91sVXyNd/hf8R7BxtAIs7tkUV4dzKsMe/CzYOO7sFvwt
+GUAEf/Av2jQ9/EdPtPA59vbqLgf5fal4L+AFyJYm/COJu5/qYnOU5bb6X0x
bad48srO9T1r5vP/AQ4a6wS+8wH72D+Owdc5dL5l+DdgmzFgK/DFLfS+fNWi
7yMKf/qfH3SyTzl1f5/hPS7FRjvxVfgPLj3PGfi7bn1f+/Azbo5/46Z44nkr
xZOHrex72ri/FWZhb+f4i+28v8zD8ac8en5+w194aB7kSAf3/41ZPvJy/qiX
45t8Ov8p/LyPvmdZ5Nf3swM/6ef5OfYXzE/qyduOQMH/x1/CqqqX
       "]], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1:eJxdmHdYV2UUx18nV9zKcLEUBRQZojgBcQCuSsvqKWxo2tLUsnpSq9fSlpWl
WaltbVlZ2XBkpqClJioOtgKi7OUAEVG75/p0vR/uPz7f5/M74z3nvOde9Js+
d8rMpkop7yZKyb/ZqwNnHHYpj03IX+i2Kf5cjFJ6o+go1/T186JKTa26HzF1
UOKKpJrAg8KXU6uGRnx2KvlJ0eWTt3ovKysRPumorXcL3yl6wzyJuEt4yDFT
C528dafwT0Vb6bhuEd7+OLTS1Lq6EX/wBPzp1BPko9JMvXaNPNuEb04j75VO
vopaNc+g/wWirXLmW/U7m0H7qZn0/3cmeWSWXb8dwr/O4vk8sxn/tWzyOmr1
aA7zy8yh//EnGX/7SfJ+p0xtHsY8UZHwdaKnWA73CW+Ta+pFctyFe4QvzmV+
FdR6Wh7zO5TH/kfn2/OYL/zHmzpVuM9p+/dHhL9DrVWBXf8DwucX2Oc/JDxf
dMpBecqFTzlj6gjrSRaedIbzF3GW+a0/y/l1K4TWSwtZv5pC1n9mEXlaEf3H
FdP/lmLygBLaf1hinzdLuFFq9ydP+HOl+L0uKUW/1D1l9H+gjP0bXs78vytn
fj0qWL83K+BPXa2g/ZxK1vdUJfO7pQr+1F9VrG9oNe/XZ9X03+Ec4y+h1uca
8ennOb9HzzP+6Aumrg2UBKWe+pcLdn32C/e/aNsfF/7eRTtfmVfVosbUcrrE
FUeFPy16vrVgU4QX1nC+76w1tVWOxCrh/9SSD75E/99cov8udcz/dWp9uY75
P3aZ9cu6zPmYUE/7P+rZv+ArrN9H1Kptg52/tf+fb6B9ZQP7c99V9ufwVeYX
c43z/9M1ct/r5O9ep/8myoD/J0U77E+Lduyn25sY/9+nYuHJoh33Y2BTA/O5
QbQjvnsz+NPLqFVtIz6rOe3TqXV8C9pvpdaBLZnfmpa2fY7wVi6mttrjdkr4
QhfmX+qCeqh7DfJ/RTv6O6KVqZNl/JL2Cv+eWnm5Mv+3RN+Y71zh10Qr67H2
9xOtDee+VrmtDXxf3NrGcM6T2tWG/Qtry/N/3pa8YzucR73UjvHPU6sZ7Q3n
fdXHqNWYDobzfah/7cD69e5o4H6uFn1jf50W3rIT+/dMJ+Zf1Ijf1Zn+93XG
7/UQN9p/68b6d3XnfL1Brevdaf+4B/1nexh4P0/0tM+fIXyHJ+ezfxcD++Pj
LvTfriv9v9CV56tqxO/vRn6kG+ZRj+xO/z9Ta78etF/Zg7ypF/lTXva+sO5/
gRfn5w5v2u/xZn0H+WDf6C99mJ+HL+1f8WX8S760f9iP9hl+nO+EnuTbenJ+
gnoZzu85tbYX77erP+0X+dN/mT/Pl9ib/g+Kll97L8sWHtXHcH6P6R/68H57
B/D+vB1A/9cDGH9uoH2frPd/XiDrc1sQ5k3tDiIP78v9/0Vf+u/Uj/19uR/t
L4i+8T0g864eCjac71N9PBjnUWP7c3/8JnqW9VQK7xNi4Pv1/RDWxyWU9Xs2
lLw4lPvr7jDD+b2g9ocZzu8FPTTcjp8mfGM48+82gPt7ObW+MsCub5nw2RGc
n5wI1n/SQPb3z4HkIYNY308Gsf7tI7mfXozk/aiOZPwHBnN+Uql17BC7f3Kf
1eYhnN+eQ+l/1VDaNxvG/bZgGPmZYcx/6nDyvdQqcgTjfzWC988zivzVKPK6
KO7XR6LxvleZ0ezvuBjMk9oeQ953JN9v60Zi3nTrWNZnMbUuj2V+00Zh3+iU
UdjXKno067NpNO19xnA/rqA2LxjjzxvL/uSPpf/Jcax/Uhznb0A898P6eMbv
nMD4SxMY/2ICzzdznIG/D06M4/zHjbf9ZQr/XbSVfnqB8IAJzO+DCay/MdHB
V/rvnzPRuPn/Of8BNVofMw==
       "]], LineBox[CompressedData["
1:eJxdmHtYzmcYxx/G9jI2NjbbMIaNsbGxYZg5bIwN5UxOIaLImXJ4RBQlOecU
ypmcVQ6FEKIoiig6KHRwzGbD9t6v63r49P7T9b0+v/t+nuc+Pb9f1R1H2w8t
rpSaWkwp+Wv9DehsyWvVPt29Qmi7hy2t2ld0eFWvXLvwAqvWz0U/re3gf6Lw
qnDXLobHCU8VPaZF6eRgt3zhneyMviA80g7Pq/r2Vv1q6YvCg+zJy3Ul16JD
3MShaPVQtG276eeED+pm1XVke7XPC0/oxv217k6+j1rX6GHVHuLO/aTwJT2M
faTwEj3N80eET+hp4nVX+G3RKwPlFyG8Ry88r0/3gj/VuDee15tFS7RalA4T
XqkPtPamVs/60L9zX/pP6Uv7Dg7c/2EHE89jwuv2M/qO8NWiG9p+0cLL9Mfz
alp/8vwivP8Ak/9U4XEDkE/VciDyqXcNRD5VtUHM70LR0YVSgKeEF3Pk/sc4
mnhKPlSGI89vP5jxi6bWDYcwfyFDmP8KQxlfr6G0L6RWTk7kSdSq3TDmL2wY
ee3htF9BrUo5k09xZv3ec2Z99RlB+1hq3Wwk62PHSJO/28Iru7A//Vxo/8KF
8RvlyvOluTJ+nUcxvlGjuL8Go5nfdaO5v/JutJ/pRv6IWjuOIU+k1m3Gcv/7
x/J8Ncdxf0tF28JdwTYfS45n/CeON/PhkvBs0Xl2suPjwntOYP/ETGD/NJmI
5/WWiaZ/bgn/ZJLZT7Jwn0mmXzKE/zPJnCdd+IjJVm1vC5htfl8XbUtvixTh
HaeY+f5A+JEpnN/13Dk/17izf8t6cD5P9+D8LvBgfw+Yin7W8VOZn1+mMb+7
qVX16cxPwHRznnvCi88gH0utMmfQf1dNfpJaN5rJ9TfOZP1U9OT+53jS/1NP
1tewWeb5LOHJsxi/9rNZH+HUqo4X/Qd6sf5Kz4HW7nM4P3PnmPPFCO87F1qd
n8v8NPc26+cK3+nN/VXx4foLfMz5bgh/6cPzjZ7H+rg5D/WmusxnfR2bb/pB
+kl958vzrfdl/j7ww32gPf2Yn8d+jN/gBeSXF3B+tvVn/g74sz5qLeT6yxay
Pt4OoP9J1DongP57LaL/M4to33Qx5+PWxeSfLmF+5i3h/v6l1iOXmnzY7v8b
S3n+P5bR/ugy8m+Wk69dTv7eCu5vxgquf78IHxjI/FwMZHxarWT89qwk/2IV
11+0ivt7azX5OGqVJVq8O/jLPNXd1li1k+2XJPzUGtr/sJb2m9Zyfn8UZO6L
bOFzg4z/BOF/BeG+UMPX4b7VV9exP35fz/6JoFZfbyBfucH0s9zn6t1g4z9N
uEcw7fOCOR8cQtjfF0JYfy028n4LpdZVN/F+86fW/23ifHXbzPze2mziZZvv
dltYH8e30P/3W2m/gVp9uI32s7Zxvj7ZxvwO2U77K9T61x3kB19r2/fFlzst
b75PqeU7uf47oayfyaHsjzvUqvcurn+WWv20m/Hdtpv5+WwP5+d80W+8Hzzf
g/1ql728H1L3mnhlCv9zH+dz5D7Us/52P+pZBe1nfb5/gFwfYPweHGB9Djpo
efN7U186yPppHcb47A1jfdQIZ34XhzO+JSIYv/ERzM/tCPrvfoj2p6n1j4dp
v/kw+cdHyL2p9d9H6N/5KPm1o8x/h0gLvk8PRZLXjaL9qij6L3OM+5tKrfKL
8H7H6T/uOP3/fIL2u6j159G0XxjN/lAnGZ8x1Dr9JO3tT9H/iVO0b3ia+Q0+
TV4hxvSDvG/r2THGn7xvq8IYrj/0DOsvSfSr92mb/W9nLW9+D6uws6zvr85x
vq84x/lvibXg/WlKLPndWPZHn/PoR32OWjW7wPtn+wX0s6ocZ9XivaqXrb99
47Bf9SKO8901nv2VFs/50uki8xN1kfmtf4l83SXycgn0PzOB/CG1ckw08Zf3
GZ2QSP9tLjN/+y7Tf80r7O8lV1gfJZNYXxOoVXYS7Xsk0z4mmfaNr5Jvucr+
rXSN3Oca/T8rwkekMD8pKbzfOl7n/X74OvNb74ap/zPCV9/g/V82lf6npdJ/
gehX7SLfC7p/Gnl8Gvff8ibjv5taV7vF+yfgFvpJF0vn/TE2nefLSGd8umZw
/egM8kaZrK+QTOa3YpZ53pYfryzyp1nwp51us/6SqXW7bK4fTq1r59A+MIf7
K3WH9e9+h/b3qFXfu+Sx1Kr5Pe5vB7Wqkkt7v1yu/7IIH5VH+5t53H/nfPJj
+ayvBgVWbXt9Ds0Rvr6A/svf5/qe92n/6D7n6+AHtE98wPpr+5Dn30+taj2i
/dJHtH/7sQXfzxMfW/D/85zHph8Shfd8YsH/R848Yf81KTTny27ZdEHmyELL
6//X/w9zc4hC
       "]], LineBox[CompressedData["
1:eJxdlF1Ik1EYx59m6s6sTed0brMX7CL0IiGioIthXkRCBSkGXQyKSLso0CgI
FPJAVBdCQkGQUBeZXgQJBaGCRX6MMiwyA4O6SNaFovRBLCu/Ov+Nvb7/HRjj
t9/7nPN8vDsVp1oamlwiEjMffPd0VoeW3Iu1dbNtgf6DP2vMT2fB3XewJgzr
T+CxZGWsazQOf/gPsR4GD1pXF+oH38Lv/Gu4ythk5ST8XfD5qGemp/UNvPcf
sb4MTh0/+xr+O7ghteEr+BPL7N+BF+vxwDz8/hXDOC3W9R7+8QqfX7FKLDdX
aT/tWqN65cKa/fwwfAK8O7XG4BvXDSP7qOcl/Dj4QSsKegG/R1SmH8/he8Hp
5wfgSzcR62vMspTlz7hUJj/UKx9d7OtyOH6IWVdttuOH4LvBjvl5cpWz39LO
rBdylbNeieUpZz/0ZB7tJ9F8w+1ob9s4/CNmsdwqM78R+Btg2ED/DPy6294/
Ad+ieP8vivt71EMsI+CNeehdBezvF3D+/i3sr4Ad8/+V5U9vtfuBfPUHcBqn
4Q94lfP/oJ96uX87fDRPfdtH50l+Idd3qZDqkTlmfbyI/UQRx+/zs3/oZx8u
5vo6mfVyMed3LsD+M7McKeH8npVwfHUpx98D/8Z4k3PwviDHdwRpXvIjy58s
4/Onynh+tSGOfxLi+O1heh/lVpjfj5wI538xwvFfIxx/rJx9vJzj925TdH/1
gdP37xR80DLcnFrf4K9bdj7TNYmBQ3FLbdzX/wEzTDaa
       "]], 
      LineBox[{{3.7628808127659574`*^9, 1.08}, {3.7628811*^9, 0.93}, {
       3.762882*^9, 0.26}, {3.7628829*^9, 0.26}, {3.7628838*^9, 0.23}, {
       3.7628847*^9, 0.23}, {3.7628855895348835`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxdlg1IU1EUx09S0KKgSKgoNNFyS3NrWs75MXXq5qabb5pOndMEg4JSoaIP
ihckFBgrKPqgKFAoKCwo0kjMtj7I0sqwwErSMrJMMDIoCnrnBVf+DkT++93z
P+fec897i6qt99SFEVGz8sf/ibrrozXjWfbhveFttkkLkdzLOhCc0voCI4qm
jBhFJ6qfEPM21mfP8GeMeeQqRXdENH2VOrqYB1i3NqTPe93SzZxWI29ATcOs
dT7O2MlcigVNwVjwk41ajG/RIl+sw/yHUMs/dOhftwbzD7COZPuIAeZ5cYr+
qeUF75nfYq2YKY7tzGPjMf4Uapq7FtbLu1HT2AxenoC8JwHrN+tx/1f0oh+P
mS83KDpdNVD712wQ6/uY/zEIv+fMt61TtNJ85QZMMH/HWr0Owz3MXUZYL3cZ
wY/0ieh/gfW4xN+8YL4wSdGNakG9zOUkzD+ZJNbfY75pPdw36mcd4usYfMA8
ewPyG6z3qRu4zzw6Gft/grXazqYPzGebsL87TZh/1IT9K03B83+YguefbEZ+
yQx+tDQV/Q+jpl+pOB9b0rD+wTSMd6Rj/jus1VEmtT9xGeI8PjI/l4H+8y2Y
f78F6/82g/szcf77MjG/JQvru5aF/VmZjfxYNu5vlhX9G63oP2LF/ntyMD6U
g/tLzBXz+pl5ay7mD8/D/TXlYfwUatpsw/l/ZRPPx37mNjuef7td3J+nzLX5
mP90PtavcWD+PQ7kXxx4PhVOuO/0xIn9Sy0QmuulqwXieTDIfEUhxh8txPx/
UdN2F/oPuZC73cjvupEbivD5eLEI+SIJ+UEJ9/9dwvpqPRj/0oP5rcX4frpZ
jP4xJTjfJ0vE+tvM52zE5+8u1PKnGbysFP0flYIfmcow/jJqWuZFfsSL9f32
4v63liN/U47xzgoxL6PMOyvwfsZX4nyer8T7ucCH53tgWg8xn/Dh/a6uAi0/
q8L5yvRjfdf9MM8UVY3vh+Os//8eUd8fYTXC/61lSdUOa41m+vfKPxzjWTs=

       "]], LineBox[CompressedData["
1:eJxdmndcjV8cx4/tPvbemdl7ryQze2TPaNjKpozHSHY2ZYZs2SojSVEUIQqR
jELZsul3z/N7edz3vX/w+njf7zznfO957lV+pEtvp8xCCDvjH/JvIXbajzCk
2dgmuRX27/jB2vgPYVL7eMtXklGrDUcatZUSt9vV6qnkflJrUrkqeREHo+4d
aOGR2itC8sVSa+6Srkn+xUH3Fyn5KEejrjbEKzS9apTkcY66vwDJbZ2MOq2X
dHhc8kCp3aU7t1OSV3Mm93amvTIKWnUbhfeLVGp18Gj6jxqt80uStxwDLY5I
raU/JEXyMmMZf9VY+FP/UAuXcYyfSC16jqd9yHj6rzfBqLV2B/pL7juB9gUn
ki+YyPifJrI/Di70H+vC+O1c4U+cdtXfr9VvOYn+N05ifdknk8+YzPgpZnzA
FNpHTGF+zaaSH5hK+5LT6H/ZNPKf0/T9GCT5uOmsL2G6fh5uSd51hr6ftf1/
YQbj15rJ/LbPJM87C/HEPKmjo+QrQfJ3Ul827iav0HDJ7d14vmLc6N/GnfUd
d+f6V5jN+Gtns74sc4z6iwyX/lLyKXPIn8+hfZ+57F/4XMZvNI98L7VaVKV/
T5X8q8r+jJ7P9YmnFp0WGLVmXjhZ8qAFur8wyasv1OMFS+5DLXItMuo9rnKi
hUjuvojnO41aHeJB+2gP2lstZn7+i/X5dl5yC09o4eWpz9PXkmd4cn1dl7D/
T5Ywfq+l5JeoRf1l5LuoRaHl5AuXM/5nM+64gut3dwV5+5U6vyH5mZW6vzjJ
K6/i58OmVXq/Xkmew4v5zaRWX5rxgau5fyJXkzdfw/l3cA15qbX0v3wt9+8v
Mz5+He0frWP8butpH0yt1t5AvoNazbeR/VU3Mv57qSdpGyZa8hGbdPvnkt/a
xPzabGb9JzYzfkVv8nXeXP+sPjzfU31o/8KH+fXdwvyvbOH+b7yV823fVp7P
YtuMWvs49dLm65JterxYyb9t4/kcs5353d/O89F5B+Of3UFeY6fez0eSb9mJ
eSty+xp1A+11WfLZvqz/jS/rH7qL5/+G1Cb3g1a7uT5HqdWye9i/1XtYn/Bj
/El+nI9JfvTfey/tQ/eSN9hHvnufwfQ+Jgrv1/vzQvJF+5lf+n7aOx3g/rl3
gPu7w0HmH3CQ9lUOMb/Nh7h+OQ9z/WZRq68O6/tHzlMx6Ajn87UjWE/Rwp/r
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
BW4nhg==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQnXd7W08a1xtHj4dVIuvcP9oDhc6C+G8Cd8i1vn4I
5DfYpgP5/Ye+asT0PwLJrwPxC225ri8uuAuSl8sA8jVjQCrugOT7UfkN/0F8
BjB4AJIvyETV/wDEP3sGBMD6A7NQ+A0Hs1DNN8pGlV+EymcQzgHygZ4B+uge
SL45B1X+Sw6KexpSclH8y3AVld/gmgcPH7D8NhAf7JyY9yB5tXy4fc9A8tPz
Uc1nL0A1v6IAVf4FiA+SDdwBci9DZCGq+08WooQXg1URqv9XFaHKSxcD+YdB
0XXoLUi+uxiu/g1I/g+IDzZ+3XOQfE4JkG8MBo9B8nfR+OalSOkDAIL65As=

       "]], 
      LineBox[{{3.763579671428571*^9, 1.08}, {3.7635804*^9, 0.57}, {
       3.7635813*^9, 0.54}, {3.7635822*^9, 0.44}, {3.7635831*^9, 0.44}, {
       3.763584*^9, 0.45}, {3.7635849*^9, 0.42}, {3.7635858*^9, 0.42}, {
       3.7635867*^9, 0.43}, {3.7635876*^9, 0.42}, {3.7635885*^9, 0.43}, {
       3.7635894*^9, 0.44}, {3.7635903*^9, 0.42}, {3.7635912*^9, 0.42}, {
       3.763592025*^9, 1.08}}], 
      LineBox[{{3.763592175*^9, 1.08}, {3.763593*^9, 0.42}, {3.7635939*^9, 
       0.45}, {3.7635948*^9, 0.42}, {3.7635957*^9, 0.42}, {3.7635966*^9, 
       0.42}, {3.7635975*^9, 0.43}, {3.7635984*^9, 0.46}, {3.7635993*^9, 
       0.45}, {3.7636002*^9, 0.43}, {3.7636011*^9, 0.44}, {3.763602*^9, 
       0.42}, {3.7636029*^9, 0.43}, {3.7636037863636365`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxVkj1IAmEYxx+a6mgUWiIJggzaGsOipVq7MXQJnMtRazjTK88879r6GB2D
WgRraXArLCjog7LoKgLRggKbe/7v8OT7wnH87vd8vtzw0rKZ6CGiEX7wHohX
xjNGe2Y+SIcO576niax9sN1aOB6yH5mpf535oo7TgF8Dj8W8WicCpk+drXiW
ORk17sorT/CXYFU+eICfyjH/RpBwD38EDquGN/BhmxnVYt41vG/LfFfwtMHM
w3HCKXwSvLeL04QP/vkE3txkXkX7dAW+Bm5jvRbiaSIv9T7gy3nZ5x0+5DDz
MrzRG3zOkX1e4TuO9AvgEwUtnm4L0k/52S0tnqpgdV1R1LNGi3r+TlHme4bv
dZlN9eEFPuWK/4JvulL/DH6xxKzKG1X485J+P5Oedp/WgafF06DfFf+z3Zf1
u/6XP0wQ9hc=
       "]], LineBox[CompressedData["
1:eJxdmXlcTtsXxndm78lYZopMmTLLlMxlCGUms8yUO1/usO/gjr97XbMyz2MR
UREiROZIhdKkokgoZPq1j0/H+61/7ue5z3nWetZae++z36PBVG8PrxJCiHcW
Qqj/CtHZYZkpu5dr8iLrAJdcZyHkfIVNsdt8nEwZhVgkKtzMc+mZPPvLih+y
vBAvLnw6edFZxZ9SON9ePRCn+NYrCnFEnvofMYrfTCwrryzEHiE2S7Lc1fPi
J4UXOqmMVxSfu9J4/pzip64CltGrDH+Riu+zmvxhhfXwIQGKb7TG8Buk+JUK
K2QdoNdXei2el1+uNeIHKz5d4Wx39USg4kf5AotIX+od/Zh/tx/iyZrrqP+T
WL5eB79iznrq76wnP2gD6zu+gflbbqS/9Rupr7CJ/PebyD9RWF8qIknxEzcX
YrUaPJdGK/7aZuqdtzD/wS30V38r61+2lXqLbdR/RixTtlE/fHsh9vNVf6GK
j9hO/x12MP/2HYxfbSf7v2Qn9fkK68vfU60XOWMX9bHE0mU3/YUQS/s95H33
UF9+byHWt2PyHcUv2sv1/WivsX8uKH78PvKX9nH9dt/P/Pv3s756/kb+k4r/
x984Dx4q/r0/19+CANZ/P4D80AOsL5xYtjnI/FsOsv4qgdT/HEj+GbGYdojz
vUks+h6mPugw62scRH+rghi/zBHW99UR8hnF+NFH6f/CUfrrHMz57Alm/loh
jP9XCPmCYvzcUAOnK/5uKOMPPsb9EXaM+lbH2Z8Nx43zPkzxFcOo/yGM/c0J
o79JJxj/OrHsedI47xMUH6hwe/0vVfENTpFffor9KxHO+J8Ty9Rw1j/iNPmz
pzmfjmfI7yAW1SNY328R7M/LCPqbeZb9iTtrnJ+Zinc9Rz6UWDY7T39+xNIU
Sf3iSK6/rGK85wXyly8wvtNF5ve/yP7ZRBnziVD8v1FYb+JDFNeH9yXGTyKW
wy7T3+nL7H/bK+S3XmH8qlc5n1+u0v/zq8w//RrmJW9dY339rpuK7i/6fI5c
Z/wmNxh/tcKKtVlyV/Flo3n+fh1twv0kM5r1j7mJesRFYtnlFv3tvUX/tWMK
8XYftUHCFf93jBH/tOLfxNDfvNtGffr7+95tPC/cYnn+n4ilP4c48hvj2N9K
8ezPj/HcH0/jqZ98h/obxLLXXfb/0F3ydvcwL7HiHvohSyawP18obKs3RL9/
piWYcD8dmWjUe1Hx5xLpv9N9zmfnffqvkcT99XsS+VdJ1M9K5vqOV/jTfVQO
SGH9x1LY3+ap5NelktfSyH+Xxv5lp/F8nfAA61VeIRY90k3m9w0ZkM71aZvB
/EszDD7WWT/1TOb3GemTyfqTM7n/3R+yf2cekm/3iPVte8T8VlmM/2sW9S+y
GN8rm3xMNtaD6P/Y2E/6++noY/RDNH3C9bfmCfdPuRyuj29y6P9hDv2PfUp/
UU/pr2su4+/L5XzrPGP8/z3DPOTbZ5z//OfUJzznfIe8YP6TL5i/dR7Pp015
7H/lfNYn8+kvN5/9mfKSfDSx7P2K/Tn8yvCj7nOy4WvyK4llqQLG/7KA/h4U
sD+j3nD9nycWjm+5v3e9Zfya75j/j3c8X16/o372e5P5fUHceU9+4Afqj3/g
+d9CaDjf1ytsNh9LCw3n4/cW5B8X4yeW0Mx/78urCputD+eSwPKAwmb+65ci
/x+xsCitof8LS2uYX4rCZvP3KEN9RBnq25clv70s4knrcognlpQjn1cO8cSM
8hruB7fLa+bvM+Fioj7YxPj2mob5rdVYX3lL+v/Wkv4fWbL+cRXo71IF8t0q
Mv/+ioxft5KG+8E/lTR833lXSTPfT2JBZeoTicXQKqz/FLFoU5X+NhOLKlbU
/2TF+p9ZUT/Vmvqb1tT3qcb8QcSyUfVCrNu31u+vq6preP+VrsH6vqrB/OnF
+NE1uX8iazJ/51rMv7sW/deqzf7+WZv6gmL8nDrk737C+v4fVFcrOr8eKD6s
LvO3rIf1KDbU4/6sYMP6frCh/okN5zPJlvVfs6W/nvXp/yCxaNCA/V3WgOdH
CTvun8/sjOcTFZ9qx/kNb8j9ebYh/XdoxPw7GuG8k9Uacz6/Ecv8xqx/ZhOt
6H6p+i1jm/D8dW1K/yHEopk9++9rT97UjPpFCn/6PSaymnH+45uz/svN8bzs
3oLnu7/C+nJxeqT4ei3J/9sS8eR7YuHdiv7ut2L/hjlQH+7A9dG2Nfu7hVhU
bcP183Mb8s8V/vg+1n/fTGurmd/3xa221PdtR/0RYtm4PdfH6vZcP2U6UP81
scwoxo/pSP0FhT9+T7yv+C6dNPx+3NOJ86/tSP1fjvT3xpH9n9uZ+e8Ry8Fd
2P8TXci36kp+I7Gs2I3xfySWOd2on9xdw/fT693pv5cT9YFO1Nv14PyWE4uS
zuQ/d6a/NGf6H9GT/Dli2bEX+Z29uD+r9+b+/703878kFrP6aPi+FdcH71sx
oC/nF9qX+ub96N+vH/1p/Zl/MbHI7s/6PF3Y3ysu5J1cNdwPAlw1/D62GcDz
Z+kA6j8obPZ91Wcg/SURC/dB5E8Por92g8lvHcz6rdyY/xc3xn/hxv5NH0I+
Zgj5fkMZ/6jCH3+/Rim+yTCc92LNMOrLuuN9KL5xp/9Md8Yf68H5X/Sgvutw
vl/3Duf5W2cEz9e/icXbETz/540kn/AJ69+P3UZp+H1zchTrcxhNf5tGc39U
GsP4cgzrfzqG850ylvFvjOV8eo/jfA+NI99wPNfnCoVn6H+3FV/K0/Cbrfgv
PLl/H3gy/sgJnM/5CfTXaSLz75rI+dWYRP6PSYz/iljMnsz48cRi4BT279gU
6ltM1fDvc+um8v1nOY35v5vG+I+J5YTp5K9OZ/4eXqzvgBf1tjPI/zeDvJhJ
/wuJZXIx3mMW9WdmcX7tZ2v4frZtNvXWczT8+/Kvc4zzKVnxeQp/vP+kKN5r
rlZ0/1H9FLcVNvt+2n+eMW9dHzxPw/2j6XzMQ6ydr5l/T5DlFmhFvz/0++u3
C8g/XGCcv1mKH+etmd/nZZQ36g3v4KN9+vf7/wOF2e5G
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQrea8wa6A+42jx8MqkXXuH+0ZGBpWg/gx/Ye+asTc
B/IZZAqBfAYweACS7wHxd8i1vg7ccQ8k/7cQRX1DbhGQrwkWeAKSvwfiLymw
5bq+GKzfrxjI/6YBUgDiM+wvhtv/ECSvXwLkg1QX2D4CyS8A8WfNBAGwvEAp
Cp+hsRRV/8dSVPOTyuDuuQOSvwTig0znuv4YJO9cDuQf/grS8BYkvxnEB/lO
rvU2SF6lAsiHGH8LJD8Flc/AWgnkF4IdfBckXwriB4EDCGz/MxD/7BkQANsf
VoXCZzhehWq+eTWKexlWoPIbJGpQ5TtBfJDuKhFQfDT8rEF1X1Ytin8abtUi
yVddlnarQ4p/ADfb3xg=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQLWJtGFDH/cbR42GVyDr3j/YMDA27QfxCW67riwvu
AvkMOvVA/tkzIHAHJD8HxNeM6T/0VQPEZ+BtAPLB2h/eAsnXgvitrwN3yLXe
Bsm/a0BR3xDXiCp/vhFVv30TqvyGJlR5hWYUPsPEZlT3Mbag6i9qQbX/UQuq
/4JbgXygYqCOeyD5w6h8BpM2IP+bBsiAByD5JW2o8qLtQD7Y+Jj7IPlWEH9J
AciCCyD5byD+4a8gA46C5NM6gPxZM0FgJ0j+Ooj/BuTc1xtB8u6dKHyGHSB+
ENjCGyB5jS4gH+R6W67jIPmZXXDzToLkObvh6k+A5KtAfLDz+i+B5F91w8Nj
j31oaKh1D1L8AwAdB+Il
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQHRV1y7+X+42jx8MqkXXuH+0ZGBrWgPhBO+RaXwfe
APIZZPuA/FkzQeAkSL4XxC+05bq+uOAsSP5fH1z9CZB8Xj+Qv6QApOAASP4+
iF8NNP1h1RaQvP8EuHk7QfIHUPkNBhOBfJDptlzHQfILUfkNgpOAfGMwuAyS
b0LlN3wC8RnA4AJIPnkykA923o5zIPnLID7Yuw9PgeRdpgD5YOOvg/VvQeUz
qE5F8W/D1Kmo5rNNA/LfBIJsuAiSL5sG9z9Y/jmIrxnTf+irxh2QfPh0uP4H
IPkTIH4aGFwDyVvMAPLBwSVyDyS/cgaqvORMVPu7ZqL67xeafPYsFPc03J6F
El8MPrOR4mvZ0qmzZiOlBwBxKdB4
       "]], LineBox[CompressedData["
1:eJxdkz1IQlEYhg8tgUFDRA1B4FDo0NDQFGINkWOGQ4MRRD+jRkOQEAeixoKG
IMlKr5bm/09U0NAv/WDREBhNSUugUCHSWOd1uPR2QS6Pz/ed77z3nmscdw1P
1gkhetUP99ZRR8dmQ7nfVpxvTgx+WdVfXeD7PK5PxdIHNhQ0t8VwDd/oU2x2
rp5XTSfwC2CP6i7O5+A/fHr9IfzYFtWLR2bZt031Ig0u24/al0ppeOOOYpD9
KAG/xizr/FQvZpnlm5/7HQHuvwR7N3BF4Hs07g9pnK8lyP3LQe7//uenQzz/
OUTrSdsu7/+YWZr3eL53j70hrM8/hveE2ZfCvD9nRN/PA3w+wu/Xsq94uFZw
Ax8H145H8Q6+Pao4qKoL2in8SpTz/URpnnTFON9rjPMPxRVfVE3qRFzBn8Up
j+xOcL4AeAbj3ffwTUl9vUv4xST3V5J8/iZS7J9SlEcMpNkfMIvODJ/v9Yye
7wy+Pquv9wo/B8bumhMF+PcsPU85kqPnLW7BtXiWF+vUW1sl9+f7/AWz5pNe

       "]], 
      LineBox[{{3.764239075*^9, 1.08}, {3.7642392*^9, 1.03}, {
       3.764239297826087*^9, 1.08}}], 
      LineBox[{{3.7642404884210525`*^9, 1.08}, {3.764241*^9, 0.54}, {
       3.7642419*^9, 0.62}, {3.7642428*^9, 0.96}, {3.764242916129032*^9, 
       1.08}}], LineBox[CompressedData["
1:eJxdmXdYj2scxp9QqF9mw2iorJK9R7LLKoWQChHKKEU0PSLJnsc+OPaxxyFb
ZSsiyThFpES2IqvT67qOfN7fP113n999f8fzvs/VdWXh7e/qU0YIkaklhPJz
Yvt2A07r5Xd1zAo12O/wzr7kV4cV3fLnJ7FES8szJTrOLPqlS9xZha9QdFjJ
t7NCjyq87NkSvW6t8tmt8KnUMlvR+S5KwiGFDz5HfpFatDlPvoNaGMeTx8Sj
H/G5VG9T+PgE+u9Ty96J5CcT0a+0ufBr/v0KX3+BXO8i5wu/iO/LfBX3vESe
fIn1O19mf/uphfkV8iVXmC+ukgdQiywVd7lGnnCN/bW4zvyt18mrJ5HPSWL+
R2rhk8z9pSXz/Hrd+PX9Ewo/doP7b3CT+aupRYUU5s9IIc+jlsNukV+jlh1u
k++5zfzaqexvYSrfj2/UYtId7i/jDvfnlMb8s2ms3/Qu8zfdpb9KOv1S0brp
WwPsdI8r/F065xt1j/m3qWW3++RHqKXVA9Zf+YC83EP6p1HLZyru9i/3c4la
tM2gf2cG69fIpH8etSjK5H58H5E/ULS1x5KEgoanFd7nMfs79Zj3S6Ms+jdk
MV/zhP6IJ/S/UnGvp+z/BrWwzyY/kE1/nWfkS5+Ra+WQT8nh8/Ekh/275rJ+
Yi733/I587c9Z75BHs8nOo/+gjzsQ4x9QX6XWji8ZP5xRW8r6T5963mFN8zH
PHJNPt+/iq84X8grzvdCxd1fk19/zf46vuF8e9+wP5O35Ive0v+dWkx+R38m
tXB+z/f/3HvyZh+Yv/kDz7fqR8436yPrvy/VP+9f7wLyVGrZvZDzHS2kv+4n
9rfqE89H+zPPJ/gz83NUfEgR/ZeLmN/uC+fb9YX+ml/pj/2KfsUXFff7Rv6Q
Wvb9jvtCnP5ObvuDz+fGH+T6xXr4+yqymPVfU4sRQoPzv6no33gXLQ3mP6iF
7wuLMhrsdxm1KFOW+YFlyZ8q+rfnc2A58gvUspU2+hHbtek31KF/LrUs1KF/
XHn608tzPscK5HEVNLhfrCsyfy210NWlP1SX9V/q0j9cj/4katlJQ75Pw/Mx
1SdfrM/6P1TcvxL5o0rsb0BlPA/yfGX6m1ehf0sV8mpV2X9UVeZ/UPHR1ZAn
7lQj71Gd+f9Qy3oGPL8/DMh1DOmfbsj5cg3Z31AjPr9XjNhfe2Pm7zYmr1WD
fD61+FqD+RNqkv9LLfvVYv6ZWuSNa9P/Z23OV8mEfGap/nl/vDHh/CNNmZ9i
yvpdzXj+h8zotzQnX27O+mXrMD+oDs8vm1oOsqD/IrVsbUm+w5LzG1kxP8aK
/X2yYv/j67L+vbq8H3vX4/5O1CO3qU//uvrkeg3IwxT92/2fr+jS+156NEQ9
kUwt7ayZv98aedLMhnyJDXmxDecPaMT9Pm5Ev4stebwt99uiMflf1KJ6E/LZ
1OJjE57PmKZ8/tKa0t+zGf3HmvF+rN+c/tXNuf/yLchntGD+c2oxrCX5VWrR
oRXr/92KvHZr+hdQi28qPrENzyejDXn/tuRnqWWTdpxvE7Ws3J5ctmf+W2ox
qgP5LWrRrSPrH+5IbtWJ/hXUopwd+VQ7Pl/P7Jg/uDPnv9SZ/jb2zN9pz/mN
u3D+eV3o/0wtfLuS36cWfbqxv5PdyBt1p389tdD04P0VTi1e9WD/nj3pv0Et
O/ciP9CLfnMH7m+pA/3Ckf4p1DJLxV17Mz+BWrTsQ761D8/XoC/fzzl92V8B
tfTpx/p3qWWv/sw/3p+8gRP5Gifuv4Iz9x/izP7yqIX7AN7P1wbwfu/owvt3
jwv9Jq70L3Sl/7uKTxqowd//mQO5X6dB3N85atl0MPnmwZy/ihv5LDfmv3Pj
/r2HkN8eQn/3ocw/MpTPR91hPJ+V1ELbnfnT3Mlz3Dmf23DmXx7O/LYe9O/y
YH4NT/pjPXn+RZ70+3nR/8CL8/cdwf5OjWC+7UjyDSOZrz+K/UeMov+1int5
s/5Nb/ZnP5r5B6llnTHMX0YttXyYH+jD/TxR8YFjmZ84lvmtxjF/G7UwHE9/
NLUoVPGxvuTpvsx38GN+nB/9DSfw/Vw7gbziRM4XOpHzv1Dx4ZNY//ok9tdp
MvP3UgtTf77/i/zZ3w9qOTmA8z0K4PPlPIX9naeWzQKZvyWQ/VUNYn9RQaz/
Poj5o6fy/U+dSt5jGvOPUot6weSrgnk/60znfoOn059LLYfMIL8yg/52Iexv
dwh5zVD654dy/i/UYkIY7/+HYby/+4WTnw7nfI0juL+NEb/6i1d4pUjWj4xk
/ptI9j9iJp+PlJk8/y6S8x2S9FvMon/5LO63TBTnD4pi/tMo5g+azf4vzCZv
PYf526mFUTT53Gj294lajptL/z1q6RhDfiKGfut5fD7WUUvdWPKwWOa/pBYe
8+lPmk9ut4D+fdTCbCH54oWsX6zi/otKdHKS8sm2X2P56KCi//9/7n8asoVs

       "]], LineBox[CompressedData["
1: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
GI/OHEL7Z4Y6nbdRnz4/c6h17/8t/wPzpUvY
       "]], 
      LineBox[{{3.765045861290323*^9, 1.08}, {3.7650465*^9, 0.64}, {
       3.7650474*^9, 0.41}, {3.7650483*^9, 0.37}, {3.76504901*^9, 1.08}}], 
      LineBox[CompressedData["
1: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
PujxDb//Pf1Af/ePzO/UR/q3+cT46z9xfSp81us1/P43lVj8+Mz19//C+HeI
pc1Xxj/4levT4Bv5Zd+Yf9Hv9JfE8s13zp/PD+ovEYvOP6nf9pPxq/3i+sz+
xfXJ+5vzO/I3/R8Z8c5CA3+cWLbIpaG+NQrn0JfJDSwmE8svuek/JI+G9b2h
cI756Z5Xw/mzN6+G+1u9fPRflI/5FcnP/MPzM7+XRrxXAfLniWX7gshXbC5I
vlIh6mcQS2HC/IJMWH+GEe9QmPmlFqZ/0yL0TyzC9TUzhZ+cYEr9R1P6D9TI
/0ssuxWl/+6i9K9VjPkvKEb/gsWpH1uc/s+KU9+7BPnTxOKfkhr2/4aSnJ+/
zIBlHLH4aUb/YaWY391SrM+2NPlDpRm/YRnO5/Iy7G+xsqxvXFmuz1ti0a8c
418ux/q7lKd+e3n6V6/A+uYonOP8yPcX/UcRi8dGvEtF5neiIutraY71EGvN
EU+WrUT9lEr0/0oshlbWcH7frMz8e1Sh/74qjP93VQ2/fy1WOMff50yrsX8R
1ej/yojvU13Hhr9fX6iOfssONajfUoP1Va7J+mbWZP9y1SI/ohb7l1mL6+dY
m/qjtalvVof9SarD+SlVl/4xden/yYj3rUd9ej36W/5NPoVY1q5PPoFYFmrA
8zWUWD5vwPw8GrL+Mw3p37YR+Y2NuD4VGzP+NGLxy4gf3oTx7zVhf3s15fwd
bsrzp1Ez3M/Eima63vB+p3hz5jeeWL5rzvz6t2B+V4hF15asf0dL+tdoRf3c
Vqwvf2vyo1uTf6Lwn/el0rWNhvfDJxXO8f601T8a3j+vU/i/7xUM+nJttf+/
/zG8X4sllt/a6vkY3i/6tdPwfvFWO/I92yOe3N9ew/vz+h00vH9eonCO96ta
R/jJyI7kXxNL707IR1xUOMf7146dNbyf3Eosq3QhP0vhmD/vL3N3Zf7BXfXz
5r/3/13RD+FkoffLwKdZMP/m3bSc7yvlqm6IJ0pbMv5ES+b32YgfZAU/cd2K
vJU1/fdYs/463ckv7M78THqQD+tB/oUR79mT63+2J/NvZ8P+b7LBegpzW87v
dIX/fI8gftty/QN66ddfV/z9XlrO91XSzo774wixbGzP/q0kliUc9P1r+H4i
2kHD9xXvicUAR+6fq47cHxZO3D87iUVNZ/LznDl/BVw4/2NcsN7iqQv1bq70
P+UKP9najfmtd2N/yrtzfqcSy+/u9PfvjX7I2wob6OR0xdt46P0zfN9zwEPD
90kNPDU8fywlFkW9cN7LKC/yb7x4/+rbR8PzwaU+5Dt58/63zZv+VfvifiJm
9+V85fHR8PeZkcTyoQ/uN8K5H+s71o/xW/RnfquJRZkB5CcNYH1fiOXggdTf
IJbWvtTv9SVfd5CG57dFg5h/4cHUhw+mPsuI9xrC/M4Ri/ZDqU8eyv5W8qM+
3o/1CX/mF+hP/wx/+tsPI586jPomwxk/kViWDGD8CcTyQwD9BwZiHuS1QM5P
tyAt5/Ou3BXE+ak1gvXPH8H4BYMZPySY8Z8FM3/3kdSfHkm+zSjqN4wiX2G0
hvfDcaMxL/LHaOwnMWwM87szhvNlG0L+YAj5hmO5P5eNZf7FQvV8byhehvJ8
fBvK888nDOeduEwsO4fzfNxOLKtF8PybE0E+b6SG769GRfL++CiS57tLFO8/
x6N4f2kpef9ZI5l/2XGMP3kc+a8K//c99CPFDxmv4fnw5njev7pHs/590by/
1JvA+hdPYPwiMawvIob8S4VzfJ/VZyLn6/xEzk+HSRr+vrl5Evdn5cn6PKj7
jZwxmfnnmsL4QVNYf6YR7xBL/dFY1t90qobng6Sper1PFW8Wp/3/+eiF4mPi
clyflWa7OU778337/wAtge2Z
       "]], 
      LineBox[{{3.76573005*^9, 1.08}, {3.7657305*^9, 1.07}, {3.765730515*^9, 
       1.08}}], 
      LineBox[{{3.765734346774194*^9, 1.08}, {3.765735*^9, 0.63}, {
       3.7657359*^9, 0.69}, {3.7657368*^9, 0.68}, {3.765737085714286*^9, 
       1.08}}], LineBox[CompressedData["
1:eJxdm2VYVUsYhcfCZh+7u7tbr93dhd3dXWN3J9hiYICoqCCoKKiopChggYiE
gmIBKsZlto+b88Kf+yzX+daXs2fO7HNLjZzWa0x6IcSIDEKo/34LTW60yzKu
ZYfwhXkd2n9qnvJPUxX28VZ/b1KwDFW4ktXW2wkVFRbdd6fgOvpfhOJvKmxj
rf7CFV9zTwpOrKgMXin+yB7yufamYKH/6fxyhVfH9nQuvvq54j8rrIcT/kzx
I/eRD9xnxPdC8a2tjfgUFk7W+LwsawM9sduG9pn2p+AZzbIF205/qfi5+8lH
7af//gcY370D9N/wIP3bEYtCh8ivV1h5TwlB8T8OGfUNVPzEw4a+t+KfHzZ4
D8V3PmLwbop3UzhFPMWDg+KrHgUWB48a/XBRfM5jKfi48m7rrvilx+j/wzHD
/obih9ni89LPlnyL46iHdFRYh1Zhii91AvWW209gXkT6k6z/TIVL6AV7ovgI
hXXzZnr9e59Kwb30ALwU73mK8dW1Y31O2DH/fKeZ/xqF41R7Ym8pPjENP+4M
8pXBZ6AnOpyFP+l8lvWpdI7+rYlFNnv0Wy60Z/1i7Q29UMUPdjDyD1G8t8KL
1HgudFJ80/PGfF1VvP15xl/MkfwWR87Pb0ejHhcUP+0C9cOIRY+L+Lx0Jxa1
LpE/SixyOyEeucKJ/BdiOepyCvZIUAN0R/GPL2MeZJsrRn3vK/7yFWP9PlB8
uaus/56r1Ldw5vqZ58z8o4nFABfaexGLRtfIn75G/cKunI8NruSTXWk/yY36
L9wYX5frzO/6dda32g3Gf+gG9S1vUn8ZsYy/yfkZ7s758XenfctbtL9ALErf
Znw7bpPP4EH9WR7k33hw/fXxZP/vEMt6d8ifvEP7/HdZ/7V3GX/SXeY//h75
EGLR0Yvxu3iRr3yf/bMhFtkfUH/RA8YXl4a3ekh9n4esbzNvxu/gTf/Ffeh/
qw/j/+ND++m+9P/Kl3xPP/q/5cf5rO3P+T/mj+exyBNA+5XE4msA7Uc/YvxP
HpFvG8jn85VA4/Oeii//mPvv3sd8fmR+AizmP+H+HPOE+Q0Mov/7QYy/cbCx
3/gr/kywJc4vRUIs/52fdH5jCOf3Zwj1Jz/l/vfyKffHrs/o/8Yz9rf6c87P
YWKpveDzV74w9O4p/uML1FOMeInPy4CX5FuFcv+9GMr+lQmj/51hnP+Mrzi/
s4lF5CvWp28487sbzvzrv6b+qdf0XyCC9usi6P9bBO0nvKH+0ze07xRJ/WuR
nJ8qUdTfH0X7HNG0XxxN/+/T8ENiWB/fGMb331vqn39LvsQ78tveMT4RS34G
sQyPZf97xXH/vh2HeRJ13nO+bN9z/eb9QP1VH5h/ArEcE8/5D4on3+4j47/6
kXyFT+T3Ecssn6m/4DPr85ZYDPpC/QdfqN/kK+3PfiVfNIH2m4jFrwTGNyWR
/kMTyXdLov3NJPI1vtH+CLE0fWf+y78zvk/fGf/IH+QfEYvWyXx+XUrmfJT9
yefLLmKR6Rf15/yi/6hfjL/fb+Z3j1g2+EPe7g/1CwoN/HqFzer3XWGz/Cam
I/8sHfnO6cm7pqd+1Qz4vDyQAZ8XOTOSX5KR9h8UNns+Ds1E3i8T7ZtbUN/R
gnzJzOS3Z4aeTJeF+c3Mwvxep+F7ZyXvobBZ/+tmA5bHFTbrf77sGvb31Qqn
7tciMQ0/Ngf54Bzk2+fU8P3QOSf5ipb0b00ss2pGPvr5ZqEGPfmOWAw2kX9o
YnxNc2k4357LRf1iuclvzs36/c6Nz8upeZCPCMtDvntexueel/nXzEf+KLHM
lZ/8ivzU/6xw6nlHjCqg/buvClB8oMJ/7xN8FN+mIP07FdSwP5QrhHrJ3YXo
36Iw/c8tTD6aWPYvQt6rCPUbFiV/uij5QsXYvw3F6P9HGn5SceQjnxenfpcS
5N0UNjv/VStJ/YMlaW9ZivktJRbxafhhpVlf/9LMr0UZzt+FMuRLlWV+O8pq
uP9IX479n1UO/ZYR5ei/T3nG50ks6lVgfU5UIJ+/Iuol11SkflJF1m9cJdqH
VKJ+h8rkXYhlpSrUt6lC/9mqsn+LqtI+llhYVSPvXY32zapT37467YvXYH+2
1GD//tSg/rSajP8VsexRi/a3atF/rdp8vhyrbdj7Kj53Ha7vlcTySx3GP7ou
/T+uS/9t67F/l4lF+frMb0998pkbUH9eA/qPIZYDGtL+fkPyjRqxP2cakS/c
mPXdmIr1+7/kxoa+fr8+uYlmft8uXzQxnpc637Wpoa/fv19X2Oz+tXozYHmo
mdEf/f5f+w/+5DKF9evJra8V/5FYDm+umb8vEAEK/w1H51u2ABYXW+DzsnRL
7d99uW6/U+G/1+U6n6EV9WcTyzdp+L6tyd9pDT1Rvw31T7ZhfAXasv5ricU3
hfVy5dX58e3IP1U49T5Xdmyvmb8PEdfaU79yBw3vJ/Z3IJ+9I/TEYoXN7s/j
Omp4PzGkE+ZB+nRiff7rbPQ/RvEOCv89r0QqvkQX1mdrF86f6GrMl34/Mb0r
9msR3pXrt2c3rHdxm1jW7o79QNh25/rL04PrY1UPDefXrwqbff8Y05PPnyc9
8XnRrhf5K71oX6E39fcSiyx9yM8nFm/78Pk6sC/X/wNi2bgf+bP9qF+kP58/
m/pT/yexmDKA9XtJLLoN5PPxxkDyNQYxvsODyJsGa7gfk4O5f38azPkYYaXh
/uqRFeotWw1h/peG8PlYZij97xrK+DIOY/3nDCMfSSz6DWf+d4dTv8EI+j81
gnzBkbRfRyy+j2T9J4yi/TNi2Wk0edfR1K8yhv0/MIb2OcbSfgmxfD+W9kPH
cX58x5FvPp78eYXN3r+VnMD1vW0C12+6ifQ/YyLr/3oi+99rEvvnMYn2dSYz
v+OTuT7yTuH6XT2F/U+YwvUxdirrGzSV9u2nUf/qNMZfcTr1901nfFlnML8F
M5jfuxnMb9BM+n84k/pNZtH/uVnsT9HZ9L95Nu1/zab/qXPIh87R8P2w+1ys
V3lzLvtbcx75I/MYX675zH/5fMb3eT79j1zA+AIXkG+9UMP50YlYll1k9FPf
f3YvMvYz9T5ZZlps7GfqfbeYuxj7lYxazPz6L+Hz7d4S8g2Xcv+yW4r1IAot
w+fl+mXkfyxDveVEyfyfS85n5+Vcn27EsuoK1vfgCvI5V5JfupL6H9Lww1Zx
/v1Wsb8tVpN3XM3nX6k1nO/ta2iffi3jm7mW9hHEsvc65u+5jvNRdz3rd2K9
hvunfBtov2YD5ydxA58P4zYy/uCN5Dtson/nTYy/0mauD+vN7H+2LZhHuXAL
5k3EbmH+g7dS33sr/Tfdxv7ZE8ti28lv2c76/07DT9tB/bAdrG+Pney/+07a
19rF59PRXax/7t3UX7Gb+l+I5ag9zP/xHubXZi+fn5f3Ur/cPvJ79tHewprx
zSOW0da0H2DD+Lxs+HxqtF/D+7vT+9n/wgf4fNhwgPknH2D8kw6yvi8O0n+X
Q4zv+iHaVztM/hCxtDxC/WXEMv4I7Ycf5Xz7K/z3fKB/v2l5zLDXv79cUDj1
+5IobUt+hy35DMc1/H5o1nF8Xrw5buSnf//pc0LD96M7J/h8rXeS9T15kv3N
f4r5rT3F+U06peH8M96OfIgd+9vxNPvvQiwqn2H/bc5w/rKfZX8XncXzTMQp
bPb7MqtzqJfwIZbN7Ll/Odgb+k8VX9xBM78vEFsdUE/5h1hMP0/+FbHo6Yh+
yluO7F/tC+SPEYs8F9nflcTi60XmP/oS9Z9c0nB/0dZJw/3IFWJZ/jL9772s
4feLma9Qf77Cqd+XZYzCZvcrA68a9dX17ys8Vv+LUnxjZ8P/W8WfcTb0db6I
i4b7i40u0BM/XTTz+xo5+Rr9v7yG9Si7urK/N1w13M9Ud4OeOKyw2e9Dtesa
7k/kdfr/mIYfcUMzv8+RATfIt7oJLC/eRL6ijDvj2+lO+4y3qD+bWESm4fve
Jn/3NvXre9D/KYX//h5R728BT8yDWOfJ59c3T87/hDvknxKLTnfJXyMWVe6R
33+P6zuHF9f3Yi/6f+/F9TXkPufb9z7r/98DrBdx/gHtSzxMwTp00H+/uu2h
hvO18Ob6nEEsw72p38tH+/f7Tr3+t324f9TxxbxKW1/Od14/8qv8uD4S/Az/
+nyO8ef8BPlzPtoFYD2LqwGcjwqPaL+PWGYJ5HwtCGT+b1N5/ffBgx5T/8Fj
zl+TJ1z/ZxU2u38tGsTn06Yg9vdXkFEv9XtROSVYw/kyNJj7T7cQ7v83iWWN
pxrebx55quF8anrG/XU5sfz0jPvbyOfYz+Sj54ae/v649Qvsx/ISsSj7kvwu
YpEplPwcYhEVSv/9wuj/Xhjjb/CK+6/dK+oXDKf+emL5PVzD95+JrzWcn569
Zn86R7A/rhEazhdV39D+wBsN58+ckfAnl0Qy/g+RjG9oFPvnF8X6NI9m/xyj
WZ+SMdTfHkM+3VvqzySWr99y/nq/4/x5vGP96sYy/uOx5PPFMf/VcYwvMQ0/
9j3jC37P/Nt/YH+dP6AesmI8eet4ro+sH9FPsZBYvvvI/g/+xPgeEoumn5n/
uc/ki31h/TZ/YX6/v9B+6lfyYV+Zf/cE1s89gfHVTKT90UTq50oivyKJ+p+T
WL9R3zgfgd+YX5vv9O9ELMr9oP7uH9S3SKb+XGIRncz4+/8k7/WTfMNfWI/i
9C+sV1noN/u74Teep/LHb67fSX80fH95/ofz00WYcD/lprCZ/2rpTLjfOKiw
2f2eZXoTzu9LFTbbf+MVNnu/NCyDCecff4XNzictMpqw/19Q2Ox8XiqTCeeX
HZmgJ9NbmJDfLAuT+f/vICMUNtsf+2Q2/dvv1HlZemZGPKJeFtO/80q04k9k
MeKJVXz+rEY9dH5NViM+ff9PymrC+WFcNpP5eVCEKGy2/3fIbsL7Q5fszK9S
DtbPRmGz80+2nCacXxYpbPZ+NjYn+2NlCSy9LVmfZpop9ftNhcD+E1Lxp+b/
A0MVCag=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQreopVCkg8MbR42GVyDr3j/YMDA19IP4OudbXgTve
AfkM/0F8sPTDRyD5fEEgnwEMHoDkH6DyGwKEgPwgsAFg+YMgPkh3lcg9kLyh
MNx8EJ9hkTCK+gYhEVT5ZlR+w2cRVPtTRFHNvwLif9OI6T/0FSzvKoaqf6sY
qn41cVT5aeIo5jGwS6DKl0ug+u8FiA+0DGgjOHwiJIF8YzB4DJI/icpvsJQC
8kGmybWC5VdJoeqXkgbyC225ri8uuAuS75ZGtf83iH/2DAjcAcnnyKCob7gj
g+o/X1nU8Nkri6pfTw7V/HlyqP7nl0eVrwfxY8AOvg+S/yCPan+CApAvD/bg
VZD8RRB/SQFIwQWQvKMikK8JNuAMSH4TiF8NtvAISF5JCR5eh+31JJ0qlJDS
JwBlAvyj
       "]], 
      LineBox[{{3.7665567710526314`*^9, 1.08}, {3.7665576*^9, 0.38}, {
       3.7665585*^9, 0.1}, {3.7665594*^9, 0.17}, {3.7665603*^9, 0.11}, {
       3.7665612*^9, 0.13}, {3.7665621*^9, 0.13}, {3.766563*^9, 0.33}, {
       3.7665639*^9, 0.38}, {3.7665648*^9, 0.31}, {3.7665657*^9, 0.36}, {
       3.7665666*^9, 0.3}, {3.7665675*^9, 0.3}, {3.7665684*^9, 0.33}, {
       3.7665693*^9, 0.3}, {3.7665702*^9, 0.97}, {3.76657032375*^9, 1.08}}], 
      LineBox[{{3.7665941934065933`*^9, 1.08}, {3.7665945*^9, 0.77}, {
       3.7665954*^9, 0.2}, {3.7665963*^9, 0.21}, {3.7665972*^9, 0.21}, {
       3.7665981*^9, 0.88}, {3.7665983117647057`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQSOFgJvHD0eVomsc/9oD+T3IPgPgfyGPyC+fOvr
wB1yV0HyuZZAvmZM/6GvGmdA8ndB/B1yIAXnQPJ+VnD1b0Hy+0B8ruuLC2y5
joPk9a2B/MNfNYAmHAXJz0flMwjYoMo3gPhLgLqvL74Akv9og2JeQ6ItqvmX
bFH1O9mhym8G8YPADj4Bkle2B/JnzQSBkyD5Kfao5rM4oKhnKHVANf8piA8K
jZj+VyD5MEd4eOwDyR8D8atBoVm1BSRv7oTCb1gO4r8JBOnYCJKXcIbbvx0k
3+EMd99OkPxPZ7j6gyD5TBdU+VsuqOZ7uaKavxuV36Dthqp/jhuqfh53VP21
IL4t2IEg/za8RZOP80DVf84D1Xx7T1T713uiho+CF6r8BC9UeUZvIB+SdEHp
oaHQG9X8R96o8RfkA+SfPQMCd0Dyh0H8QrAH7oLkjX3h8XUPJL8ExAcn75j7
IHkRP7h9D+wfhj8u9UPKLwAPGEdo
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQnXe7bLKfwBtHj4dVIuvcP9ozMDR8BfGBHKDIPSCf
Ic0fyN8h1/o6cAeI33ANxH8TCBJ5CJJ3DwDyjcHgMUh+O4jff+irRkz/I5C8
RiCQDzZu3XWQ/AwQPwhs4AmQPGcQkL+kwJbr+uIDIPlKEL8a7IAtIPlXIP6s
mSCwEyQfFQzkAxUDdWwHyZ8ORlHfYB2CKr8mBFW/TCjcP/tA8r2hKOob/oai
2p8Xhmr+vTC4+1+A5P3DUfXvR+UzGESg6l8QAQ+/jSB5wUhU+UYQXzMGFIJ7
QPKfIlHioyEpCsgvBAVXwV2Q/GUQH8y1BYV3g3M0avhviYb79xlIXiUGyD97
BgSegOSnxqCob2CNRdVfhspveBaLqj88Dh6+oPTQcDwOnp4e2vPJ7JCKR0pf
AKUO/KA=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/emxe2i8wBtHj4dVIuvcP9ozMDSsQPAfAvkMkglA
fkz/oa8aMc9B8p0g/jcNkMgLkPwvEP9N4A651tcvQfJZiUB+62uQwGOQ/O1E
uDzIvAbvJCAfbFz/I5D8niRUeZ1kFD7DXFR+A28KkH99cYEt13Ww+XUg/qyZ
IACWf5eC6v74VFT586h8Boc0VPkNqHwGxXQgH2gW0ECw/yeC+NUg06s+gOSZ
MoB8kOsCd9wDyReB+IVA1y0uuAuSf4wmH5wJD8/7IPkjmSjqG0yygHyw8SIg
9QxLs1DlRbNR5duyUc3/lo1qf3oOivqG6zmo8h65QP7ZMyBwByS/A8TXBDsQ
xGfQzEOS//n2Uk8eUnoBANCC9ys=
       "]], LineBox[CompressedData["
1:eJxdlWlI1EEYh4eKBIMKkz4UCRVFBQYVBUUSRlFBQUpBkR86IShyPfLY9Zhd
W+9cddPVVddjRShowehQKPHI0tBISozQ1A6SXMgo60NRzW8+DP0cWJZnn5l3
3n3/885/9dn42AvzhBAZ6oPvkLDIlitLg9EHJ63hgQNf96ifQuMVDw5gjCqW
VvDGOFf37AawmGaWpyzsB8A63OQb+N0JxOJ2Aq9flagY1hr+Fr4EnBAVOuK3
jMH/SeT48UmKNcaNw48nmfwn4Y8mm/kD8J1gFUxFfA+/5apivdz1Dr4RHNsW
4ZyO6YMPS1EcjMEPXfCOFBPvIfw3sJ7e1gF/LpX9K7C3GqMdfl+amR+Av5dm
4rfCr0tXbNMFuAtfmc5+oZXXp1rZf5rjT9jY99k4/s4M9jczeP2KTPaFmex/
gUN1QR/AX8pS3Izy+jvhR7PM8/4Mfzib93+UTfFkpOT6+STNl4vtvH+2nfP7
MsefdrB/4eD9o3P4+bWCe3Acunvh11wjluXMYr6T8pVJTtpPfGCWx3I5v95c
9tvzOL+WPM5veb45nzPwefnmfPXD/8zn/C4WmPhD8K8LuP8OFSrW7RYYgW8H
63aL0n5Tkdn/Oby3yDzvp/CLiomlrZj7JzjHx11nP8gso0rYB5hlhMvk/wze
xSz/usx9petjKeX+nyjl9TFlXJ+uMnM/vITfWs6+qdzcL2CxzG2e12P4HDfd
F+K7m/c/f4Pmi2HwNj164PdXcP/cr+D46yvZeyq5PiEes18QPs3D99eUh/YT
J6vY91dx/F3VnN+tavYrvcSyyMv/77eX11+u4fqM1ZjzOgx/pJbXd9Ry/22u
Uyz0mIKvr+P1S3zUL0L6eP8ZH5+vM/V8Pofq2e9t4P6608DnY22jyWcC3t1o
5uv3z4ImYpncxO+nj+AfSH9Wrz/uJxZP/Ka+2u9oNvXT8ezN/72v/wG/pDJm

       "]], LineBox[CompressedData["
1:eJxdlV1Ik1EYx09BUFJgYNSFaYGQUVBg0EWZRJB9QKFBF2VdCAYFlQZBWcEp
GhQUVnSR1UWhmTXbR5tu6nJzs023OfNz9qXNvsg08EKpi6LzPxcH/74wxm+/
PR/veZ9z3tWlp4vL5gshzqkPviMVmbHa9Intu1KVGbbCqQIh5PInimdyS6qC
058Ui2vgYm+W5WcRWP5mFsfrFOPfuSWj8G/r2O95yr4FLPSl/bp6zv8A3B3H
9QF+8TNieRFckZ+WrCn/CD/JLI88N/k64RNgjd4R+G1WxWt1Q3F4u9V4G3x2
g+KJIvzihL8FzobOmoQXLxRfUKuVqnTDV4BRPT/NA5+a44ttxDJo4/x5dq5f
Y2ef4TDcDn/VYf6fgJ920P3IMqfi+9W4uuCHnMb74He+5PweZrnGxf6ei/tf
6Db5m+HPuzn+h5vuRxxqVJynr374aKNZz6/wW5o43trE65fpoXryhof7+8ss
T3q5/oiX+9/XzN7fzH5DC9/foxbOn97K9S+3cvwUsyj1cf99PvY7XvH8uMB6
u1SNwee0Ka4tx4Dr/XG3jftb4Of4s8zim5/n62CA+48ETD8d8JvbTXwEvr6d
5kmuCHL960Fenz/M4kSI/bsQ97e3g30rs1j/mvt/CNbhScyTWBI2+x/zJC+F
ub9fYX4+RyNcvyfC9Qs6eT4cnSZ+AH5Vl2I9vpb38Le7zP7S59O8KLE4E+Xz
ayzK59eBGJ9foRjHb4qzr43z+bism+tbwLrdDJx3Yqbb9D8BfyyhWKfLH4dP
Jjh/YQ/35+2hfDL3DZ3noppZLurl+pW99D6R473m+X2GP9xnzgewjPWZ55eC
39rP9RuYxcoB7v/mgMkXgv83x58a5PjRQX4/7B+ieRKBIXN/3+E3Js16f4F/
nOT+lw4r1q/TlN6/V4Zn+Ts5u4PDs963/wEpYjCh
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQvWypqtJNgTeOHg+rRNa5f7QHCiWD+GDuw0dAfsNl
EL//0FeNmH4Qn8HlFlz9Q5D8FhA/BqzgPkhe9TaQv0Ou9XXgjnsg+akgPkhx
lQiIz8B2B8g3BoPHIPkyEP/64gJbrusgPsPzO6j2h99F4TOcuIuq3+IeCp9h
JYgPsl2uFSwveR/IrwY74AlIvgvEfwOSfg12/y8QnwEMHoDksx+g8BtuP0BR
z+DzEMgHOhboYrD79jxEldd9hBo+c0H8WTNBACzP9xjI/6YBCrEH9nJy/zIe
I4U/AMEZqBk=
       "]], LineBox[CompressedData["
1:eJxdlF9IU1Ecx4+butiLLSKhh8F6CPcipCT0MNSHyJegiUIPAyWyXgKLgkAf
OhDWg6CgFOVDD616EBQKAoMK/4sxo8AyzMjh1Ll7ddM5N5u6zvcOjn07cLl8
+Px+5/5+9/zu9VxprW+xCSEa1YW7Wo+Wjpq1deG244MXNqsVx8Gmf8jdYYQV
y6aI4ls+51zw5i/4L2BvoHs0VbYAX7NMLF6DZ0JYlvescH7PCufbVjn/NrNc
+s83RGk/OR5lf3aN818yixMx9g9iXF86xvVfNzj/h8HPrzMVW+iLwb8zdb4J
711XbKUHfsP3rfP+zg3ev51ZGhsULwJxzg/FOd+XUNxh4AB/wg8k2Ls32XeB
63Hc/kX4HNhqxzkH37ql52EEfhFshQ99hL+U1Pu/hx9JUrw8s6240lpj8M/B
L7B7cBj+WIpY3Adb4xieh0+m9HyuwV/d0e9/Bn6WWZxP63pC8G/TXP/pDNUr
H2eoH+HY5frv7nJ/UWZ5+Q/nTzPLc1nurz+r+/sEf3JPcd9TrGn4TnA7dNs4
fHaP82/s8/tb2Kd4cfGA/YcDrr88p893Cv5ZjusvES7q/x74H59gls0F7L8y
y1qb4jE1/d2jE/BvwIfzIE/ZXdRfr52fby+keHEHnO93Fj4Czn9/mBfRWMR+
AnzNWt/hq4p1Pd/gXxXr+Ah8qcNF3+9Dh+7nM3wGnJ+35eqKySfeI67D/+df
lIRJBA==
       "]], LineBox[CompressedData["
1:eJxdmXd4TlccgA+ltbnEHjGCIGbMEJEYETuJLVZIbBJbrGPEJjYhCIlNrNau
vStmjVoVe4TSotXS9vtdjyOv7x/Pm/f7jTPu/e49igQPCAhJrZSKTKWU/Lvs
ts+HdFayd8OkCKcE39deSmm/9A6+FhfmmeHafQervcIZPv1BfOkMDi4VFHXk
rest8UuFk/13F4p8niQ+Y0YHv3OVL1wXP0o4QLS/sE7OaOpdFN8xE1gnCttf
331OfO3MDlb254L4BGGpHhR1SbxzFgeHe0qHieKjsuD7SmWlDyOrpKxmPPvF
+2cDqyPZTD8HxFeyHOwsWOiF+DjhJdHy2SM+R3awmkjWb7Izf0gO1r+Sw8z3
LvENnOh3OjF/yZz0i8gqXS7WH05WT3Ohnm6XG+NVZ4TjZfXjDon3yEO/kazz
52X9GWT9QTjU/rwU3y8f+7udj/HN8jP/gfzGnxVfvoDZX6fErxAe6dhNSRHH
xGcraOpdFa8Lmnx3xL8m666FTL674i+RtY+z6Vf2u9rhjOtFFyvsYHs7J90T
P1/Ybjfosfg0RRxsbz9P2w8Rttt1sus/LGLib4hvXdRcT3b9E0VNvO2rFTPr
Y18fa4vx+svjYvp/In6Ki1nvk+Lfu5jxnBbfq7ipf0b8jeKYb92oBL6v9pF1
mZJYDxVTEvl0Jleu32hXxr8gq06luL7nSvH68CrN/bGlNH3hMtzfs8kqlRt9
uBv33z037s+AsvRHydq9HH08WTuVp48sz/pvySq0Av1VsvKtyPy7KvL6dq3E
+MVkld6dfoQ7+3smnHhWPsni21dm/E+VOT81q/D+sImsC1Sln1mV8R+rMn//
avR3yKp5dfqD1bn/KtTg/oslK8uD97dxHhz/7x7sP7gm+7tM1nVrsb/va3F9
XDyZfwFZp61NP5SsH9Xm/bONF8d/0ov9Va9Dv64OfV5v5p/qzf7/9ub4evvQ
3/Shb1yX/e+vy/pu9Vh/GVlnrs/8Y+qzv5f1sV6qcwP682RVx5f5t/qa+/Vz
8UUaMn5OQ/aX2s/B7vbnqPiBfrw/3ffj/gpsxPvrsUYcf+XGzL+arHM2oZ/U
hP29a8L56dGU8dfIqmEz1t/djPNTqjn3f3Rz+gwtWD+iBes/b8H6Hfx5fZ/1
p68VwP42k3XBQPpZgaz/byDrD2jJ+F/JqkUr+kOtOL6KrTk/K1szPnsbxo9v
w/p/tGF/3dpyf/7clr5eO8b/0I73l+Ltub8WtrdSPg/rbzuY6/+R+GEd8Huv
H3dg/22D2P+pII6/RkeOf31HxufrxPhpZPVPJ46vT2eO/1Zn+iZdWP9Hsi7b
lftneVf2lyWY9ccG0//2le/Sjf5CN+b37s7xbSOroiH0c0O4ft+Esv9BoYx/
EMrfz5Y96I/3YH9VenL+1vRk/ly9OH+TyfrPXuyvZ29e39d78/fPr4+F96M9
ZFW6r5XyeVov6cv+M/bj/Iwkq+R+3N9B/ekTydpzAH2C8FF53TtyXHyhMK5f
FFn/F2b6t9/PwsI5v3fDmd9/IP3hgZzfSoPY3yqyyjGYfgJZvRnM9ek+hOtz
ZQjj6w9l/E6yLjGM/S0axv6/G04/nKyffOXbjaA/PYL9eUSw/gayyj+S9ad/
Yfv+9WEk91ffUdx/t0cxf9PRzH+ArMuNYf8rxrB+1rGM12PpX41lfFfN6+Oi
pvcZx/jt45i/2Hj2N28849NMYPzgCVbK9zn1cIKZn9viW01k/hMTGV810vp8
3nJY/NpI1s89ifFTyPqvSVzfXpN5/fwymf03msL9sZesykxlf0un0meaxvqj
yOrFV77jdPZ3TjjF81ftGdxfW8jaeabJZz9/zZ5p+rHfX9UsC+dD4bMYnzSL
97+AKOTTR6Lo3Wczf5xwivcPpzmMn0hWb7/yIXMdbB8HJMh5m7oq/Om865n4
BvMYv2se748l54PV4vnoR6dbwPgRZP10AePbL2T+Mws5vpqLmH/jIq5PgcX0
M8jq42LOX79o1r8Tzf6aLbFSnneog0vM/rgsvvxSrm8sWWeLYf5xMfSvY9CP
Cl7G+9elZbx/1V0O1juWc35dVlg435y/gvFpYy083w2JZf1HsRivbr0S31cn
ybraKuvz+43Mh1q3yvx+vxKfJ47xU+PY3/s49t87nutzI97cf+zz28arOX/7
VnN93dZYKc9rdcwaji/zWs7v6LX4vnop/On5Sc6bdad1Fs7Pzq8z+80+f/Za
b8b7QPzW9Sb/Q/GFN5j1F1ZzNlg4v0u10Up5nq0GkvW9jaYfO3/gJjNf9vne
0U3MX3mz9fm82K4fv9nM91PxORPoIxPY/7sEs17yvK9Dt4DVNeFP54e2993q
YDtdpH1+v3sr8mnXbRivit5m1sP26bczPmI75/fZduvL+ffNnYnldlhf/v/g
f6m0gNs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQHefnWLJZ8I2jx8MqkXXuH+0ZGBpOg/hpYPAMyGew
2YLCb1gD4oOVP3wFkpfdCuQzgMEHkHwviM91fXGBLdd7kPw/EP+bRkz/oa8v
QPJ524D8HXKtrwN3gM2/D+KfPQMCT0Dy/tuB/EJbkAlPQfIHtqPKG+xA4TMs
BPE1QcZrgOUFdwL5xmDwGCTftBPuvgcg+U874e5/BJJP3gXkg7XH3AfJXwbx
3wSCXPgQJO+yG+5+sP4tu1HUM6juAfLBzrUFmdcwFcQPAnsQpJ6BbS+Qv6QA
pAKsv2wvPLwf2qcodp/bixT+AF/Lq4U=
       "]], LineBox[CompressedData["
1:eJxdmGl0TkcYgEfssV8hlkgkiARBJEgXRXtauqOLLlqtU3S3dKfV6WnpoqV7
S6sbukur1aJVIglZJCKLLLLJRvgSe4Iget/JOeN7fH+cx3PfmXfembl3JsEz
5kyZ6aOU6tFMKfl39dLYllu71IyfWLbAL3bC8bFK6anCCXVh05bHV7mskoWV
+e0XH7PN5ZUr5Fcm/ifhNXPH+OatNr5nnMv1El4nrN4h64Y4PK+e2M74QmEX
3P85KP6WeMZvibf5mv4jEmx+1eJXCS/2TN4UuLhCfMdEjEcvEo4yP+OPJtr2
88VP32Gf3yt+j/BC6W1BjvhxO12eZX654tcLu8FuQJb44CSXx5gBHBb/obAJ
9ysR75Ns+88W/wxZVySjP3Vnih1vpvjEFPqRqS5PMwmUil+bavsvF999l8tT
3Gp4JpvxLdll671H/Gmynp1Gn5/G8U1Md9lMT57Jf3O6rb+JD99t67dD/Mrd
tv9k8b4ZdrwJ4hdm4HntybDrK0X8tD0u18h0eraLTyOrMZm2Honi12Xa/OPE
B2bZ9ZQkflkW/cUsxs/JZn77s21+teIn5dBvz0F7OnIv8/tO2Ax/01bxTi79
67mMPykcbiZ0i/hH8uhz8mx9Nou/Pp/+r3z0p0IL2P+nBWy/9T7Gv7CPvvoy
f08h5yel0D6fJv6KIq6fn4vwvO5VjHqrpcXoT58r5vw8WWLXm0d8UQn9raW2
vQ3i/yu19V0vfuh+sP6KrDqVMf5VsjpWxviHyukzy+nHV9D/UWHX30bxIZXs
/6NK+uZVnN9nq5hf5WX+rgPsfwdZjTpI//1Bvn/8q12eZ14Y5v34ZjXzP1PN
+EcPsf0Csr7xMOP/IetBHsZ/4aFvV0P/cg32m66p4fp7oJbvl/Raro9rjrC+
sUeYX9BR+uVH2b86xvHNFW76/Jj3e9llfvJxth9P1iNOsP3VZN31JP0bZH3q
JPJVM0/R7yWrG+ro/yargfXcf5/Vs/02p1mfF08z/hBZ33uG408l6yvPMv4X
su7dQP8uWZ9vYH5PnaMvJqvbzmO/6K3n6Ydd4Pfn6wtYT6pzo53vVPG6kevr
eCPbf/gi92fWReZ3rXLQ/59k3a8Z/cfCXvVr4QNWz/kwvoqs7m5Ov1O46Xtu
zgejW7hsjiexeeJ/aMH4Hi3Z/1vCXvU/S9aPtXLw/djXiv3f1Jrx/wp77e/B
bcDqS2Gv71f7tmz/FbKubcv4B30dfL92+6I9NbYd439rR9+3PfN7vz3zb9aB
458n7DX/5R2Y/5SODtZXQkcH55OoTvRrOtn8asT7deb8Lybrus6cv1ldWP9c
sprg0G90OL6wrjb/WPGfd2X/bf04/pf86A/7oR76vm7sfxdZX9Wd8b92pw/w
p3/Pn/6CP/N/uof15vxcIux1fr+9p4P9vU04PU1+leKH93K8z9P6m16cny69
wfq13mhPnRC+dJ/QMwIcnI+zAzj/1/UBqw192H7/QAffv08C0Z5uGcT454Mw
Xn0gyI6vSPzUvi4HmQuTyS9JuOk8kC4+Jhj96R+D2X7PEOb/dgjzawix9Tfn
98f7cf4L+3F/3Nyf+29Lf+6/IQPoVw3g/u4QyvfDolD2fyTU5lcgfvpAW19z
v8wQvnSfUuPCHO/7rv49jO/P4HAH56cPwh3cL30G4Xk9f5DNX+6DqkK46f5k
+r9jsIP7ceJg5hc9xI7H3H/XCnvd37tFODifLIlg+/URWM9q9lBbL1nvOo+s
Jg7j+DcNs+2b+PDh3B8rhjPeN9LWU+7zekGkHf8B8Z5IB/fz+0ewvmkj7H43
+V0dZder+fvEuij6PtHcv8ui6RujGT9nJPLRpSPpJ43CeHWcsNffNyJHc36+
HY16KyfGaz7nByRNj/Gar/8BAMgaeg==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3f9GcpmF0BtHj4dVIuvcP9oDhT4j+A+B/IZkSyA/
pv/QV42Y+yD5KyD+Nw2QyAOQvIsVkM8ABiA+w1ZUfoOqNZAftEOu9XUgWH4a
Kr+BzQbIB1lWJXIPJF8O4hfacl1fXHAWJP8cxAcr33EOJB9hC+Qf/gpywFGQ
/AkQ/00gSMVBkLylHQq/YSWIDzLNlus4SF7KHlW+yx7unhMg+d8gvjEYHAbJ
ZzvA7d8Hkr/jgCrv4wjkz5oJAidB8ntBfJBqudbbIHldJ1T/zQPx08Dgmv3E
8794nJHCHwDqt5l+
       "]], LineBox[CompressedData["
1:eJxdlF1I01EYhw8VBBoIJXURTCqIPqALo4hghZXptiw3Z7n8a5tuuq/cRl2E
Bh2IKOhiUReRXQQZBV0s6iIsQnJmZTjRSlbR16ggaJZBURdBnd+5OPnzgMiz
53/Oed9z3vcsa0t4QnOEEFH1h/+Vm96VbV9YrKotdJdnar5vVT8d+88TiuU3
cL4vaS/JP4P37yCW4+B09ucqK/0Uvqpa8Xo9huBvMovlOxWX6AUewZ8Fe/pt
J764H8PPrVHco3YvdD+AP8QsPs7y3lpefxg8hHCyw/AbHIqvINy++/BXHTx/
sVNx0Y0ABuFPOul7+ctJ8Yqwi/N74eL1HbsU63T6B+DvMIs1dZSv7GUWpbs5
vh5mUZzlrT2cf45Z2uvpPESmnvKVNrfiCoRnm4JPu00+4/B/3Rxf0sP7v/fw
+bkb+PwHG0z+Y/CVXjP/Ofxlr9l/En5RoznvPPxxsP68/C38D3BuFOM1fHCv
Yrue8Ap+Eqw/z+j51ftoPXGbWa5s4v3PN5nz0/U932fq/QP8EZ/JtwD/2Wfy
1fN9+6kf5Aiz2NzM/XO9mftvqcX+tMX398fi+om3KE7pA8jBvwELPfT91bUS
i4FWnr/ugOLVFiIchb8E1uEUnsCX+fn+pZ/7dxrcewFjBD4QYD8RYL+tjfe/
xSxWtLM/1871PS/I/nCQ++NTkOu/MWTq5yv8wxD7jR18vtc6uL6XdPL+pzrZ
/2YWkTD7l2Ge74zw+3A3wv2zNsrxXYzy+gti/D4djfH7MhXj/m6Jm/u9Bz8W
p36UWw7Sey9uMMuKLnPe0/Bnuri/RYL3TyXYFxIcvydJ9SCzyRn16XKV2lIz
+uEfoReH9g==
       "]], 
      LineBox[{{3.7677665636363635`*^9, 1.08}, {3.7677672*^9, 0.38}, {
       3.7677681*^9, 0.39}, {3.767769*^9, 0.25}, {3.7677699*^9, 0.18}, {
       3.7677708*^9, 0.17}, {3.767771460483871*^9, 1.08}}], 
      LineBox[{{3.767773035483871*^9, 1.08}, {3.7677735*^9, 0.44}, {
       3.7677744*^9, 0.27}, {3.7677753*^9, 0.21}, {3.7677762*^9, 0.15}, {
       3.7677771*^9, 0.2}, {3.7677777545454545`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQHRkctqFc6I2jx8MqkXXuH+0ZGBpOgfgx/Ye+asS8
B/IZrCuA/MNAXv+hqyD51RVw9RdB8jKVQP6bwB1yra9B/IYeEF8TbMAZkPxf
EB8kG7jjHEg+twpV/z0Qf0mBLdf1xRdA8n7VQD6IV2B7CyS/H8Q/ewYEnoDk
9WuA/EKwgqcg+QU1qPICtUD+N5Bzvz4AyTeC+EFgB4D4DR9r4fY/BMkn1aHw
Gy6B+GDv9z8CyTvXw90D4jdsRuUzqDQA+cZg8BgkPwXEZwCDFyB51kZ4+IHc
21DaiOJehmcgPsg0rutg/WFN8PADyx9H5TeYNwP51SDXVoHlVyDzl5vvfd+M
FJ8A/wvJ9g==
       "]], LineBox[CompressedData["
1:eJxVlF9Ik1EYh09dCAYFihJdaHkhTCgQ8qKLxKJIIUFUxIuioMgLg/540cWk
OERfzbX5uanTzTmdm7YgpKCLRV2EKzLTWlkoiuTECsqKBIWCovM7wsHfgTGe
7/nOe877vud8RWcu1p3bKoRoUD/8H9tZcORG7srhqowzb7TyV4V61Aa+XL5t
Jnbpk2L5Gzw1ibEM32wRyznLvL8Af/ymYpB6BP8YvF+Pafi9txSv1CYLrW9v
4cPgOmDtOPx2l2KhRxr+qsvEn4L/4eL5p9rYvwHrdDIT8BVuxaEgxkv4+25a
T+65zev7wKk1x0l77Dn8Fo/J5wV8i4fiySUPz6/3cvyUl+eXtXP8eDvPz7eN
/w5v2ezXbbP+I/imDsWtSNf5DH6mg/dX6aN6iKSP6iUdfo4f9PP87E7F9hg2
9A7e2cn9+QqOo9sxsDjRxf5VF/uD3eY8pODvMYuCANfPG2D/L0D1lBd6qJ7i
Yw/Pr+k15xvnRTzt5fqWBvn8RIOcf06I+3c9xH4VvI5wa4vwZ/uMz8BPg9Gd
vFHcB3E0zPfjYZjvR3E/sewGb7yufVZE8W6VXbLwA/yViMkHLL5EuD6NA3w+
xgfYHxjk/O8Ocv92RRWXID3HJLw7yvfrD1iXO/ka/vwQ+/kh3n91jM/fkxit
J/bFzfw5+P44398dwxRPXgPrcljz8D+Hub6nR0z+7+HTI/S9kofuKG7S4zP8
A7DW5UvwRQlznnR//QnT71nF6b+JTd/P/6H2IJE=
       "]], LineBox[CompressedData["
1:eJxVlE1IlFEUhg8JBbMRRBJaGLoQ3QQRBRIiLkI3A44UtHAR0c8mGMUg0IUX
xFoIuQiCXLRQC5pydBwnx5/R+Z/5YhR1NA1cOOgiGBHDTKFF3fcKF98Lw/DM
c88599zvO1P10Nv2+IKIuPUH37cD+YufyvabWgrd5f7mX436py7w1f6iJ1y5
oVntgnu0LXSvw9/1Eaukz8YX4G9+1vyntn0wfrwD/wG8lMPahr/8RXPiGBtM
/pfgJ2Z9hz8BI3u5fxP+6Rjn3wKLWSZ/i5/2ywz4hll5+LpxzfowuuAa/NA4
1VOuCTqP9Exw/0VmaQ9w/7kA12+Y1OzaHOlocJnzj4HPEOeRyqC9ny3410Hu
/1+Q78c7Rf3IzhT1o1pD3F8sRPXU9a8cPwwehR5ZgS+btj4B3wfe1932F2Pw
R9O23yT8o7DtLwO/HmZ/Z0Yzoj3hA/gQuBPlOpbga2Y116H92hz821mqJ5fm
KJ96MUf75Sd46B2WA39/ns4jzjz7+gix+CJ8/isLHD+wwPF/meXZouY202AW
fnuR491Rjo9E2V+Lcfx7ZimNc3xvnOMPmdWDBMevJux9rsI3Jel9k8kkz0d1
iuPfpOx8HcKXpPn5PWdWe2n7vJfh72Vo3lUqY/NjXuVW1uY379/HLL2PUuHY
/WY+Xjk0T3Lq2Pv50bhS8bv127n/r/8FL/49
       "]], 
      LineBox[{{3.7679496075*^9, 1.08}, {3.7679499*^9, 0.82}, {3.7679508*^9, 
       0.27}, {3.7679517*^9, 0.27}, {3.7679526*^9, 0.64}, {
       3.7679530212765956`*^9, 1.08}}], 
      LineBox[{{3.767954765934066*^9, 1.08}, {3.7679553*^9, 0.54}, {
       3.7679562*^9, 0.32}, {3.7679570883116884`*^9, 1.08}}], 
      LineBox[{{3.7679571132352943`*^9, 1.08}, {3.767958*^9, 0.41}, {
       3.76795875375*^9, 1.08}}], 
      LineBox[{{3.767960773972603*^9, 1.08}, {3.7679616*^9, 0.41}, {
       3.7679625*^9, 0.37}, {3.7679634*^9, 0.33}, {3.7679643*^9, 0.28}, {
       3.7679652*^9, 0.65}, {3.7679661*^9, 0.74}, {3.767967*^9, 0.39}, {
       3.7679679*^9, 0.46}, {3.7679688*^9, 0.32}, {3.7679697*^9, 0.37}, {
       3.7679706*^9, 0.44}, {3.767971064516129*^9, 1.08}}], 
      LineBox[{{3.7679735076923075`*^9, 1.08}, {3.7679742*^9, 0.88}, {
       3.7679751*^9, 0.35}, {3.767976*^9, 0.31}, {3.7679769*^9, 0.3}, {
       3.7679778*^9, 1.07}, {3.7679778195652175`*^9, 1.08}}], 
      LineBox[CompressedData["
1:eJxdlWtIVEEYhkfTzFvqnhWKSpL6oRQUGBiV2OWHUlBoUFBSJGQkVBoUZBTT
D6WksKAgoyjQLlBZkJGR2EXLMLXSUtJcXdddzd01V931np33iMd9PSDy7DPz
zTfffGdOdPqJ1MO+Qoh89Q//4/Me5P8yOLYkm3OMJUmuRPWnGrDQng6V5YYW
lT0xaQUf3D3wj1tovFzSqnJQc1FWQlAz/GVwhvY0wU+AK90I8BP+2G+VS5IQ
AONlG/isEb/8gN/ZpnKc9jTCVzCLNSb2d02cf3i7yrFIN6YWXrbr8avgXe16
vtXwhzr0eJXwDR16vh/ht5rZvzDz/BWdKjtSyqJy7e/hr3fyfD+LysWoTtE7
+FMW9lZmsaeL8pWfujh+vJX9QyvPX2Tj+BdtvP9RG9fnaDfn1wKuq8XTD7+9
R2WMTitogH/To9f7O/yqPxz/NjgV6aZ8hg/pZX+OWTrn+AN2zr/eTuuJRAef
/zOHXh/NL3fq+/kGf9XJ/efTxz6bWXTO8al/9fdB85VgbXtl9fBx/dQPorhf
r285vNGlr++Ez3VRvaXbxeebMUD9JpsG9PUq4JMGuX6vBvn8YoZ4/ZtDHD/Q
rfKtQjyv4c+4ub97meU+D8UTXzwUT24c5vhPhjn+0hGOf2WE50+O6PsphT8+
yvUxjfL+d41xfm/H9Ppa4deO6/2n3V/3xrk/Iiaon+UFZjEA1trNXAOfPsn9
2TjJ62/7x/svZZYrp3j+jSm+P/yFQv40s7SBvfLf66N496OsBmejXFl18Ot9
ieUjsFd/L56nzORvgb8ERnWjcsFiDKxNT2iBz/RTWUvHaIJvBU9f99r7t8Nf
ofu5HOxV39XzOf8782m8DA3g/M8HUL6yL0Ch78PBBbz/r+DZ8xKbA3n/zwN5
/9FBHP8as/ANVuh+PAme/v7hPhSWYIXOf3eIQudfFaJQ/64LpfHiPtjr/Yhc
SONFHni236Vnjj8SRuvJ5jCF3s/kcGJZFs75xUZw/MIIjh9k4PxzDJSvsBt4
/f0Kr1+r6P1hh99kpHqKp0bu72WRKms6rTvxZWlpJnjme/4fgpl3lw==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQLbZpwkJR4TeOHg+rRNa5f7RnYGj4B+JXA3kPq64A
+Qz5YkC+Zkz/oa8aZ0Dy90F8ruuLC2y5joPkA8Th6o+A5A+Io8obSgD5h79q
AE24CpJfKIGinkFIEi5/FCTfBOK/Cdwh1/r6IEj+M5p8shSQX2gLsuEsSP4K
iL+kACRwASTvIg3kM4ABiM+wFcSXb30NNBFsv6oM3L8XQfLTZFDNZ5OF85+C
5Mtl4fbdBck/B/GDQM4LPAGSj5AD8mfNBIGTIPkTcqj+t5RH4TeslEdRzyCl
gGp/lwJq+PxG5TdkK6LK31FENd9HCdX8vUoo7m3QVUaVn6eMKs+nAuSDg+fh
KZB8PSq/4b0Kqv4EVVT5C6h8Bkc1VPmNqHwGJXVU+yeh8hmYNZDi1ytFKkkD
Kb0CAIICELc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcCwYpqG8BtHj4dVIuvcP9oDBZ6A+GAphhdAfkOI
JpB/+KtGTP+hpyD5oyD+2TMg8AQkb6oF5FcDdT+sAvEZloH4aWDwDCQvpg3k
B+2Qa30dCDKPoR3Elwfydsi9Bcl/10ZRz5Chg6r/hg6q/Z66QD7INpF1z0Hy
O0H8/kMgBY9A8lp6qO6bBeKDnScCNp9bH4XfUK2Pav4bVH5DjAGQ/yYQ5IGX
IPmzBnD3g+VtDYF8YzB4DJJfB+JfX1xgy3UdxG+QMwLywcpbwfL9RijhdeCy
EVL4AwD1wp6g
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQLeMjqGUs/MbR42GVyDr3j/ZAoQIQ//riAluu64+B
/IYHIH7r68Adcq0gPkOgCZCvGdN/6KvGE5D8QRC/Gqj7YRWIz2Bkiqp/kSmK
egZhMxTzGprNUPV/AfHlwQqeguRTzFH1XzVHlXe1APKBlgFtfASS3wbiz5oJ
Ag9B8mqWQP4bkHWvQXyG6SD+Nw2QgQ9A8uxWKHyGClR+wws0+UhrVPNPWqPK
W9kg8dkWBXXYIIUvAFzymHM=
       "]], LineBox[CompressedData["
1:eJxdlF1Ik1EYx09REFEUNCiotCjIKPJCqIuaa+p06ZxuualzW2666eZWKnWR
GJygICmwqIs+KVhQEFjUhVJQsKAPSUujloLRJA3JLC+MgoLO/w1e/O/AGL/9
9pznOc/7nHdj8JAztFAI0a4++B7pWj+wZ9W02ZruMPSUzJrUT2uNOqcVy9Pg
y5ewwOIP+GeOtzs59wk+lk8sxphluUkxNuswTMI/Nun7T8Hv2Ks4rC3NXwdv
RXjOZ/gVZsXTjr6sk1+1/BIM6+0eh/9h5voCBVz/ELMoKFQstKXVdx+cSrQa
l6bewm8qUnwTmHgDf75Izz8Ev8ii7weWhy16PcPwExa9/lfwrmJi8YxZ7izR
zz8DfwvchvStA/CrrYqR3dE3CH/Kyvl/WfXzv4SP7COWI8yitJTzPwT/b08/
/LYyxU4t4Qv4K8ximY3jO20c/83G9fvK2Q8yy3w773/XzvVnV3D82QquT1Ry
fBuzTFfy+Z0Orj/p4Oef56R+ywSzMOzX9/8Af4JZzIG1ce9JwYeqFD/FeCTf
wb+vonmSxS59HjFvotfF9W1xc/6LbvZLqqnf4ig4G3/PmoCfqtbr+QLvqeH7
0V/D9e2uVZynLfRD3qnl/dd5qF/yjIf+L/5m+Hgd9UN8rNP3G4O3e/n+PPHy
fOf6iMUNH/dvpZ/v53E/x88yi+ABjh9mFoX1fP4H9ew3B6heeSHAfnGQ/ZEg
z9dkhnc3sH/eQO9juauR67/dyPO5JsTz3cUsf2f4aJj9aJjvV1kT+0dNfL+2
N/P9utrM8csjPJ/HIpx/JsP7o4q1cTCOwr+O8vMztfD832uh+yI3xHh+zsX4
/bIgzr6dWY7H58135/druQfn9f8fsWHbeQ==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQvWkCa0K+8BtHj4dVIuvcP9ozMDQsAfHlW18H7pB7
CuQziBYA+UsKbLmuL/4Akm8tgKu/CJL/BuJrxvQf+qpxBiSfVogqfx2V3+Be
hCq/A8Q3BoPLIHmNYhTzGGaC+Ie/agBFjoLkOUtQ5atA/EKQ8wrOguRfgfg7
5EAeOAeSjy5FlT8N4oOtf3gKJG9TBuTPmgkCJ0Hya8pQ5WXLUfX3lqPK/wPx
GcDgAkg+rwJV/n4Fqvn+lajuP1CJor7BoArFvwwLq1D1C1ajyjdVo+r/hMpn
SK4B8oPAAXICJH8Zlc/gUotq/pZaVHnVOiD/TSBI4CBIfiqIDwoNW67jIHm2
elT9ZfXw9AIKD4bn9ajhE96Awmc4gcpvsGhE9d/KRlT3Szah+q8LxD97BgTe
gOR/NaG6L7sZVf/tZtTw92lBTb97WlD167aipr+5rajyfG2o5te1oYQHw/s2
FPUN8e1I5gEAZVBmrA==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.757968*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.757968*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7603872*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7630656*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7656576*^9, 
        FormBox[
         StyleBox["\"May\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.768336*^9, 
        FormBox[
         StyleBox["\"Jun\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.757968*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7603872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7630656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7656576*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.768336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.757968*^9, 3.7683351*^9}, {0, 1.08}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.770663421537066*^9, 3.7706635873160496`*^9, 
  3.770718578106186*^9, 3.7707233003264356`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6037c071-837b-4e4f-858a-c3223d706e89"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
TimeSeries objects allow simple transformations of the data, for instance \
calculating a daily usage value from 15 minute interval data.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7706636117493486`*^9, 3.7706636519497585`*^9}, {
  3.770665821436163*^9, 
  3.770665910199737*^9}},ExpressionUUID->"76c10207-25d7-49bf-8ac5-\
05994f808b7d"],

Cell[BoxData[
 RowBox[{"dailyUsage", "=", 
  RowBox[{"TimeSeriesAggregate", "[", 
   RowBox[{"usageTS", ",", "\"\<Day\>\"", ",", "Total"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.770655062961762*^9, 3.770655109533157*^9}, {
   3.770655191219062*^9, 3.770655197061088*^9}, {3.770655238592845*^9, 
   3.770655239289095*^9}, {3.77065554142411*^9, 3.770655565192374*^9}, {
   3.770655813186185*^9, 3.7706558478897333`*^9}, 3.7706636519504094`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"77f3c3b6-9db0-4a27-a597-4ff7659da1b8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0n1Q03UcB/A9CBsPiwcvH3jSARPHQjcdIxkPn+8AR6sT2FUqkTwdRTbM
xpR0G+lUBA87O1B5sE47K+Qk76KADAwpgsE2mCIPlxSsxR3sxySWICDRpz8+
97nXf+97fz7cvA+UBQwajRaH8/+uqnIrHF5zkPCq1eCfjyWDrp2duJ1GkX1W
y2rX5gRo8Xvj2Sn0tNeFjTuMEohWHRt8iDb4G/anN8jg+eglNo9OkZlRH7N3
1054Uf00VI+2mScyrmuFoPbdkTWA9sjuHZBNRgH3tzsl2xkUSR2aZfqWS2FT
20uuj9GSWdJ7JlQOr9fpL1rR2TfccwebRDDZsNEzkkmRTQbxg2y6GJrbz32p
QweZMyf4RhlYbM7rZnRUG/3dGe89EBt9o5S3jiKXFHeU84o4cFRGaEvQ60RX
B/M27IZZ38WDg2i94fDvgQIRvPz1/ZoIN4rkFBmWnHYh9MhyFj5Ct6SMUJyO
XdDgmSqxopXjt/YfuSAB8wjzcpg7RQoqmQqVSQTJVvawDh3vM8178lgIzHF2
yRC6uVQXVzFHgOV8LNnGogi9fEncdnoPZAmWR0vRByrDDdeSdsFCkaPWin6U
1fmPYzgaxrpG7oayKeKgbLVKpQQ4yZx7J9HFuk77yYu7oaxvw4QJvezqqZDb
xZCuf8/O86BIL6vDZb0XA/my1lQ9mnUz/MqwQQh3vcf6Leh67ud9iSkCyGcm
iyI8KfK8Xv/vT+4CSF8zfH8CvTft3KuVtwHKOB21fejpZ1JN0LwAOKmQE+pF
kR6gO1unBDB2/mqKBv1drrjReCUBFlwxHDM6t2Jcysc+DxTcdm3xpoi2UyHO
PLEZmNOBsR+iFdpA8odlK6zVDOUZ0RH9rvyM+4kA+3IbAzkU4dD/vlwbI4MH
O2OGNGi+8JN2Rp0UmsLYh0xon+69WX/GbAVTUJN7yAv4P17l9m5zJMTL6j89
jmattMZqGXKYV70tNaJ/XPWr8XfwYe5WQEqAD0Xeacw531IfBYnruSI12jKQ
echVLYKHp1ekv6Ddfq12WzpKoC1oCz/YF/OXjdv+OpsOU8b44xp0oZh5cy4q
Hg7qhLZu9FdfDEyNKWUQ/JZKGOKH+TR11owOCWxL1H12FM0NP/MNozgSTqU9
oozoYLuH3xMjQJiaf43rj/dtZiyuiAE86zIOF6N/4PVPvp+WBEnOrgATOuHN
V3o8aHLolLNnQtZTpPrpa3MMM4Ei1XKrGv3t1JHoxcI4+A+U+LAI
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$7809#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.7580112*^9, 6.36850816446542}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.7580112*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3758011200, 3768292800}, {6.36850816446542, 
                66.07653113969165}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0n1Q03UcB/A9CBsPiwcvH3jSARPHQjcdIxkPn+8AR6sT2FUqkTwdRTbM
xpR0G+lUBA87O1B5sE47K+Qk76KADAwpgsE2mCIPlxSsxR3sxySWICDRpz8+
97nXf+97fz7cvA+UBQwajRaH8/+uqnIrHF5zkPCq1eCfjyWDrp2duJ1GkX1W
y2rX5gRo8Xvj2Sn0tNeFjTuMEohWHRt8iDb4G/anN8jg+eglNo9OkZlRH7N3
1054Uf00VI+2mScyrmuFoPbdkTWA9sjuHZBNRgH3tzsl2xkUSR2aZfqWS2FT
20uuj9GSWdJ7JlQOr9fpL1rR2TfccwebRDDZsNEzkkmRTQbxg2y6GJrbz32p
QweZMyf4RhlYbM7rZnRUG/3dGe89EBt9o5S3jiKXFHeU84o4cFRGaEvQ60RX
B/M27IZZ38WDg2i94fDvgQIRvPz1/ZoIN4rkFBmWnHYh9MhyFj5Ct6SMUJyO
XdDgmSqxopXjt/YfuSAB8wjzcpg7RQoqmQqVSQTJVvawDh3vM8178lgIzHF2
yRC6uVQXVzFHgOV8LNnGogi9fEncdnoPZAmWR0vRByrDDdeSdsFCkaPWin6U
1fmPYzgaxrpG7oayKeKgbLVKpQQ4yZx7J9HFuk77yYu7oaxvw4QJvezqqZDb
xZCuf8/O86BIL6vDZb0XA/my1lQ9mnUz/MqwQQh3vcf6Leh67ud9iSkCyGcm
iyI8KfK8Xv/vT+4CSF8zfH8CvTft3KuVtwHKOB21fejpZ1JN0LwAOKmQE+pF
kR6gO1unBDB2/mqKBv1drrjReCUBFlwxHDM6t2Jcysc+DxTcdm3xpoi2UyHO
PLEZmNOBsR+iFdpA8odlK6zVDOUZ0RH9rvyM+4kA+3IbAzkU4dD/vlwbI4MH
O2OGNGi+8JN2Rp0UmsLYh0xon+69WX/GbAVTUJN7yAv4P17l9m5zJMTL6j89
jmattMZqGXKYV70tNaJ/XPWr8XfwYe5WQEqAD0Xeacw531IfBYnruSI12jKQ
echVLYKHp1ekv6Ddfq12WzpKoC1oCz/YF/OXjdv+OpsOU8b44xp0oZh5cy4q
Hg7qhLZu9FdfDEyNKWUQ/JZKGOKH+TR11owOCWxL1H12FM0NP/MNozgSTqU9
oozoYLuH3xMjQJiaf43rj/dtZiyuiAE86zIOF6N/4PVPvp+WBEnOrgATOuHN
V3o8aHLolLNnQtZTpPrpa3MMM4Ei1XKrGv3t1JHoxcI4+A+U+LAI
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$7809#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.7580112*^9, 6.36850816446542}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.7580112*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3758011200, 3768292800}, {6.36850816446542, 
                66.07653113969165}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJwtk01IVFEUx0ejIEPCEMw+JkUKm9Fm3jydGW3G+Y0zodYmdVPgyjKKSPsg
sKkwLLFcaCJUWgllWohotMmiUIwKRIoWIS2KpEWRmyKMCMLeOe8deNx3zzvn
3P/HffmNLXVN6S6XK816Wq3nd2FDz8zpJLNzVoxVs7FjsXbyU4S9k+6Oxd4w
32rlJchb+T5nYlUvFT6r5LFbCos4kz1etfDXx3epO+pjrGohld3sZ/X80PFo
hkm+lA0WU2JKbKdOxmWV0Wml3cN7mF6yADRW29/rsfftBk2HJEwM7TOZ0nyI
Gmv8+P0kGTrfZ+PMCvE5JUB2M2Jl5w9EOWItQz9KOSvplME5WQfitDr7N8rH
Z+N55+dGvxW5BgOy7jd4qeeF0bGpAE+F7z7YrPoYjj4GF4XHLoNNknf7+bds
xVTMxjeaJK4vO1klS1eQZsVl8FEG3wnY9W0hDgrdEZNj8t0f4Jrg+BB19HX4
p5u8F9rXTQKiyq8gQnfoYQSXxHSAe8rfxCdGPSgiS3XyIp67Lnj5qT55eS3z
Zjy2j60x+ixbG1rinFe+Hm7L+f3Fdr7HyyPxdUcRJxRfiDzlm6BS/PgKV7Qu
h0xpz97AH+G1vJ4+nZPLZSlfuZUK1SNu6zsTpUf7ErZvK+LUi661FeTonHLa
pa9ji3Mf8lin+Xybr8vPTRlfBsPSn6jhktaXoAY8L2CN6l5AmupjkCn72XLH
dy8nVb8Yo9pfyS1Hd713iXpb/3Ls+9wVcfCUOXiTCJrxTugVHmtLGZR8gYc2
rfM49yxh+3QVngi98DaUZhi+6D2I2v9Nd4KY6lPBC5HlbhWnVO8gSv9VnG45
ZyJBsfh7OMJ/S76ZoA==
    "], {
     TemporalData`DateSpecification[{2019, 2, 1, 12, 0, 0.}, {
      2019, 5, 31, 12, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   12.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7706550895381327`*^9, 3.7706551104472723`*^9}, 
   3.770655201315962*^9, 3.7706552424280915`*^9, {3.770655546386245*^9, 
   3.770655567278217*^9}, {3.7706558199287243`*^9, 3.7706558494632893`*^9}, 
   3.7706636519514055`*^9, 3.7706638669759893`*^9, 3.7707185843962417`*^9, 
   3.7707233930989494`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"9fda4e7d-88f2-4c2e-bfbb-8bccdd85c6f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Weather Data", "Subsection",
 CellChangeTimes->{{3.7706436696898546`*^9, 
  3.7706436721352687`*^9}},ExpressionUUID->"a6751fd1-4f5e-4e05-bbea-\
34aa218284d3"],

Cell[CellGroupData[{

Cell["\<\
The daily average daily temperature for the nearest weather station is \
available natively.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7706433847362013`*^9, 3.7706434565847073`*^9}, 
   3.7706659983196216`*^9},ExpressionUUID->"75c6b58b-95bc-4217-9dc7-\
8d54cb32e7b6"],

Cell[BoxData[
 RowBox[{"klebMeanDailyTemp", "=", 
  RowBox[{"WeatherData", "[", 
   RowBox[{"\"\<KLEB\>\"", ",", " ", "\"\<MeanTemperature\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2019", ",", " ", "2", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "31"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.770643465786847*^9, 3.7706435191072173`*^9}, {
   3.7706560252165956`*^9, 3.7706560436341224`*^9}, 3.7706659983196216`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"df5c37ed-ef85-4e66-9fe1-85fc62639521"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0mtMm2UcBfCO0vJS2lJa7oOuwEJT6GhdghtT6POwhgFhGxBUJoUOyv0i
SQPqBDIQGJjshhghYLNLdukSyphUi11LX4iRUVdJGQoVMGwh1a0vhE0Zk6H4
98PJye/ryYkqqc8t86LRaG9D/u/eXkb2xK4HO/Pim4ouxZPNFkIsoFE4wU9X
09EeRH4b8M5KDXi/Jj7XylhSJNY2jo2De39fLuXJthQ7C5c3/PdQOOPXKMGV
ZB4ZpN1kVYJLvuy0JEnDSC0vQWkG23W6viQHg4xavKsWeFE47fsSW8wwgwwd
ky5WgxcaUvLrLkaQeQMtjRaweWd+++t7cvKxPuRFIJ3Cl2k9zHq5Hzlq6bxQ
Ac5L9J8yPPMnf3qy3j0GVk6zjjyWvFIcSbxWzvOm8FL1alzWkIT0nBdrSsCP
vG9FLxRGk2u8LXwfPMq9afjqNIM8fHuilc+gsGPQPdPeJyKnUk//pgG73ioU
35TEkXpWutACzrw6vKLDkaRjnt7CZVJYdPCBLFTmUSidxHgFOOXq1lplz3Mb
fZlQ28AZOppjTRyCfNaXhAE+FCa+iG0yMTdtqvhtsgqcmlL5A2+ES76s87RZ
wCN0sbvel0CuyfnrHILCHyez9iQ8nVVwlJxbZWDR7b/apWXTtnP24AcmcEhN
l25mmIayW6oe8nwp3Og1YI1wByNNqkleCVbV5OgDfwlCZrZr9Dtw5Ps39Nr7
bKShK8P4LAp7NUZeQv0biuzdT3Wl4EGj9ezhNG90jmNt+wb8QYHtj8yPBIiT
jtI5fhQubVjUm47PKFxdfQfU4KadLuvkWR56+eehTRNYeGfphOtdIcovG1pk
sSm8/K8o61gVF9Gf7o1WgVUVrhmfzkC02z+XaQQ3vNHPCkg6iNCJ4s+ZHAq3
9hQou1USNCs7ZFGDJfzPcqaZ0cgQQ6SZwLG5i25h+l70MMKwTnAp7JFe+OcG
Pxglpw6eKQb7OOr5A4Oh6EVtYYwRfKa8z9J9fR/auBN+gOFP4XG/da3xvAQp
BFFhhWBuQ3WY814cetT2OuYu+EPrZtCqfD8ai9gXQPBg7wjmtZMrYuSeTi5S
g0m702a2i9CpZrl9BDz0nvi1f1c4iiyoDfUNoPAzc/JquFWCYhXNnQVg/kbd
8VcX41HryZ/njOCaJ6eeL7ATUIxW0sHmU3gq3NlWnCdDrIGc3CKwTPxjw5s0
KTq6PullAhv/Xp0w5EsReYyY9RXAv3GwOq48EtXVbl8pBHdkmLM+mZOj/wAH
8Kbp
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$41693#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768249600}, {-16.69413726590276, 
                18.222916280895745`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0mtMm2UcBfCO0vJS2lJa7oOuwEJT6GhdghtT6POwhgFhGxBUJoUOyv0i
SQPqBDIQGJjshhghYLNLdukSyphUi11LX4iRUVdJGQoVMGwh1a0vhE0Zk6H4
98PJye/ryYkqqc8t86LRaG9D/u/eXkb2xK4HO/Pim4ouxZPNFkIsoFE4wU9X
09EeRH4b8M5KDXi/Jj7XylhSJNY2jo2De39fLuXJthQ7C5c3/PdQOOPXKMGV
ZB4ZpN1kVYJLvuy0JEnDSC0vQWkG23W6viQHg4xavKsWeFE47fsSW8wwgwwd
ky5WgxcaUvLrLkaQeQMtjRaweWd+++t7cvKxPuRFIJ3Cl2k9zHq5Hzlq6bxQ
Ac5L9J8yPPMnf3qy3j0GVk6zjjyWvFIcSbxWzvOm8FL1alzWkIT0nBdrSsCP
vG9FLxRGk2u8LXwfPMq9afjqNIM8fHuilc+gsGPQPdPeJyKnUk//pgG73ioU
35TEkXpWutACzrw6vKLDkaRjnt7CZVJYdPCBLFTmUSidxHgFOOXq1lplz3Mb
fZlQ28AZOppjTRyCfNaXhAE+FCa+iG0yMTdtqvhtsgqcmlL5A2+ES76s87RZ
wCN0sbvel0CuyfnrHILCHyez9iQ8nVVwlJxbZWDR7b/apWXTtnP24AcmcEhN
l25mmIayW6oe8nwp3Og1YI1wByNNqkleCVbV5OgDfwlCZrZr9Dtw5Ps39Nr7
bKShK8P4LAp7NUZeQv0biuzdT3Wl4EGj9ezhNG90jmNt+wb8QYHtj8yPBIiT
jtI5fhQubVjUm47PKFxdfQfU4KadLuvkWR56+eehTRNYeGfphOtdIcovG1pk
sSm8/K8o61gVF9Gf7o1WgVUVrhmfzkC02z+XaQQ3vNHPCkg6iNCJ4s+ZHAq3
9hQou1USNCs7ZFGDJfzPcqaZ0cgQQ6SZwLG5i25h+l70MMKwTnAp7JFe+OcG
Pxglpw6eKQb7OOr5A4Oh6EVtYYwRfKa8z9J9fR/auBN+gOFP4XG/da3xvAQp
BFFhhWBuQ3WY814cetT2OuYu+EPrZtCqfD8ai9gXQPBg7wjmtZMrYuSeTi5S
g0m702a2i9CpZrl9BDz0nvi1f1c4iiyoDfUNoPAzc/JquFWCYhXNnQVg/kbd
8VcX41HryZ/njOCaJ6eeL7ATUIxW0sHmU3gq3NlWnCdDrIGc3CKwTPxjw5s0
KTq6PullAhv/Xp0w5EsReYyY9RXAv3GwOq48EtXVbl8pBHdkmLM+mZOj/wAH
8Kbp
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$41693#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768249600}, {-16.69413726590276, 
                18.222916280895745`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{-13.78, -22.56, -4.28, 0.06, 0.44, 0.39, 1.44, 
      2.78, -4.56, -7.94, -6.22, -9.83, -2.5, -2.33, -3, 
      0.56, -7.44, -5.5, -16.67, -16.94, -4.83, 2.83, -4.61, -0.33, 
      1.94, -4.72, -13, -11.89, -9.39, -7.11, -3.11, -0.89, -7.28, -11.11, \
-13.89, -9.72, -8.44, -4.5, 0.89, 0.72, -2.28, 1.06, 6.72, 4.56, 
      0.22, -3.94, -2.61, -5.22, 2.5, 3.67, 1.89, -2.61, 3.89, -5.39, 0.28, 
      4.94, 5.67, 5.78, 10.83, 1.39, 0.61, 6.56, 3.56, -0.67, 5.39, 0.22, 8, 
      1.33, 1.56, -0.83, 0, 8.39, 8.61, 6.89, 4.11, 3.56, 1.39, 9.06, 19.06, 
      17.61, 11.33, 13.89, 12.61, 7, 8.89, 6, 5.44, 5.56, 6.94, 5.89, 7, 8.28,
       12.39, 13, 11.56, 14.06, 10.61, 9.83, 9.72, 12.61, 8.17, 8.44, 4.5, 
      7.28, 9.67, 13.39, 15, 13.5, 20.61, 14.61, 14.22, 15.67, 15.11, 13.94, 
      15.5, 14.44, 9.17, 7.28, 12.44, 16.83}}, {
     TemporalData`DateSpecification[{2019, 2, 1, 0, 0, 0.}, {
      2019, 5, 31, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   12.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.7706435234395113`*^9, 3.7706560458568277`*^9, 
  3.7706638754335976`*^9, 3.770665998326476*^9, 3.770718591207389*^9, 
  3.7707233994814672`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7be6be9f-ec23-41dc-ae79-84f0069c297f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The two time series can be plotted together easily.", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.77066449843515*^9, 
  3.770664541104937*^9}},ExpressionUUID->"ef844aa6-85da-4945-94d3-\
36c59203cf64"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dailyUsage", ",", "klebMeanDailyTemp"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Daily Usage\>\"", ",", "\"\<Mean Daily Temperature\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.770663710115818*^9, 3.770663815668145*^9}, {
   3.770663899487629*^9, 3.77066390021478*^9}, {3.770663937599821*^9, 
   3.770663963568572*^9}, 3.770664541105935*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"b40c406a-e905-4023-87a5-42fc89492c9a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFlQtsU2UUx0vnxmWjWzsW6RQLk4cFwcEAvTwG/TZ1nRh1GzElWWIynbmG
8BCCKQOdgpNCDBOJehkPgbFZkcxXoheDGZlB6zLFR5AaI4GQaHU38TmpRDL/
539vw5c0za/3u+c7/3P+52tFy7rGVq/H44njI99Yxnejw+qfcHPnwKa7I2DT
47HV4BDWiahwahb45o7hBuvCUuHsSvBDVqhjeI8uHG4HZxrkhzuFY2+Cz8r7
Q/OFE9+CEX0kfKpG2LoG/jAkAWcLZ24bY6vNZX11l65WCgcbwb9KvNXk6Fbw
ibpLbWVr5wrHe8Hjznevry5k/ORX4AoJd2iOcPoqeMF8WTOFteleWzVKeoFF
wvqD4B3YHupZIWxsBp8eQQFaqNfs9rrvN0Wo/4vc823zqP8KuPVxWTw/fGue
rebxPHLsfnA/999F/U+B65F+3xusr3UYXMj8qS8zmOfWM8D9wRHwxTYpyH3U
P/kGW/Vi9/lHq6m/HvwEsPv3hdS/EbxFtrcxv/RB8FbhLkX9KXD8+nP9T/CX
7A/PNyblu/X5mvU17wWb+7DKuT+1HtwlvMrR3wU+Q31O/8+AmW5bFfX/Bv5I
+htj/RLlBba6hf7h+1ZtQc4/5Mwa8Hbpxz3koAmeJPtDzCc6AL42itW/nPrt
Ard+x1nP5I1jbeX8sIT6I+ACwV30o7YavJb1cvS/Av5REj7CfI3+sW78dtbf
/AX8mLS3l/1MTdBstUben8v92Wrwq1KP79mPsKHl/Ov0/2XN7b/X8f8p8Dlp
92tk6ydwlbjlL+aX8Y+zlbS3+x3OV3AJmJN5mudFW8HH2H++H+8EV8pAJTk/
yZPgAP10O/VfBnO2nyVrxYW2+oPzRNZ18GeS38As6m8pdOcxzvqaL4L3Ylyb
19E/qQ/AT7O/3J+9CD4o+vdx3sJFRe7+TsaPLQS/J/N6B/NLPAJ+kvVjfa2d
4Cnsby31vw+ukfn4mX4JXgDvZLyJ1K+Nt5VPji+7ifqrwFnp12iQ+pvBe5lP
OfW/AE5I+Pzp1P8ueBn9QT36D+Nd/w6wf0a+z1adPI/5mJU+d97yHP2rwE3i
14Zl1L8dPJH5LKb+PvA2Oa9jMvWnfbn7YQr1e4ttVcr9FdQ/u9jtr4f+zjwM
3i/pL3L0PwfukfNr66n/LfDzjL+A+s+BI6Ln46nUPwouot/J6ZklthpD/9Dv
2kqwT54PMl/9mZLcvLNfRhK8gf5z+v8N+DjPr6H+/8AHrvs9O8Pv3ne1TdTf
4Hf9v5j5x7b43ft5F/2c6PHn6sP71zrrz9WX85v5FyzV6dvh6J8WsNUe6UcJ
77foA+BDsn8q/RePg9sZj5w8GsjdZ+xfeijgztNLjKddAZ+U9ukzqL+i1FZs
p87nxgrwZd4H1GduKnX/b3YzXup18HL6x+n/5+BPxC5H66j/b/BG+tv5/wtN
sBXb/yn9k4iCd4uetxnP2gCeI/NrLI38D4lmpXY=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlA1IU1EUx5/u++1t7+2jEtOaRbayj0liH2RuEBhBMIsoyMK+KaJeEBRG
MAghinJRBFHEIqEokhFFUlRLoYgiDAwjimYfFGowCE0ItHv+27mwgcjv3XvP
Pb9zzntVOw6t312qKMox8Uf/xS/+fHI41tEzGm7pqMkITgxLridOT1FGYjPb
h5u7Z/iIs42Cu2fQg65GwcZ+wfNa6MQn4uhFwWNhevCB2HwqWB24YTaof4lT
vwQ34IE9KrjPX8Lsp/hKg+Beur5nJnFkr+DBtmBX02AZcev5ksJ9t2YTJx8L
zqtYiTM/BHeaFLGUOKeX8rqTOLRC8EgzGQxSPvFdpXxfJfzPyf1T4d/N++9E
4P9V8GEKnwMbHstIbD0KEiCOLrXw/fAzt1sK+034pc5YuJ7vn5H/AwvXZ5Ly
UbIW9sX+iGrlfObDv07wGtrwci78t0meBf9TVr6vAv73rBwv7/9Z8HHCthG6
P+6wcT55/1pbob/LquG/xcbxMR/ZdhvHR/2NtI3jh+D/0cb5In/Tapf3of+L
7Oz7k7hvs537j34pJ+08Pzlaj9y1c/xyqmfrgNzvJ06WOHj+3tD+TI1g6LTr
8N/o4POYj1BCcpA4ftsh54fiJfoFI1yLhzg94eD7Jih+NuwsimdscHL9dNof
PSE4//5Mgf9NJ8/bO/i/c/K8BTD//wRTdYJdU4mVahfHm0Ycibt43ufAv83F
+YxRvGSni32/wf+tXEe9cuMurr9GHJqtcv9+oP/rVJkv/I+qRfVMX1e5PiFa
z75WC/PQNIr3f0zlfo3j/Q+5Od4QxTfXuvk8fqkjbp4nxOu75uZ5q4L/K3l+
Ovz/uDlfA/6VWpFPskkrqkfmsMb1mwX/K1ohnr4E/i+0Qn+v1hLHcxrXtxr+
5R457+j/ag/nNw/+Bz3sU0FsXJb7kX+0V66XEZu/Pdxv1Dc1zcv5ot99MS+v
w1c54GX/fP8veYvua83IddQvOeTl+8PEmaAuvxfwX6VzPebCf5/kBfC/oLMf
5ivxRJffV/j/1OX7Dn+fUVQPY6VgvM6bkE90jyG/B/BPGvJ7AP9HhvzewP+7
PI/4iu5jH+QfWe7j84vgv1My+pM86+N+1sH/oY/zWwj/QR/nD9+Q5uf7FsO/
3s/7ET/R6uf88/0/7ef7sD97X64jnvFFxsO8RV2BIj9zSYD3oz+prYIxvv2R
6H+YhpAO
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.757968*^9, 3.7682928*^9}, {-22.56, 77.04999999999997}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Daily Usage\"", "\"Mean Daily Temperature\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7706638168249893`*^9, {3.7706638862069225`*^9, 3.7706639020030084`*^9}, 
   3.770663964941827*^9, 3.770664541107459*^9, 3.770718601887881*^9, 
   3.7707234046133986`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f3aef21f-deb4-4b1f-ac21-49f738945453"]
}, Open  ]],

Cell["\<\
The data can also be combined into a TemporalData structure as well.\
\>", "Text",
 CellChangeTimes->{{3.7707192565048513`*^9, 3.770719275803664*^9}, {
  3.7707193404568014`*^9, 3.7707193433565893`*^9}, {3.7707233754012647`*^9, 
  3.7707233775706987`*^9}},ExpressionUUID->"c5b2a6bf-6f59-44b4-a427-\
b77bd04ee982"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usagandTempTemporalData", "=", 
  RowBox[{"TemporalData", "[", 
   RowBox[{"{", 
    RowBox[{"dailyUsage", ",", "klebMeanDailyTemp"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7707192254119205`*^9, 3.7707192464337*^9}, {
  3.7707192834232435`*^9, 3.7707193308755856`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b6613e6d-b893-426f-9584-07376efc0c06"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0n1QE3QcBnBeMobxNnAwyBHZWbMZsvcJA76/gSA7bMTVtfCkxHO8zE1e
yh0ozDsOUukg2CkQUEBxQoegnJlwNEAG4yUllBoZUjHUS38icRDv0bc/nnvu
c/f8+byacjLxuJODg4Mc839XVG9L6Nt6SuK/nN4KT1JA2iEvo48DJV9k5f8a
5hsNS+bRyhPoCk5XfEqTFJqEjOEetCZ8eZePMBy2Is6qmY6U/PD4esZFeTB4
MVrG09FnFMeGMzghED2ReKwbnX6yPr/WFgL7kq9Ms5wouTBSWdF8SQSWgqib
OvS8JeIjc1wc5DcmfduDvldzLiXVJAFauKuY7UxJVaFt0h4hBGOaNk+L9qtr
V5oTFdBtf/5jN1rJ3JHeWiKCqzt3u7JeoOSOPE2fd5mAVf3bkVT0RuWW6oxV
ABcTFbW96Bur7pzYahG422dl7G2UZJzPmCrrCoHmU4y5dDTra41FpOLDmnXq
s1vocqnWIL8vgMydgmjWi5Ro9yWHKpKFUBcse6hHtwfxWqQRfMix5c4Oos8x
P5cxNAC6QvkG24WSsWtw23k9FAKftW9moatqx25b3QWw8ME3fgPo7M6mXu66
BDKPTJT5Mih58tUpz6NLAmgK/O5vPbqzgbVI7wphc8b3RB+6xvsVr/41Ibgd
3/NTgCslHmXTb7EOh8JAvqEiG729veMP8ygfGqtjdBb0nV8eLR7i8kCSM8jn
bKfEtf7djpFgHjxTWT0y0eyQBdPGQYC3+52VfejEErvqLuGBZnFe7/8SJalB
vBXvAR40cD9s1aKLDjImi4rCwBRQcM+CXuIXOvbUSqDZM9CH7UaJ8bLt8Wqr
P6TWrF5NR+f6xWesXwmEB7NFslvo4sjfjQdiAQx80+QOd0pG2LLxJ/UKGAp7
J0WPvibwn5mIlEP/lFI5iI57MGaICwqCP88OKNkeuG8QX2gc5MKNmXlRFtqD
myBWTx2Attg6qQV9/2hA0v6cvZAQVVTF8qTkvU+m9zNsPGjZ4Nh16NKC5Nc1
DwWwu1Ma04s2bCwtj0sIqIVOJn8vSk6vuKUIGCoQRzMistA1zAFpcV44SNRl
jv3ocF6xbO8Egbk91raXmZTo+i45/JwjheF/jR/r0c9Pu5S66N+Ew+V/vTaE
fuMms3GFAlR2lfKDvPHf3Z8uLzyNhH8eXX8/G31+UywuD4kCt/GS1FF0W0eA
n0ocCzFme1mgDyUTk7m8uSECes3a99no0bZNyXKaHP4DJvmx1g==
                   "]]}, Annotation[#, "Charting`Private`Tag$42165#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwVzH1QE3Qcx/HBeNjaEAg2BmwIIcKckWum84n9frjwbqngsFgQliZP4eZg
BSfJw4lUFxohh7jLJZgrMAO8UlwR+wGD4dEVT4kh4SHgHeOnMEM9jUHf/vjc
+17/fCIOHVVnuDMYjO2w/3vG6JnUuTKH1fhy8YEqCcne41cawKD4s/qSPKcj
kDzu6K87AjYsdP0x9PSOwixj3bSCI/wrjp+1PFWsxJVp/N0ontUZckVyf+LH
ahrMAZ+Sbv103B5MlCPq99vBxnXnmBueMckrB36Y4LlTLFPNz9iWmcRWsvOG
FnxyDYdT6y0kxRdTL1vBfpzZyX+ubyC0/KVPBEyKJxoKfIZdnqQ0O7coF6y/
7TvF/4VL2qfmf2sHk0HGVoXdoWgVRrF5HhQnqMJ3jWvFxK65k54FZqyYY/xG
IkitOv48ARtcbd9bVzOJz9S0XOBJsXJvwGRaQwRpLGA9zAHvTm9Ouf8khjy3
j5/qAq+RlVrKxkKIXviqkudFsVycc16T6FCYYuUzOvC3lV/3GpmTVsPosele
8G4ed4vRxEPa8u1LAm+K2fni7Po2Bgl70OLKA5+O8YmfOOhPHr19KagHvO2u
7yjbyUb69JEqPovixZh37o64z1jNYdecOnCdSclZdLoR1z3+kU7wsaY67g0Z
G3EzxAMhbIoPF3o5/mIEoZ7iwjP54NY9O/49wWeji8YErQ38+fzZfac/CESb
DL1S0QsUC9Ym/zqn+tH6ING+Sg/+5kJL+pDwkWJvN1PVCR4udT9+wpuFMhcX
dMEcim+N8Pvrs8atDTHvXskFi9b1DbynD0E1ISXDNnCjKCjctEOIGn3DAgRc
ilOPLo1msHxQ1lfPWnPA+yXypqiDYejv6Qp5F7i7OG59eYcUFUprbgf6UGxq
0az1EEhQ37Z9h3Rgy+uXRGPxQtQ9rlL1gm2pkc4rt4LQZFmPSrAK/g+H/tmX
zEfX7y1szAN/ubHCyxwqQM27TJtt4NCPgzyZiREoaWfFOZ4vxWZDrrfcKUZN
S6IpLbh3Zb8pOUWCoiybEwi4stpxAZsjkUbmXhPsR3FK2tWBPGM0ek3JissD
P7YURau/E6FNmiq3bvAyziyY81iNHortzaH+FM8b4t8osUrQzeXSD3XgIYtp
nt8ei9KqZyP7wLXDdcwOx3pU9/MX0vAXKZZOF1nMv8eiJ/d/SskHX02SaPiy
lxF3sDKrHzxWO/HWmygaJXRMVYUFUMyp/mjW1ROJdJnP2/LB1xK2DGZ4ydB/
mUa1tQ==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$42165#2"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768292800}, {-16.714658851046863`, 
                62.064037567456545`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["240", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwV0n1QE3QcBnBeMobxNnAwyBHZWbMZsvcJA76/gSA7bMTVtfCkxHO8zE1e
yh0ozDsOUukg2CkQUEBxQoegnJlwNEAG4yUllBoZUjHUS38icRDv0bc/nnvu
c/f8+byacjLxuJODg4Mc839XVG9L6Nt6SuK/nN4KT1JA2iEvo48DJV9k5f8a
5hsNS+bRyhPoCk5XfEqTFJqEjOEetCZ8eZePMBy2Is6qmY6U/PD4esZFeTB4
MVrG09FnFMeGMzghED2ReKwbnX6yPr/WFgL7kq9Ms5wouTBSWdF8SQSWgqib
OvS8JeIjc1wc5DcmfduDvldzLiXVJAFauKuY7UxJVaFt0h4hBGOaNk+L9qtr
V5oTFdBtf/5jN1rJ3JHeWiKCqzt3u7JeoOSOPE2fd5mAVf3bkVT0RuWW6oxV
ABcTFbW96Bur7pzYahG422dl7G2UZJzPmCrrCoHmU4y5dDTra41FpOLDmnXq
s1vocqnWIL8vgMydgmjWi5Ro9yWHKpKFUBcse6hHtwfxWqQRfMix5c4Oos8x
P5cxNAC6QvkG24WSsWtw23k9FAKftW9moatqx25b3QWw8ME3fgPo7M6mXu66
BDKPTJT5Mih58tUpz6NLAmgK/O5vPbqzgbVI7wphc8b3RB+6xvsVr/41Ibgd
3/NTgCslHmXTb7EOh8JAvqEiG729veMP8ygfGqtjdBb0nV8eLR7i8kCSM8jn
bKfEtf7djpFgHjxTWT0y0eyQBdPGQYC3+52VfejEErvqLuGBZnFe7/8SJalB
vBXvAR40cD9s1aKLDjImi4rCwBRQcM+CXuIXOvbUSqDZM9CH7UaJ8bLt8Wqr
P6TWrF5NR+f6xWesXwmEB7NFslvo4sjfjQdiAQx80+QOd0pG2LLxJ/UKGAp7
J0WPvibwn5mIlEP/lFI5iI57MGaICwqCP88OKNkeuG8QX2gc5MKNmXlRFtqD
myBWTx2Attg6qQV9/2hA0v6cvZAQVVTF8qTkvU+m9zNsPGjZ4Nh16NKC5Nc1
DwWwu1Ma04s2bCwtj0sIqIVOJn8vSk6vuKUIGCoQRzMistA1zAFpcV44SNRl
jv3ocF6xbO8Egbk91raXmZTo+i45/JwjheF/jR/r0c9Pu5S66N+Ew+V/vTaE
fuMms3GFAlR2lfKDvPHf3Z8uLzyNhH8eXX8/G31+UywuD4kCt/GS1FF0W0eA
n0ocCzFme1mgDyUTk7m8uSECes3a99no0bZNyXKaHP4DJvmx1g==
                   "]]}, Annotation[#, "Charting`Private`Tag$42165#1"]& ], 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwVzH1QE3Qcx/HBeNjaEAg2BmwIIcKckWum84n9frjwbqngsFgQliZP4eZg
BSfJw4lUFxohh7jLJZgrMAO8UlwR+wGD4dEVT4kh4SHgHeOnMEM9jUHf/vjc
+17/fCIOHVVnuDMYjO2w/3vG6JnUuTKH1fhy8YEqCcne41cawKD4s/qSPKcj
kDzu6K87AjYsdP0x9PSOwixj3bSCI/wrjp+1PFWsxJVp/N0ontUZckVyf+LH
ahrMAZ+Sbv103B5MlCPq99vBxnXnmBueMckrB36Y4LlTLFPNz9iWmcRWsvOG
FnxyDYdT6y0kxRdTL1vBfpzZyX+ubyC0/KVPBEyKJxoKfIZdnqQ0O7coF6y/
7TvF/4VL2qfmf2sHk0HGVoXdoWgVRrF5HhQnqMJ3jWvFxK65k54FZqyYY/xG
IkitOv48ARtcbd9bVzOJz9S0XOBJsXJvwGRaQwRpLGA9zAHvTm9Ouf8khjy3
j5/qAq+RlVrKxkKIXviqkudFsVycc16T6FCYYuUzOvC3lV/3GpmTVsPosele
8G4ed4vRxEPa8u1LAm+K2fni7Po2Bgl70OLKA5+O8YmfOOhPHr19KagHvO2u
7yjbyUb69JEqPovixZh37o64z1jNYdecOnCdSclZdLoR1z3+kU7wsaY67g0Z
G3EzxAMhbIoPF3o5/mIEoZ7iwjP54NY9O/49wWeji8YErQ38+fzZfac/CESb
DL1S0QsUC9Ym/zqn+tH6ING+Sg/+5kJL+pDwkWJvN1PVCR4udT9+wpuFMhcX
dMEcim+N8Pvrs8atDTHvXskFi9b1DbynD0E1ISXDNnCjKCjctEOIGn3DAgRc
ilOPLo1msHxQ1lfPWnPA+yXypqiDYejv6Qp5F7i7OG59eYcUFUprbgf6UGxq
0az1EEhQ37Z9h3Rgy+uXRGPxQtQ9rlL1gm2pkc4rt4LQZFmPSrAK/g+H/tmX
zEfX7y1szAN/ubHCyxwqQM27TJtt4NCPgzyZiREoaWfFOZ4vxWZDrrfcKUZN
S6IpLbh3Zb8pOUWCoiybEwi4stpxAZsjkUbmXhPsR3FK2tWBPGM0ek3JissD
P7YURau/E6FNmiq3bvAyziyY81iNHortzaH+FM8b4t8osUrQzeXSD3XgIYtp
nt8ei9KqZyP7wLXDdcwOx3pU9/MX0vAXKZZOF1nMv8eiJ/d/SskHX02SaPiy
lxF3sDKrHzxWO/HWmygaJXRMVYUFUMyp/mjW1ROJdJnP2/LB1xK2DGZ4ydB/
mUa1tQ==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$42165#2"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.757968*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3757968000, 3768292800}, {-16.714658851046863`, 
                62.064037567456545`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Feb 2019\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 May 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["240", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[Automatic, {{CompressedData["
1:eJwtk01IVFEUx0ejIEPCEMw+JkUKm9Fm3jydGW3G+Y0zodYmdVPgyjKKSPsg
sKkwLLFcaCJUWgllWohotMmiUIwKRIoWIS2KpEWRmyKMCMLeOe8dGO67555z
7v/jTn5jS11TmsvlarV+vwsbemZOJ5mds2Ksmo0di7WTnyLsnXR3LPaG+VYr
H0HeyvmciVW9VPisksduKSziTPZ41cJfH9+l7qiPsaqFVHazn9XzQ8ejGSb5
UjZYTIkpsZ06GZdVRqeVdg/vYXrJAtBYbZ/XY+/bDZoOSZgY2mcypfkQNdb4
8ftJMnS+z8aZFeJzSoDsZsTKzh+IcsRahn6UclbSKYNzsg7EaXX2b5SPz8bz
zs+NfityDQZk3W/wUu8Lo2NTAZ4K332wWfUxHH0MLgqPXQabJO/282/ZiqmY
jW80SVw/drJKlq4gzYrL4KMMvhOw69tCHBS6IybH5Nwf4Jrg+BB19HX4p5u8
F9rXTQKiyq8gQnfoYQSXxHSAe8rfxCdGPSgiS3Xyki7nF7z8VJ+8vJZ5Mx7b
x9YYfZatDS1xzitfD7fl/v5iO9/j5ZH4uqOIE4ovRJ7yTVApfnyFK1qXQ6a0
Z2/gj/BaXk+fzsnlspSv3EqF6hG39Z2J0qN9Cdu3FXHqRdfaCnJ0Tjnt0tex
xXkPeazTfL7N1+Xnpowvg2HpT9RwSetLUAOeF7BGdS8gTfUxyJT9bLnju5eT
ql+MUe2v5Jaju767RL2tfzn2e+6KOHjKHLxJBM14J/QKj7WlDEq+wEOb1nmc
d5awfboKT4ReeBtKMwxf9B1E7f9Nd4KY6lPBC5HlbhWnVO8gSv9VnG65ZyJB
sfh7OMJ/PX6Zng==
     "], {-13.78, -22.56, -4.28, 0.06, 0.44, 0.39, 1.44, 
      2.78, -4.56, -7.94, -6.22, -9.83, -2.5, -2.33, -3, 
      0.56, -7.44, -5.5, -16.67, -16.94, -4.83, 2.83, -4.61, -0.33, 
      1.94, -4.72, -13, -11.89, -9.39, -7.11, -3.11, -0.89, -7.28, -11.11, \
-13.89, -9.72, -8.44, -4.5, 0.89, 0.72, -2.28, 1.06, 6.72, 4.56, 
      0.22, -3.94, -2.61, -5.22, 2.5, 3.67, 1.89, -2.61, 3.89, -5.39, 0.28, 
      4.94, 5.67, 5.78, 10.83, 1.39, 0.61, 6.56, 3.56, -0.67, 5.39, 0.22, 8, 
      1.33, 1.56, -0.83, 0, 8.39, 8.61, 6.89, 4.11, 3.56, 1.39, 9.06, 19.06, 
      17.61, 11.33, 13.89, 12.61, 7, 8.89, 6, 5.44, 5.56, 6.94, 5.89, 7, 8.28,
       12.39, 13, 11.56, 14.06, 10.61, 9.83, 9.72, 12.61, 8.17, 8.44, 4.5, 
      7.28, 9.67, 13.39, 15, 13.5, 20.61, 14.61, 14.22, 15.67, 15.11, 13.94, 
      15.5, 14.44, 9.17, 7.28, 12.44, 16.83}}, {
     TemporalData`DateSpecification[{2019, 2, 1, 12, 0, 0.}, {
      2019, 5, 31, 12, 0, 0.}, {1, "Day"}], 
     TemporalData`DateSpecification[{2019, 2, 1, 0, 0, 0.}, {
      2019, 5, 31, 0, 0, 0.}, {1, "Day"}]}, 2, {"Continuous", 2}, {
    "Discrete", 2}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   12.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7707193465898056`*^9, 3.770719519735078*^9, {3.7707233801886077`*^9, 
   3.770723409351859*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"23f7ab56-7a4a-45c6-a70a-e6d16801e9e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"usagandTempTemporalData", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Daily Usage\>\"", ",", "\"\<Mean Daily Temperature\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7707193525862875`*^9, 3.7707193715564165`*^9}, {
  3.7707194362776265`*^9, 3.7707194574649367`*^9}, {3.7707194985152273`*^9, 
  3.770719565379634*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"53c6e39b-640b-4856-9f23-24918118b38b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFlQtsU2UUx0vnxmWjWzsW6RQLk4cFwcEAvTwG/TZ1nRh1GzElWWIynbmG
8BCCKQOdgpNCDBOJehkPgbFZkcxXoheDGZlB6zLFR5AaI4GQaHU38TmpRDL/
539vw5c0za/3u+c7/3P+52tFy7rGVq/H44njI99Yxnejw+qfcHPnwKa7I2DT
47HV4BDWiahwahb45o7hBuvCUuHsSvBDVqhjeI8uHG4HZxrkhzuFY2+Cz8r7
Q/OFE9+CEX0kfKpG2LoG/jAkAWcLZ24bY6vNZX11l65WCgcbwb9KvNXk6Fbw
ibpLbWVr5wrHe8Hjznevry5k/ORX4AoJd2iOcPoqeMF8WTOFteleWzVKeoFF
wvqD4B3YHupZIWxsBp8eQQFaqNfs9rrvN0Wo/4vc823zqP8KuPVxWTw/fGue
rebxPHLsfnA/999F/U+B65F+3xusr3UYXMj8qS8zmOfWM8D9wRHwxTYpyH3U
P/kGW/Vi9/lHq6m/HvwEsPv3hdS/EbxFtrcxv/RB8FbhLkX9KXD8+nP9T/CX
7A/PNyblu/X5mvU17wWb+7DKuT+1HtwlvMrR3wU+Q31O/8+AmW5bFfX/Bv5I
+htj/RLlBba6hf7h+1ZtQc4/5Mwa8Hbpxz3koAmeJPtDzCc6AL42itW/nPrt
Ard+x1nP5I1jbeX8sIT6I+ACwV30o7YavJb1cvS/Av5REj7CfI3+sW78dtbf
/AX8mLS3l/1MTdBstUben8v92Wrwq1KP79mPsKHl/Ov0/2XN7b/X8f8p8Dlp
92tk6ydwlbjlL+aX8Y+zlbS3+x3OV3AJmJN5mudFW8HH2H++H+8EV8pAJTk/
yZPgAP10O/VfBnO2nyVrxYW2+oPzRNZ18GeS38As6m8pdOcxzvqaL4L3Ylyb
19E/qQ/AT7O/3J+9CD4o+vdx3sJFRe7+TsaPLQS/J/N6B/NLPAJ+kvVjfa2d
4Cnsby31vw+ukfn4mX4JXgDvZLyJ1K+Nt5VPji+7ifqrwFnp12iQ+pvBe5lP
OfW/AE5I+Pzp1P8ueBn9QT36D+Nd/w6wf0a+z1adPI/5mJU+d97yHP2rwE3i
14Zl1L8dPJH5LKb+PvA2Oa9jMvWnfbn7YQr1e4ttVcr9FdQ/u9jtr4f+zjwM
3i/pL3L0PwfukfNr66n/LfDzjL+A+s+BI6Ln46nUPwouot/J6ZklthpD/9Dv
2kqwT54PMl/9mZLcvLNfRhK8gf5z+v8N+DjPr6H+/8AHrvs9O8Pv3ne1TdTf
4Hf9v5j5x7b43ft5F/2c6PHn6sP71zrrz9WX85v5FyzV6dvh6J8WsNUe6UcJ
77foA+BDsn8q/RePg9sZj5w8GsjdZ+xfeijgztNLjKddAZ+U9ukzqL+i1FZs
p87nxgrwZd4H1GduKnX/b3YzXup18HL6x+n/5+BPxC5H66j/b/BG+tv5/wtN
sBXb/yn9k4iCd4uetxnP2gCeI/NrLI38D4lmpXY=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlA1IU1EUx5/u++1t7+2jEtOaRbayj0liH2RuEBhBMIsoyMK+KaJeEBRG
MAghinJRBFHEIqEokhFFUlRLoYgiDAwjimYfFGowCE0ItHv+27mwgcjv3XvP
Pb9zzntVOw6t312qKMox8Uf/xS/+fHI41tEzGm7pqMkITgxLridOT1FGYjPb
h5u7Z/iIs42Cu2fQg65GwcZ+wfNa6MQn4uhFwWNhevCB2HwqWB24YTaof4lT
vwQ34IE9KrjPX8Lsp/hKg+Beur5nJnFkr+DBtmBX02AZcev5ksJ9t2YTJx8L
zqtYiTM/BHeaFLGUOKeX8rqTOLRC8EgzGQxSPvFdpXxfJfzPyf1T4d/N++9E
4P9V8GEKnwMbHstIbD0KEiCOLrXw/fAzt1sK+034pc5YuJ7vn5H/AwvXZ5Ly
UbIW9sX+iGrlfObDv07wGtrwci78t0meBf9TVr6vAv73rBwv7/9Z8HHCthG6
P+6wcT55/1pbob/LquG/xcbxMR/ZdhvHR/2NtI3jh+D/0cb5In/Tapf3of+L
7Oz7k7hvs537j34pJ+08Pzlaj9y1c/xyqmfrgNzvJ06WOHj+3tD+TI1g6LTr
8N/o4POYj1BCcpA4ftsh54fiJfoFI1yLhzg94eD7Jih+NuwsimdscHL9dNof
PSE4//5Mgf9NJ8/bO/i/c/K8BTD//wRTdYJdU4mVahfHm0Ycibt43ufAv83F
+YxRvGSni32/wf+tXEe9cuMurr9GHJqtcv9+oP/rVJkv/I+qRfVMX1e5PiFa
z75WC/PQNIr3f0zlfo3j/Q+5Od4QxTfXuvk8fqkjbp4nxOu75uZ5q4L/K3l+
Ovz/uDlfA/6VWpFPskkrqkfmsMb1mwX/K1ohnr4E/i+0Qn+v1hLHcxrXtxr+
5R457+j/ag/nNw/+Bz3sU0FsXJb7kX+0V66XEZu/Pdxv1Dc1zcv5ot99MS+v
w1c54GX/fP8veYvua83IddQvOeTl+8PEmaAuvxfwX6VzPebCf5/kBfC/oLMf
5ivxRJffV/j/1OX7Dn+fUVQPY6VgvM6bkE90jyG/B/BPGvJ7AP9HhvzewP+7
PI/4iu5jH+QfWe7j84vgv1My+pM86+N+1sH/oY/zWwj/QR/nD9+Q5uf7FsO/
3s/7ET/R6uf88/0/7ef7sD97X64jnvFFxsO8RV2BIj9zSYD3oz+prYIxvv2R
6H+YhpAO
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.757968*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.757968*^9, 3.7682928*^9}, {-22.56, 77.04999999999997}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Daily Usage\"", "\"Mean Daily Temperature\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7707194420668416`*^9, 3.7707194597969975`*^9}, {
   3.770719502080386*^9, 3.770719567320165*^9}, 3.7707234156811247`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"48d623ff-8b9e-4c34-9de5-e2320fde8cd6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Viewing Daily Patterns", "Section",
 CellChangeTimes->{{3.770666195335281*^9, 
  3.7706662000548463`*^9}},ExpressionUUID->"d3fada7c-6f43-4c97-9023-\
75b8ac9bbf84"],

Cell["\<\
It is helpful to view the detailed consumption pattern for each day.  This \
allows for visual search of patterns attributable to the hot tub\
\[CloseCurlyQuote]s energy consumption, and allows for determination of days \
during which the Nissan Leaf was plugged in.\
\>", "Text",
 CellChangeTimes->{{3.770666210511449*^9, 
  3.7706663463280764`*^9}},ExpressionUUID->"7e3dd5d3-5afc-4aac-93f3-\
4c6ab82546a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"toDate", "[", "dates_List", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{"toDate", ",", " ", "dates"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toDate", "[", "dateObject_DateObject", "]"}], " ", ":=", " ", 
   RowBox[{"DateObject", "[", 
    RowBox[{"DateValue", "[", 
     RowBox[{"dateObject", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Year\>\"", ",", " ", "\"\<Month\>\"", ",", " ", "\"\<Day\>\""}], 
       "}"}]}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.770666210511449*^9, 3.770666336540328*^9}, {
   3.770666380162223*^9, 3.7706663860581074`*^9}, 3.7706666533028936`*^9, {
   3.770758223328697*^9, 3.770758245098281*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"5c3918cc-212b-43a6-a49f-c7cdad73f027"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"regroupdata", "[", "objects_", "]"}], " ", ":=", " ", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{"TimeSeries", " ", "@", " ", 
     RowBox[{"Map", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", "\"\<IntervalStart\>\"", "]"}], ",", " ", 
          RowBox[{"#", "[", "\"\<Quantity\>\"", "]"}]}], "}"}], " ", "&"}], 
       ",", "\n", "\t", "objects"}], "\n", "]"}]}], "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"allplots", " ", "=", " ", 
   RowBox[{"GroupBy", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"Normal", "[", "usage", "]"}], ",", " ", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"toDate", "[", "#IntervalStart", "]"}], " ", "&"}], ",", 
     "\[IndentingNewLine]", "regroupdata"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7706668072816725`*^9, 3.7706668455008774`*^9}, {
  3.7707186261853886`*^9, 3.7707186644009886`*^9}, {3.770718760009218*^9, 
  3.7707187659242167`*^9}, {3.770718813960389*^9, 3.7707188203352437`*^9}, {
  3.7707188804249096`*^9, 3.770718918949659*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"fe4a0720-a68d-4c28-bee9-0ce8b3273cdc"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"allplots", "[", "date", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"date", ",", " ", 
     RowBox[{"Keys", "[", "allplots", "]"}]}], "}"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"2237a778-98ed-4d55-8b04-d2ace22e9b62"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`date$$ = 
    DateObject[{2019, 5, 2}, "Day", "Gregorian", -4.], Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`date$$], {
       DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 22}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 23}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 25}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 26}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 2}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 7}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 8}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 9}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 10}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 11}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 12}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 13}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 14}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 15}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 16}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 17}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 18}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 19}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 20}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 21}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 22}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 23}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 24}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 25}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 26}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 27}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 28}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 29}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 30}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 3, 31}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 1}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 2}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 3}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 4}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 5}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 6}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 7}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 8}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 9}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 10}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 11}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 12}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 13}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 14}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 20}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 21}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 22}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 23}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 24}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 25}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 29}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 4, 30}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 1}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 2}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 6}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 8}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 9}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 10}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 11}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 12}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 13}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 14}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 15}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 16}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 17}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 18}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 19}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 20}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 21}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 22}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 23}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 24}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 25}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 26}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 27}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 28}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 29}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 30}, "Day", "Gregorian", -4.], 
       DateObject[{2019, 5, 31}, "Day", "Gregorian", -4.]}}}, 
    Typeset`size$$ = {360., {110., 115.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`date$47946$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`date$$ = 
        DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`date$$, $CellContext`date$47946$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`allplots[$CellContext`date$$], 
      "Specifications" :> {{$CellContext`date$$, {
          DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 22}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 23}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 25}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 26}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 2}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 7}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 8}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 9}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 10}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 11}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 12}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 13}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 14}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 15}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 16}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 17}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 18}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 19}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 20}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 21}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 22}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 23}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 24}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 25}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 26}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 27}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 28}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 29}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 30}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 3, 31}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 1}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 2}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 3}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 4}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 5}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 6}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 7}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 8}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 9}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 10}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 11}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 12}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 13}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 14}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 20}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 21}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 22}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 23}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 24}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 25}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 29}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 4, 30}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 1}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 2}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 6}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 8}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 9}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 10}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 11}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 12}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 13}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 14}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 15}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 16}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 17}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 18}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 19}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 20}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 21}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 22}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 23}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 24}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 25}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 26}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 27}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 28}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 29}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 30}, "Day", "Gregorian", -4.], 
          DateObject[{2019, 5, 31}, "Day", "Gregorian", -4.]}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {162., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.770718779514442*^9, 3.770718827217593*^9, 
  3.7707188923134584`*^9, 3.77073362068127*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ecde0022-cbf8-4a4a-99b7-6dfc0a5260a8"],

Cell["\<\
The y-axis of each day\[CloseCurlyQuote]s energy consumption plot indicates \
the kWh energy consumption within a 15 minute interval. \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.770726368018245*^9, 3.770726488408016*^9}, {
   3.770729718748583*^9, 3.7707297218397818`*^9}, 
   3.77073362068127*^9},ExpressionUUID->"1e24125a-a4d9-4c1d-b1e9-\
303e4603fdb1"]
}, Open  ]],

Cell["\<\
A visual inspection of each day\[CloseCurlyQuote]s energy consumption yields \
a number of interesting observations.  First, the energy consumption has a \
baseline in the range of  approximately 0.1 to 0 .2 kWh per fifteen minutes \
when the hot tub is operating.  Also of note when the hot tub is operating \
are the periodic spikes in consumption throughout the day.  These spikes are \
presumably the electric resistance heating element responsible for heating \
the hot tub\[CloseCurlyQuote]s water.  These spikes are noticeably absent \
during the period that the hot tub is off.  The baseline consumption is also \
noticeably lower while the hot tub is off.  During that time the baseline \
appears to be closer to 0.05 kWh per 15 minutes.   

By chance, the daily consumption of February 1 illustrates the primary \
features that allow a determination of those days during which the Nissan \
Leaf was charged, or the sauna was used.  When the Nissan Leaf is charged the \
baseline shifts noticeably higher to approximately 0.5 kWh per 15 minutes, as \
can be seen from approximately 17:00 on February 1. The sauna\
\[CloseCurlyQuote]s consumption goes as high as 1.5 kWh per 15 minutes, as \
can be seen at approximately 09:00 on February 1.  \
\>", "Text",
 CellChangeTimes->{{3.7707246835571604`*^9, 3.7707247219660864`*^9}, {
  3.7707247819492235`*^9, 3.7707248560567913`*^9}, {3.7707249506189404`*^9, 
  3.7707249592290106`*^9}, {3.770724999928054*^9, 3.7707250554077997`*^9}, {
  3.7707253442514095`*^9, 3.7707253968223677`*^9}, {3.7707257394914885`*^9, 
  3.7707258061623926`*^9}, {3.770729731330765*^9, 3.7707297945860243`*^9}, {
  3.770729839825412*^9, 3.7707300007110066`*^9}, {3.7707300904532657`*^9, 
  3.770730180712636*^9}, {3.7707302952216825`*^9, 
  3.7707304532920294`*^9}},ExpressionUUID->"9d73a7af-bca5-4d3d-896f-\
1b1c84d36314"],

Cell[CellGroupData[{

Cell["\<\
While not perfect, visual inspection of the data allows a determination of \
those days during which the Nissan Leaf was unplugged, or the sauna was used. \
 Those days are indicated below by the variable \[OpenCurlyDoubleQuote]evDays\
\[CloseCurlyDoubleQuote].  \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7707304696981544`*^9, 3.770730525030565*^9}, {
  3.7707335427885823`*^9, 
  3.7707336081638827`*^9}},ExpressionUUID->"90f054af-ec02-47bc-939a-\
69307f99397d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evDays", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "6"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "7"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "15"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "16"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "17"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "18"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "22"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "23"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "25"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "2", ",", "26"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "3", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "3", ",", "15"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "3", ",", "16"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "3", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "6"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "7"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "12"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "13"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "14"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "20"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "21"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "22"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "23"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "24"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "25"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "29"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "4", ",", "30"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "1"}], "}"}], "]"}], ",", ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "6"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "8"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "9"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "10"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "11"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "12"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "13"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "14"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "15"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "16"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "17"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "20"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "21"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "23"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "24"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "25"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "29"}], "}"}], "]"}], ",", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "5", ",", "30"}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7706765956644125`*^9, 3.7706767585887427`*^9}, {
   3.770676846594084*^9, 3.7706768791382074`*^9}, {3.770676915978074*^9, 
   3.770676934923012*^9}, {3.770677100059848*^9, 3.770677131161823*^9}, {
   3.7706771849875536`*^9, 3.770677189988*^9}, {3.7706779671086392`*^9, 
   3.7706780434446125`*^9}, 3.770678266068883*^9, {3.770678385723874*^9, 
   3.7706784090839386`*^9}, {3.7706785415964355`*^9, 
   3.7706785862699804`*^9}, {3.7706788880549192`*^9, 3.770678929398976*^9}, {
   3.770678976327181*^9, 3.770679002996826*^9}, {3.770679112013316*^9, 
   3.770679121570879*^9}, {3.7706791600965586`*^9, 3.770679210797748*^9}, {
   3.7706793571187687`*^9, 3.770679523275112*^9}, {3.7706796517798047`*^9, 
   3.7706796600008836`*^9}, {3.7706797381603193`*^9, 3.770679804998756*^9}, {
   3.7706799851251755`*^9, 3.770680018715681*^9}, {3.7706800492561903`*^9, 
   3.770680102606986*^9}, {3.770680138796917*^9, 3.7706802449033427`*^9}, {
   3.770680278025378*^9, 3.7706803085840693`*^9}, {3.7706803884649525`*^9, 
   3.770680403233717*^9}, 3.7707336081648827`*^9, {3.770760337630715*^9, 
   3.7707603450783777`*^9}, 3.77076152191553*^9, {3.770761652905606*^9, 
   3.770761659229366*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"dc14a226-66b8-43f9-9506-7a6683a84733"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pulling it all together", "Section",
 CellChangeTimes->{{3.7707336660595417`*^9, 
  3.770733669869297*^9}},ExpressionUUID->"06b3cb2e-0853-4265-825f-\
5341e5d2649c"],

Cell["\<\
This step puts all daily usage and daily mean temperature values in a Dataset \
by date.\
\>", "Text",
 CellChangeTimes->{{3.7707584367500877`*^9, 3.7707584518470583`*^9}, {
  3.770758507767914*^9, 
  3.7707585230693836`*^9}},ExpressionUUID->"7eb8d374-c8f8-4880-8070-\
f9d1db81a7a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usageTempDataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"toDate", "[", 
      RowBox[{"usagandTempTemporalData", "[", "\"\<Dates\>\"", "]"}], "]"}], 
     "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<DailyUsage\>\"", ",", "\"\<DailyTemperature\>\""}], 
           "}"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"usagandTempTemporalData", "[", "\"\<ValueList\>\"", "]"}], 
        "]"}]}], ")"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770735269265931*^9, 3.7707353596047535`*^9}, {
   3.770735498207779*^9, 3.770735499091134*^9}, {3.770740468029954*^9, 
   3.770740495419777*^9}, {3.770752074192711*^9, 3.770752077001915*^9}, {
   3.770752171824155*^9, 3.770752188450838*^9}, {3.7707522572124553`*^9, 
   3.7707522601522903`*^9}, {3.770752302202795*^9, 3.77075236125762*^9}, {
   3.770752532528693*^9, 3.770752541965656*^9}, {3.770752900725092*^9, 
   3.770752906267001*^9}, {3.77075293774186*^9, 3.7707529456055245`*^9}, {
   3.7707530373421793`*^9, 3.770753039812318*^9}, {3.7707531010006285`*^9, 
   3.77075310722956*^9}, 3.7707541599817047`*^9, {3.7707545247207556`*^9, 
   3.7707545301082363`*^9}, {3.7707567205869904`*^9, 3.77075672459581*^9}, {
   3.770756833167868*^9, 3.7707568363482056`*^9}, {3.770757998934641*^9, 
   3.770758005188981*^9}, {3.770758079691722*^9, 3.7707581266611547`*^9}, {
   3.7707581971766253`*^9, 3.770758206142438*^9}, {3.7707582533149014`*^9, 
   3.770758267170239*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"d1e2b758-8cda-48d5-a72b-3334757f4a2f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 120, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 120], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[20]} -> 1, {All, "DailyUsage"} -> 
           1, {All, "DailyTemperature"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[75], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "DailyUsage" -> TypeSystem`PackageScope`AtomShape[60], 
               "DailyTemperature" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2067085723], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 120], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[2067085723]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    All, "DailyUsage"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[All, "DailyUsage"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    All, "DailyTemperature"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[All, "DailyTemperature"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 1 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 1 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["40.92"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-13.78"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 2 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 2 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-22.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 2}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 3 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 3 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["28.87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.28"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 4 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 4 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24.57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 5 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 5 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.92"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 6 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 6 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 7 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 7 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["37.47"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 7}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 8 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 8 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.36"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.78"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 9 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 9 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.99"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 10 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 10 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.71"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 11 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 11 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16.43"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-6.22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 12 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 12 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.04"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-9.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 13 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 13 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.81"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 14 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 14 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 15 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 15 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["25.07"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 15}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 16 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 16 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["55.29"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 16}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 17 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 17 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["48.77"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 17}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 18 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 18 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32.65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-5.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 18}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 19 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 19 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.67"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 20 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 20 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][{
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    120 (-20), {1, 120 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 120 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    120, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 120 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    120 20, {1, 120 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    120 (-20), {1, 120 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 120 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    120, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 120 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    120 20, {1, 120 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 864363413]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[864363413][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {341., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.770735310836757*^9, 3.7707353612981424`*^9, {3.770740480525299*^9, 
   3.7707404976584015`*^9}, 3.7707408180359383`*^9, 3.7707520828278856`*^9, 
   3.770752261669609*^9, {3.7707523112692537`*^9, 3.770752363104868*^9}, 
   3.770752543611844*^9, 3.7707529152152405`*^9, 3.7707529510786114`*^9, 
   3.7707530414431505`*^9, 3.7707531132447815`*^9, 3.7707541631844435`*^9, 
   3.7707545348471603`*^9, 3.770756728023316*^9, 3.770756837966915*^9, 
   3.77075800613348*^9, {3.770758194602023*^9, 3.7707581991388226`*^9}, {
   3.7707582597120895`*^9, 3.770758267886019*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"b3d71047-a0de-4d97-8151-7826a5a629c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This step removes all days from the dataset that had data features that \
suggest the Nissan Leaf was plugged in.  \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.770758532550371*^9, 
  3.7707585805883403`*^9}},ExpressionUUID->"e2adcc64-b756-457d-bd2d-\
9f7ca820e4f4"],

Cell[BoxData[
 RowBox[{"nonEVDays", "=", 
  RowBox[{"KeyDrop", "[", 
   RowBox[{"usageTempDataset", ",", " ", "evDays"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.770758283616586*^9, 3.7707582904291153`*^9}, {
   3.7707583856365232`*^9, 3.770758396215581*^9}, 3.7707585805883403`*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"9542cbb8-abdb-4405-a013-d3c5fd7daa49"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 71, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 71], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[36]} -> 1, {All, "DailyUsage"} -> 
           1, {All, "DailyTemperature"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[75], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "DailyUsage" -> TypeSystem`PackageScope`AtomShape[60], 
               "DailyTemperature" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[120715169], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 71], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[120715169]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2118356151][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2118356151][{All, "DailyUsage"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[All, "DailyUsage"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2118356151][{All, "DailyTemperature"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[All, "DailyTemperature"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 4 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 4 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24.57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 5 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 5 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.92"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 8 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 8 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.36"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.78"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 9 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 9 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.99"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 10 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 10 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.71"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 11 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 11 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16.43"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-6.22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 12 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 12 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.04"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-9.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 13 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 13 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.81"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 14 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 14 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 19 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 19 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.67"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 20 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 20 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 21 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 21 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 24 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 24 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 27 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 27 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["29.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 28 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 28 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-11.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 1 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 1 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.48"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-9.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 3 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 3 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.48"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-3.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 4 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 4 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 5 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 5 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.28"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 6 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 6 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][{
                    Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2118356151][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-11.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    71 (-20), {1, 71 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 71 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    71, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 71 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    71 20, {1, 71 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    71 (-20), {1, 71 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 71 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    71, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 71 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    71 20, {1, 71 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2118356151]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2118356151][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {341., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.770758291384508*^9, 3.7707583993105946`*^9, 
  3.7707585805893373`*^9, 3.7707603663732977`*^9, 3.7707616695008364`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"6d9190ff-36ad-4ca0-8c4d-44b991ec9ed7"]
}, Open  ]],

Cell["\<\
This step creates a Dataset of the dates during which the hot tub was turned \
on, and the Nissan Leaf wasn\[CloseCurlyQuote]t plugged in.\
\>", "Text",
 CellChangeTimes->{{3.770758593058194*^9, 
  3.7707586809691615`*^9}},ExpressionUUID->"e269eb45-637b-4437-b5b4-\
6d10c45c58f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hotTubon", " ", "=", " ", 
  RowBox[{"KeyDrop", "[", 
   RowBox[{"nonEVDays", ",", "hottubOff"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770758593058194*^9, 3.770758722098139*^9}, {
   3.7707588096569185`*^9, 3.7707588741734905`*^9}, {3.7707589049402113`*^9, 
   3.7707589209703436`*^9}, {3.7707589566743937`*^9, 3.770759075234245*^9}, {
   3.770759121360836*^9, 3.770759211800175*^9}, {3.770759248309431*^9, 
   3.77075928143988*^9}, {3.770759329362811*^9, 3.770759345044718*^9}, 
   3.7707594151534643`*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"bbe3436f-42f8-47a8-b30e-793671c4c412"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 59, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 59], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[37]} -> 1, {All, "DailyUsage"} -> 
           1, {All, "DailyTemperature"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[75], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "DailyUsage" -> TypeSystem`PackageScope`AtomShape[60], 
               "DailyTemperature" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[185722934], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 59], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[185722934]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2093620112][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2093620112][{All, "DailyUsage"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[All, "DailyUsage"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2093620112][{All, "DailyTemperature"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[All, "DailyTemperature"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 4 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 4 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24.57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 5 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 5 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.92"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 8 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 8 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.36"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.78"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 8}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 9 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 9 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.99"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 9}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 10 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 10 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.71"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 10}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 11 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 11 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16.43"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-6.22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 11}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 12 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 12 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.04"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-9.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 12}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 13 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 13 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.81"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 13}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 14 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 14 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-2.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 14}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 19 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 19 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.67"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 20 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 20 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-16.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 20}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 21 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 21 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-4.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 21}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 24 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 24 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 24}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 27 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 27 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["29.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 28 Feb 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 28 Feb 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-11.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 2, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 1 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 1 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.48"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-9.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 1}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 3 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 3 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.48"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-3.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 4 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 4 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-0.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 5 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 5 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-7.28"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 6 Mar 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 6 Mar 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][{
                    Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2093620112][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-11.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 3, 6}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    59 (-20), {1, 59 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 59 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    59, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 59 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    59 20, {1, 59 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    59 (-20), {1, 59 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 59 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    59, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 59 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    59 20, {1, 59 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2093620112]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2093620112][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {341., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.770759417374242*^9, 3.7707603734136543`*^9, 
  3.770761673603197*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"91197df5-6587-4ec9-818a-12f34e8edca7"]
}, Open  ]],

Cell["\<\
This step creates a Dataset of the dates during which the hot tub was turned \
off, and the Nissan Leaf wasn\[CloseCurlyQuote]t plugged in.\
\>", "Text",
 CellChangeTimes->{{3.7707634199267583`*^9, 3.7707634337325044`*^9}, {
  3.770763468021742*^9, 
  3.770763498413761*^9}},ExpressionUUID->"d236c546-e897-4e43-8b15-\
806005025557"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hottubOffPartial", "=", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{"nonEVDays", ",", "hottubOn1"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7707597231839128`*^9, 3.7707597910783553`*^9}, 
   3.7707635265712433`*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"3cdecd67-356f-4ed0-a99e-ca21aa01ccbb"],

Cell[BoxData[
 RowBox[{"hottubOffAll", "=", 
  RowBox[{"KeyDrop", "[", 
   RowBox[{"hottubOffPartial", ",", "hottubOn2"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7707597956665783`*^9, 3.7707598349186583`*^9}, 
   3.7707635265712433`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"dc37137e-a28f-491b-a8de-8b23291b0cc2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 12, "Length" -> 12, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 12], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[38]} -> 1, {All, "DailyUsage"} -> 
           1, {All, "DailyTemperature"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[75], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "DailyUsage" -> TypeSystem`PackageScope`AtomShape[60], 
               "DailyTemperature" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 12, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[119636918], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[DateObject], 
          TypeSystem`Struct[{"DailyUsage", "DailyTemperature"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 12], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[119636918]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2070886320][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyUsage\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2070886320][{All, "DailyUsage"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[All, "DailyUsage"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DailyTemperature\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2070886320][{All, "DailyTemperature"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[All, "DailyTemperature"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Mon 15 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 15 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 15}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 16 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 16 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 16}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Wed 17 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 17 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 17}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Thu 18 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Thu 18 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 18}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 19 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 19 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 19}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 26 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 26 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 26}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 27 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 27 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 27}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 28 Apr 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 28 Apr 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.54"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 4, 28}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Fri 3 May 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Fri 3 May 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.28"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 3}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sat 4 May 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 4 May 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.77"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12.39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 4}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Sun 5 May 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Sun 5 May 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 5}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes[
                    StyleBox["\"Tue 7 May 2019\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 7 May 2019\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][{
                    Key[
                    DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.]]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2070886320][
                   GeneralUtilities`Slice[
                    Key[
                    DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.]]]], 
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13.91"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.]], 
                   Key["DailyUsage"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
                  GeneralUtilities`Slice[
                   Key[
                    DateObject[{2019, 5, 7}, "Day", "Gregorian", -4.]], 
                   Key["DailyTemperature"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2070886320]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2070886320][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {320., {167., 173.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7707598382472315`*^9, 3.77076168127045*^9, 
  3.7707635265712433`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"19fa5961-91f2-4e1e-bc3c-77212090f22f"]
}, Open  ]],

Cell["\<\
This step calculates the mean kWh consumption, and mean daily temperature for \
periods with the hot tub off and on respectively.\
\>", "Text",
 CellChangeTimes->{{3.7707640347758055`*^9, 3.770764052409127*^9}, {
   3.770764501250012*^9, 3.7707645394322987`*^9}, 
   3.7707668568106785`*^9},ExpressionUUID->"fbae3105-65ed-4595-bf00-\
f7c06e3e27f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hottubOffAll", "[", 
  RowBox[{"Mean", ",", "\"\<DailyUsage\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"hottubOffAll", "[", 
  RowBox[{"Mean", ",", "\"\<DailyTemperature\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.770761003468132*^9, 3.7707610701161823`*^9}, {
  3.770761306745737*^9, 3.770761329959277*^9}, {3.7707616987403545`*^9, 
  3.7707617139160905`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"6cc7b79a-74f2-42d4-a6cb-8addccbaf01a"],

Cell[BoxData["9.29083333333333`"], "Output",
 CellChangeTimes->{3.7707613309233327`*^9, 3.7707616844757175`*^9, 
  3.7707617153059287`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"a5e19f4a-bdf2-451f-a58f-0428cb60dfc8"],

Cell[BoxData["7.755833333333334`"], "Output",
 CellChangeTimes->{3.7707613309233327`*^9, 3.7707616844757175`*^9, 
  3.770761715313959*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"cacf6a85-951a-452f-8025-5355b5984ad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hotTubon", "[", 
  RowBox[{"Mean", ",", "\"\<DailyUsage\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"hotTubon", "[", 
  RowBox[{"Mean", ",", "\"\<DailyTemperature\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.770761165237712*^9, 3.770761193716604*^9}, {
  3.7707613612282205`*^9, 3.7707614017750936`*^9}, {3.7707617257050953`*^9, 
  3.7707617449534483`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"67d248f4-85ea-413e-abca-4623c18c0c19"],

Cell[BoxData["19.357288135593215`"], "Output",
 CellChangeTimes->{
  3.7707614032648044`*^9, 3.7707616878185325`*^9, {3.7707617353876495`*^9, 
   3.7707617475754175`*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"5b1183ec-6a24-4b15-b968-ed9c25a86750"],

Cell[BoxData[
 RowBox[{"-", "0.3666101694915258`"}]], "Output",
 CellChangeTimes->{
  3.7707614032648044`*^9, 3.7707616878185325`*^9, {3.7707617353876495`*^9, 
   3.7707617475754175`*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"9b085aec-d17e-434e-b7ae-1a460f4ca938"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.770763676998889*^9, 
  3.770763679015195*^9}},ExpressionUUID->"eeabb1b2-ca6e-4a1f-aa8d-\
d5d5437de7f8"],

Cell["\<\
The data suggest that the hot tub consumes approximately 10 kWh per day.  At \
$0.16 per kWh that will amount to approximately $560 per year to operate the \
hot tub.  According to the New England ISO\[CloseCurlyQuote]s 2017 Electric \
Generator Air Emissions Report (see the link below) the carbon emissions rate \
is 0.682 pounds per kWh.  Over the course of a year it will account for \
approximately 2,500 pounds of carbon dioxide emissions.  

This methodology is clearly imprecise.  The manual determination of those \
days with the Nissan Leaf plugged in is one obvious source of potential \
error.  The impact of weather also  impacts the hot tub\[CloseCurlyQuote]s \
energy consumption, and this analysis does not account for that impact.  The \
period during which the hot tub was on was colder on average than the period \
that it was off.  This would account for some of the additional consumption \
while the hot tub was on.  Without further analysis it is difficult to \
estimate the impact of weather over the full course of a year.\
\>", "Text",
 CellChangeTimes->{
  3.7707636970962677`*^9, {3.770763882343665*^9, 3.770763896152381*^9}, {
   3.770764014348112*^9, 3.770764019535555*^9}, {3.770764554615779*^9, 
   3.7707645567046566`*^9}, {3.7707648117333975`*^9, 
   3.7707648122505703`*^9}, {3.7707648859326406`*^9, 
   3.7707648882942915`*^9}, {3.7707650591972866`*^9, 3.770765081507929*^9}, {
   3.7707651144725227`*^9, 3.7707651264878836`*^9}, {3.7707653265756197`*^9, 
   3.770765416872897*^9}, {3.7707654891541214`*^9, 3.770765643741424*^9}, {
   3.7707656748840885`*^9, 3.7707656814340053`*^9}, {3.7707657922309303`*^9, 
   3.7707657931231556`*^9}, {3.770765863325881*^9, 3.7707658766489573`*^9}, {
   3.7707660658320847`*^9, 3.7707661389487734`*^9}, {3.7707661777841997`*^9, 
   3.7707662110051055`*^9}, {3.770766248039565*^9, 3.770766253178737*^9}, {
   3.770766331799465*^9, 3.7707665169433413`*^9}, {3.770766561437668*^9, 
   3.770766584972441*^9}, {3.7707668224515333`*^9, 
   3.7707668352457805`*^9}},ExpressionUUID->"ff480f96-66ce-4c8b-aad3-\
e08364309153"],

Cell["\<\
https://www.iso-ne.com/static-assets/documents/2019/04/2017_emissions \
_report.pdf\
\>", "Text",
 CellChangeTimes->{{3.7707648565736575`*^9, 
  3.770764877472289*^9}},ExpressionUUID->"a55585c1-65eb-4ccc-b41a-\
ada6fc710b5d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{896, 817},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 398, 8, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
   CellTags->"Title"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 890454, 17048}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 398, 8, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
 CellTags->"Title"],
Cell[981, 32, 276, 6, 53, "Subtitle",ExpressionUUID->"01592b2e-a6ea-48f3-a6ee-4260a58d89e6"],
Cell[1260, 40, 407, 6, 31, "Author",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[CellGroupData[{
Cell[1692, 50, 210, 4, 67, "Section",ExpressionUUID->"4bdd3023-3314-4d31-8103-e3391eefafb0"],
Cell[1905, 56, 1221, 19, 122, "Text",ExpressionUUID->"66c1f441-94a7-4fdc-b8d2-e8204dbfde2d"],
Cell[CellGroupData[{
Cell[3151, 79, 504, 9, 28, "Input",ExpressionUUID->"c0dc7183-a5ea-4080-9cbb-ba49a1b65e11"],
Cell[3658, 90, 88599, 1830, 583, "Output",ExpressionUUID->"a53ed422-a937-4350-a5c9-4b92f20b7bfe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92306, 1926, 257, 4, 67, "Section",ExpressionUUID->"7fc2d02f-399e-4fe4-85fa-23f9cc9f4fd1"],
Cell[92566, 1932, 907, 15, 56, "Text",ExpressionUUID->"3a1b5f95-c471-4650-95cc-6dfce006145f"],
Cell[CellGroupData[{
Cell[93498, 1951, 527, 11, 42, "Input",ExpressionUUID->"4c4185c5-246d-4f89-89cd-72c10e9b463e"],
Cell[94028, 1964, 278, 5, 41, "Output",ExpressionUUID->"d1f4ab61-0444-4586-8149-019985a34772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94343, 1974, 1618, 34, 72, "Input",ExpressionUUID->"317c9f72-3423-4c07-98f6-41a616131f9c"],
Cell[95964, 2010, 167260, 2767, 259, "Output",ExpressionUUID->"0abd3827-9eb3-4d6e-8e54-62678c2e0a61"]
}, Open  ]],
Cell[263239, 4780, 165, 3, 34, "Text",ExpressionUUID->"2cf66dd9-fbe7-4911-8b4e-0cd0427bdae6"],
Cell[263407, 4785, 724, 12, 100, "Text",ExpressionUUID->"83758329-0e80-46d4-bf21-438e8630be49"],
Cell[CellGroupData[{
Cell[264156, 4801, 279, 5, 28, "Input",ExpressionUUID->"a4a6260a-aae9-4dae-8e3e-7e34c2cff28b"],
Cell[264438, 4808, 261, 5, 40, "Output",ExpressionUUID->"e073d28e-7602-4c27-b8c1-754bf2bf4932"]
}, Open  ]],
Cell[264714, 4816, 947, 15, 122, "Text",ExpressionUUID->"913a1490-e68b-4512-8b67-638fcd7a022f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265698, 4836, 170, 3, 67, "Section",ExpressionUUID->"d0e6a292-803f-4af8-a691-ab356f3ab3b9"],
Cell[265871, 4841, 506, 9, 56, "Text",ExpressionUUID->"aec81e7b-be19-4b72-9619-f480636b9a28"],
Cell[266380, 4852, 1633, 43, 86, "Input",ExpressionUUID->"9c590e90-b7bc-4abc-950e-c61de530177d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268050, 4900, 159, 3, 67, "Section",ExpressionUUID->"2b959902-3389-451a-b56b-f832d9dbb45b"],
Cell[CellGroupData[{
Cell[268234, 4907, 160, 3, 53, "Subsection",ExpressionUUID->"689699ba-c82c-4291-90db-70f685f3bf55"],
Cell[CellGroupData[{
Cell[268419, 4914, 322, 7, 34, "Text",ExpressionUUID->"84c25653-c90f-4e2c-a194-33ff45a27d06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[268744, 4923, 694, 15, 86, "Input",ExpressionUUID->"fa03f0b1-c0c1-4942-b81b-17a86ea66b88",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[269441, 4940, 74340, 1271, 71, "Output",ExpressionUUID->"ae1a5398-d357-4113-a0bc-bcdce7f05c72",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[343818, 6216, 572, 10, 56, "Text",ExpressionUUID->"fb56de0a-27ab-456d-9ad1-c3b03243bc27",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[344393, 6228, 249, 4, 28, "Input",ExpressionUUID->"595293da-9c7b-4245-a20d-e02fdf4da0c7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[344645, 6234, 98211, 1711, 248, "Output",ExpressionUUID->"6037c071-837b-4e4f-858a-c3223d706e89",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[442893, 7950, 395, 8, 56, "Text",ExpressionUUID->"76c10207-25d7-49bf-8ac5-05994f808b7d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[443291, 7960, 579, 9, 28, "Input",ExpressionUUID->"77f3c3b6-9db0-4a27-a597-4ff7659da1b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[443873, 7971, 15598, 305, 71, "Output",ExpressionUUID->"9fda4e7d-88f2-4c2e-bfbb-8bccdd85c6f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459520, 8282, 164, 3, 53, "Subsection",ExpressionUUID->"a6751fd1-4f5e-4e05-bbea-34aa218284d3"],
Cell[CellGroupData[{
Cell[459709, 8289, 326, 7, 34, "Text",ExpressionUUID->"75c6b58b-95bc-4217-9dc7-8d54cb32e7b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[460038, 8298, 689, 14, 28, "Input",ExpressionUUID->"df5c37ed-ef85-4e66-9fe1-85fc62639521",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[460730, 8314, 15374, 301, 71, "Output",ExpressionUUID->"7be6be9f-ec23-41dc-ae79-84f0069c297f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[476141, 8620, 247, 4, 34, "Text",ExpressionUUID->"ef844aa6-85da-4945-94d3-36c59203cf64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[476391, 8626, 627, 13, 28, "Input",ExpressionUUID->"b40c406a-e905-4023-87a5-42fc89492c9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[477021, 8641, 15873, 326, 247, "Output",ExpressionUUID->"f3aef21f-deb4-4b1f-ac21-49f738945453",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[492909, 8970, 323, 6, 34, "Text",ExpressionUUID->"c5b2a6bf-6f59-44b4-a427-b77bd04ee982"],
Cell[CellGroupData[{
Cell[493257, 8980, 382, 7, 28, "Input",ExpressionUUID->"b6613e6d-b893-426f-9584-07376efc0c06"],
Cell[493642, 8989, 19779, 381, 71, "Output",ExpressionUUID->"23f7ab56-7a4a-45c6-a70a-e6d16801e9e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513458, 9375, 507, 10, 28, "Input",ExpressionUUID->"53c6e39b-640b-4856-9f23-24918118b38b"],
Cell[513968, 9387, 15767, 323, 247, "Output",ExpressionUUID->"48d623ff-8b9e-4c34-9de5-e2320fde8cd6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529796, 9717, 169, 3, 67, "Section",ExpressionUUID->"d3fada7c-6f43-4c97-9023-75b8ac9bbf84"],
Cell[529968, 9722, 418, 8, 56, "Text",ExpressionUUID->"7e3dd5d3-5afc-4aac-93f3-4c6ab82546a5"],
Cell[530389, 9732, 798, 18, 69, "Code",ExpressionUUID->"5c3918cc-212b-43a6-a49f-c7cdad73f027"],
Cell[531190, 9752, 1263, 29, 219, "Input",ExpressionUUID->"fe4a0720-a68d-4c28-bee9-0ce8b3273cdc"],
Cell[532456, 9783, 374, 8, 86, "Input",ExpressionUUID->"2237a778-98ed-4d55-8b04-d2ace22e9b62"],
Cell[CellGroupData[{
Cell[532855, 9795, 16603, 280, 349, "Output",ExpressionUUID->"ecde0022-cbf8-4a4a-99b7-6dfc0a5260a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[549461, 10077, 413, 8, 34, "Text",ExpressionUUID->"1e24125a-a4d9-4c1d-b1e9-303e4603fdb1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[549889, 10088, 1865, 28, 254, "Text",ExpressionUUID->"9d73a7af-bca5-4d3d-896f-1b1c84d36314"],
Cell[CellGroupData[{
Cell[551779, 10120, 523, 10, 56, "Text",ExpressionUUID->"90f054af-ec02-47bc-939a-69307f99397d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[552305, 10132, 7503, 178, 314, "Input",ExpressionUUID->"dc14a226-66b8-43f9-9506-7a6683a84733",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[559857, 10316, 170, 3, 67, "Section",ExpressionUUID->"06b3cb2e-0853-4265-825f-5341e5d2649c"],
Cell[560030, 10321, 293, 7, 34, "Text",ExpressionUUID->"7eb8d374-c8f8-4880-8070-f9d1db81a7a3"],
Cell[CellGroupData[{
Cell[560348, 10332, 1753, 33, 86, "Input",ExpressionUUID->"d1e2b758-8cda-48d5-a72b-3334757f4a2f"],
Cell[562104, 10367, 91360, 1835, 583, "Output",ExpressionUUID->"b3d71047-a0de-4d97-8151-7826a5a629c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653501, 12207, 322, 7, 34, "Text",ExpressionUUID->"e2adcc64-b756-457d-bd2d-9f7ca820e4f4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[653826, 12216, 422, 8, 28, "Input",ExpressionUUID->"9542cbb8-abdb-4405-a013-d3c5fd7daa49",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[654251, 12226, 91387, 1848, 583, "Output",ExpressionUUID->"6d9190ff-36ad-4ca0-8c4d-44b991ec9ed7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[745653, 14077, 290, 6, 34, "Text",ExpressionUUID->"e269eb45-637b-4437-b5b4-6d10c45c58f1"],
Cell[CellGroupData[{
Cell[745968, 14087, 618, 11, 28, "Input",ExpressionUUID->"bbe3436f-42f8-47a8-b30e-793671c4c412"],
Cell[746589, 14100, 91282, 1847, 583, "Output",ExpressionUUID->"91197df5-6587-4ec9-818a-12f34e8edca7"]
}, Open  ]],
Cell[837886, 15950, 342, 7, 34, "Text",ExpressionUUID->"d236c546-e897-4e43-8b15-806005025557"],
Cell[CellGroupData[{
Cell[838253, 15961, 394, 9, 28, "Input",ExpressionUUID->"3cdecd67-356f-4ed0-a99e-ca21aa01ccbb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[838650, 15972, 377, 8, 28, "Input",ExpressionUUID->"dc37137e-a28f-491b-a8de-8b23291b0cc2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[839030, 15982, 45729, 925, 359, "Output",ExpressionUUID->"19fa5961-91f2-4e1e-bc3c-77212090f22f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[884774, 16910, 358, 7, 56, "Text",ExpressionUUID->"fbae3105-65ed-4595-bf00-f7c06e3e27f2"],
Cell[CellGroupData[{
Cell[885157, 16921, 478, 9, 48, "Input",ExpressionUUID->"6cc7b79a-74f2-42d4-a6cb-8addccbaf01a"],
Cell[885638, 16932, 222, 4, 32, "Output",ExpressionUUID->"a5e19f4a-bdf2-451f-a58f-0428cb60dfc8"],
Cell[885863, 16938, 221, 4, 32, "Output",ExpressionUUID->"cacf6a85-951a-452f-8025-5355b5984ad4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[886121, 16947, 472, 9, 48, InheritFromParent,ExpressionUUID->"67d248f4-85ea-413e-abca-4623c18c0c19"],
Cell[886596, 16958, 254, 5, 32, "Output",ExpressionUUID->"5b1183ec-6a24-4b15-b968-ed9c25a86750"],
Cell[886853, 16965, 271, 6, 32, "Output",ExpressionUUID->"9b085aec-d17e-434e-b7ae-1a460f4ca938"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[887173, 16977, 155, 3, 67, "Section",ExpressionUUID->"eeabb1b2-ca6e-4a1f-aa8d-d5d5437de7f8"],
Cell[887331, 16982, 2099, 32, 232, "Text",ExpressionUUID->"ff480f96-66ce-4c8b-aad3-e08364309153"],
Cell[889433, 17016, 235, 6, 34, "Text",ExpressionUUID->"a55585c1-65eb-4ccc-b41a-ada6fc710b5d"]
}, Open  ]]
}, Open  ]]
}
]
*)

